# @configure_input@
VERSION=@PACKAGE_VERSION@
ARCH=@build@
CYCDIR=@abs_srcdir@
prefix=@prefix@
exec_prefix=@exec_prefix@
INC_INSTALL=@includedir@/cyclone
BIN_INSTALL=@bindir@
LIB_INSTALL=@libdir@/cyclone
@SET_MAKE@
RANLIB=@RANLIB@
CC=@CC@
EXE=@EXEEXT@
O=@OBJEXT@
LDFLAGS=@LDFLAGS@
SIZEOF_WCHAR_T=@ac_cv_sizeof_wchar_t@
WCHAR_T_UNSIGNED=@WCHAR_T_UNSIGNED@

SHELL=/bin/sh
A=a
# What we do when using VC++
ifdef MS
  O=obj
  A=lib
endif

# needed for booting
CYCLONE_BOOT_LIBS:=arg\
        assert\
        buffer\
        core\
        dict\
        filename\
        fn\
        hashtable\
	iter\
        lexing\
        lineno\
        list\
        position\
        pp\
	printf\
	scanf\
        set\
        slowdict\
        string\
        xarray

# other bits of the standard library
CYCLONE_LIBS:=array\
        bitvec\
	execinfo\
        getopt\
        getopt1\
	grp\
	pwd\
        queue\
        rope\
        splay\
	tmp

CYCLONE_H:=arg.h\
	array.h\
	assert.h\
	bitvec.h\
	buffer.h\
	core.h\
	crypt.h\
	dict.h\
	execinfo.h\
	filename.h\
	fn.h\
	gc_ifc.h\
	getopt.h\
	grp.h\
	hashtable.h\
	iter.h\
	lexing.h\
	lineno.h\
	list.h\
	position.h\
	pp.h\
	pwd.h\
	queue.h\
	rope.h\
	set.h\
	slowdict.h\
	splay.h\
	string.h\
	strings.h\
	sys/cioctl.h\
	sys/ioctl.h\
	xarray.h

CYCLONE_SRCS:=absyn\
         parse_tab\
         lex\
         absynpp\
	 absyndump\
	 rgnorder\
         tcenv\
         tcutil\
         tcstmt\
         tcpat\
         tcexp\
	 formatstr\
         evexp\
         tc\
         pratt\
         cf_flowinfo\
         new_control_flow\
         toc\
         tovc\
         interface\
	 tcdecl\
         port\
	 cyclone

CYCDOC_SRCS:=cycdoc\
	lex\
	parse_tab\
	absyn\
	tcutil\
	rgnorder\
	tcenv\
	tcexp\
	tcstmt\
	tcpat\
        tc\
	tcdecl\
        pratt\
	new_control_flow\
	cf_flowinfo\
	formatstr\
	evexp\
	absynpp

BUILDLIB_SRCS:=buildlib\
	lex\
	parse_tab\
	tcutil\
	absynpp\
	tc\
	tcdecl\
	tcexp\
	tcstmt\
	formatstr\
	evexp\
	rgnorder\
	tcenv\
	tcpat\
        partt\
	new_control_flow\
	cf_flowinfo\
	absyn

# Add XML library .h files to CYCLONE_H
ifndef NO_XML_LIB
CYCLONE_H := $(CYCLONE_H) xml/xml.h xml/xmldump.h xml/xmlparse.h
endif

# Makefiles assume this is only one file, but they could be changed.
RUNTIME:=runtime_cyc

CYCLIB:=libcyc.$(A)
CYCBOOTLIB:=libcycboot.$(A)
CYCCOMP:=cyclone$(EXE)

C_SRCS:=$(addsuffix .c, $(CYCLONE_SRCS))
C_BOOT_LIBS:=$(addsuffix .c, $(CYCLONE_BOOT_LIBS))
C_LIBS:=$(addsuffix .c, $(CYCLONE_LIBS))
O_SRCS:=$(addsuffix .$(O), $(CYCLONE_SRCS))
O_BOOT_LIBS:=$(addsuffix .$(O), $(CYCLONE_BOOT_LIBS))
O_LIBS:=$(addsuffix .$(O), $(CYCLONE_LIBS))
A_SRCS:=$(addsuffix _a.$(O), $(CYCLONE_SRCS))
A_BOOT_LIBS:=$(addsuffix _a.$(O), $(CYCLONE_BOOT_LIBS))
A_LIBS:=$(addsuffix _a.$(O), $(CYCLONE_LIBS))
PG_SRCS:=$(addsuffix _pg.$(O), $(CYCLONE_SRCS))
PG_BOOT_LIBS:=$(addsuffix _pg.$(O), $(CYCLONE_BOOT_LIBS))
PG_LIBS:=$(addsuffix _pg.$(O), $(CYCLONE_LIBS))
NOCHECK_BOOT_LIBS:=$(addsuffix _nocheck.$(O), $(CYCLONE_BOOT_LIBS))
NOCHECK_LIBS:=$(addsuffix _nocheck.$(O), $(CYCLONE_LIBS))
C_RUNTIME:=$(addsuffix .c, $(RUNTIME))

UPDATE_SRCS:=$(addsuffix .c, $(CYCLONE_SRCS) cycdoc buildlib)
