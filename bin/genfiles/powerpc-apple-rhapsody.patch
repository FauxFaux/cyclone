diff -rbBcN --exclude=CVS i686-unknown-linux/lib/arg.c powerpc-apple-rhapsody/lib/arg.c
*** i686-unknown-linux/lib/arg.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/arg.c	Thu Jun 27 17:35:18 2002
***************
*** 653,661 ****
  #define _cycalloc_atomic(n) _profile_GC_malloc_atomic(n,__FILE__ ":" __FUNCTION__,__LINE__)
  #endif
  #endif
!  typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
  struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
--- 653,659 ----
  #define _cycalloc_atomic(n) _profile_GC_malloc_atomic(n,__FILE__ ":" __FUNCTION__,__LINE__)
  #endif
  #endif
!  struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
  struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
***************
*** 675,684 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern
! char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];unsigned int Cyc_strlen(
  struct _dynforward_ptr s);int Cyc_strcmp(struct _dynforward_ptr s1,struct
  _dynforward_ptr s2);int Cyc_strncmp(struct _dynforward_ptr s1,struct _dynforward_ptr
! s2,unsigned int len);struct _dynforward_ptr Cyc_strconcat(struct _dynforward_ptr,
  struct _dynforward_ptr);extern char Cyc_Arg_Bad[8];struct Cyc_Arg_Bad_struct{char*
  tag;struct _dynforward_ptr f1;};extern char Cyc_Arg_Error[10];struct Cyc_Arg_Unit_spec_struct{
  int tag;void(*f1)();};struct Cyc_Arg_Flag_spec_struct{int tag;void(*f1)(struct
--- 673,682 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern
! char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];unsigned long Cyc_strlen(
  struct _dynforward_ptr s);int Cyc_strcmp(struct _dynforward_ptr s1,struct
  _dynforward_ptr s2);int Cyc_strncmp(struct _dynforward_ptr s1,struct _dynforward_ptr
! s2,unsigned long len);struct _dynforward_ptr Cyc_strconcat(struct _dynforward_ptr,
  struct _dynforward_ptr);extern char Cyc_Arg_Bad[8];struct Cyc_Arg_Bad_struct{char*
  tag;struct _dynforward_ptr f1;};extern char Cyc_Arg_Error[10];struct Cyc_Arg_Unit_spec_struct{
  int tag;void(*f1)();};struct Cyc_Arg_Flag_spec_struct{int tag;void(*f1)(struct
***************
*** 705,711 ****
  _tuple0{struct _dynforward_ptr f1;int f2;struct _dynforward_ptr f3;void*f4;struct
  _dynforward_ptr f5;};static void*Cyc_Arg_lookup(struct Cyc_List_List*l,struct
  _dynforward_ptr x){while(l != 0){struct _dynforward_ptr _tmp0=(*((struct _tuple0*)l->hd)).f1;
! unsigned int _tmp1=Cyc_strlen((struct _dynforward_ptr)_tmp0);if(_tmp1 > 0  && (*((
  struct _tuple0*)l->hd)).f2){if(Cyc_strncmp((struct _dynforward_ptr)x,(struct
  _dynforward_ptr)(*((struct _tuple0*)l->hd)).f1,_tmp1)== 0)return(*((struct _tuple0*)
  l->hd)).f4;}else{if(Cyc_strcmp((struct _dynforward_ptr)x,(struct _dynforward_ptr)(*((
--- 703,709 ----
  _tuple0{struct _dynforward_ptr f1;int f2;struct _dynforward_ptr f3;void*f4;struct
  _dynforward_ptr f5;};static void*Cyc_Arg_lookup(struct Cyc_List_List*l,struct
  _dynforward_ptr x){while(l != 0){struct _dynforward_ptr _tmp0=(*((struct _tuple0*)l->hd)).f1;
! unsigned long _tmp1=Cyc_strlen((struct _dynforward_ptr)_tmp0);if(_tmp1 > 0  && (*((
  struct _tuple0*)l->hd)).f2){if(Cyc_strncmp((struct _dynforward_ptr)x,(struct
  _dynforward_ptr)(*((struct _tuple0*)l->hd)).f1,_tmp1)== 0)return(*((struct _tuple0*)
  l->hd)).f4;}else{if(Cyc_strcmp((struct _dynforward_ptr)x,(struct _dynforward_ptr)(*((
***************
*** 713,719 ****
  int)_throw((void*)Cyc_Core_Not_found);}static struct _dynforward_ptr Cyc_Arg_Justify_break_line(
  struct Cyc_Buffer_t*b,int howmuch,struct _dynforward_ptr s){if(s.curr == ((struct
  _dynforward_ptr)_tag_dynforward(0,0,0)).curr)return(struct _dynforward_ptr)
! _tag_dynforward(0,0,0);if(howmuch < 0)howmuch=0;{unsigned int _tmp2=Cyc_strlen((
  struct _dynforward_ptr)s);_tmp2 <= _get_dynforward_size(s,sizeof(char))?0:((int(*)(
  struct _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
  const char*_tmp3="len <= s.size";_tag_dynforward(_tmp3,sizeof(char),
--- 711,717 ----
  int)_throw((void*)Cyc_Core_Not_found);}static struct _dynforward_ptr Cyc_Arg_Justify_break_line(
  struct Cyc_Buffer_t*b,int howmuch,struct _dynforward_ptr s){if(s.curr == ((struct
  _dynforward_ptr)_tag_dynforward(0,0,0)).curr)return(struct _dynforward_ptr)
! _tag_dynforward(0,0,0);if(howmuch < 0)howmuch=0;{unsigned long _tmp2=Cyc_strlen((
  struct _dynforward_ptr)s);_tmp2 <= _get_dynforward_size(s,sizeof(char))?0:((int(*)(
  struct _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
  const char*_tmp3="len <= s.size";_tag_dynforward(_tmp3,sizeof(char),
***************
*** 740,746 ****
  char _tmp6=*((char*)_check_dynforward_subscript(_tmp5,sizeof(char),0));char _tmp7=
  i == 0?'\n':' ';if(_get_dynforward_size(_tmp5,sizeof(char))== 1  && (_tmp6 == '\000'
   && _tmp7 != '\000'))_throw_arraybounds();*((char*)_tmp5.curr)=_tmp7;});}}{
! unsigned int _tmp8=Cyc_strlen((struct _dynforward_ptr)item);struct _dynforward_ptr
  itemsep;if(Cyc_strlen((struct _dynforward_ptr)desc)> 0){if(_tmp8 + 1 > indent)
  itemsep=indentstr;else{struct _dynforward_ptr temp=({unsigned int _tmpC=(indent - 
  _tmp8)+ 1;char*_tmpD=(char*)_cycalloc_atomic(_check_times(sizeof(char),_tmpC + 1));
--- 738,744 ----
  char _tmp6=*((char*)_check_dynforward_subscript(_tmp5,sizeof(char),0));char _tmp7=
  i == 0?'\n':' ';if(_get_dynforward_size(_tmp5,sizeof(char))== 1  && (_tmp6 == '\000'
   && _tmp7 != '\000'))_throw_arraybounds();*((char*)_tmp5.curr)=_tmp7;});}}{
! unsigned long _tmp8=Cyc_strlen((struct _dynforward_ptr)item);struct _dynforward_ptr
  itemsep;if(Cyc_strlen((struct _dynforward_ptr)desc)> 0){if(_tmp8 + 1 > indent)
  itemsep=indentstr;else{struct _dynforward_ptr temp=({unsigned int _tmpC=(indent - 
  _tmp8)+ 1;char*_tmpD=(char*)_cycalloc_atomic(_check_times(sizeof(char),_tmpC + 1));
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/assert.c powerpc-apple-rhapsody/lib/assert.c
*** i686-unknown-linux/lib/assert.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/assert.c	Thu Jun 27 17:35:18 2002
***************
*** 660,672 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};void*Cyc___assert_fail(struct _dynforward_ptr assertion,struct
! _dynforward_ptr file,unsigned int line);typedef struct{int __count;union{
! unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;typedef struct{long
! __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t Cyc_fpos_t;
! struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
! int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};int Cyc_fflush(struct Cyc___cycFILE*);int Cyc_fprintf(
  struct Cyc___cycFILE*,struct _dynforward_ptr,struct _dynforward_ptr);struct Cyc_ShortPtr_sa_struct{
  int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};
--- 660,670 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};void*Cyc___assert_fail(struct _dynforward_ptr assertion,struct
! _dynforward_ptr file,unsigned int line);struct Cyc___cycFILE;extern struct Cyc___cycFILE*
! Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;
! struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};
! struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{int
! tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};int Cyc_fflush(struct Cyc___cycFILE*);int Cyc_fprintf(
  struct Cyc___cycFILE*,struct _dynforward_ptr,struct _dynforward_ptr);struct Cyc_ShortPtr_sa_struct{
  int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/bitvec.c powerpc-apple-rhapsody/lib/bitvec.c
*** i686-unknown-linux/lib/bitvec.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/bitvec.c	Thu Jun 27 17:35:18 2002
***************
*** 661,671 ****
  _dynforward_ptr f1;};struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern
  char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];struct Cyc_Iter_Iter{
  void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,
! void*);typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}
! Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
--- 661,669 ----
  _dynforward_ptr f1;};struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern
  char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];struct Cyc_Iter_Iter{
  void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,
! void*);struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/buffer.c powerpc-apple-rhapsody/lib/buffer.c
*** i686-unknown-linux/lib/buffer.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/buffer.c	Thu Jun 27 17:35:18 2002
***************
*** 661,688 ****
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};struct Cyc_Buffer_t;struct Cyc_Buffer_t*Cyc_Buffer_create(
  unsigned int n);struct _dynforward_ptr Cyc_Buffer_contents(struct Cyc_Buffer_t*);
! unsigned int Cyc_Buffer_length(struct Cyc_Buffer_t*);void Cyc_Buffer_clear(struct
  Cyc_Buffer_t*);void Cyc_Buffer_reset(struct Cyc_Buffer_t*);void Cyc_Buffer_add_char(
  struct Cyc_Buffer_t*,char);void Cyc_Buffer_add_substring(struct Cyc_Buffer_t*,
  struct _dynforward_ptr,int offset,int len);void Cyc_Buffer_add_string(struct Cyc_Buffer_t*,
  struct _dynforward_ptr);void Cyc_Buffer_add_buffer(struct Cyc_Buffer_t*buf_dest,
  struct Cyc_Buffer_t*buf_source);struct Cyc_List_List{void*hd;struct Cyc_List_List*
! tl;};extern char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];unsigned int
! Cyc_strlen(struct _dynforward_ptr s);struct _dynforward_ptr Cyc_strncpy(struct
! _dynforward_ptr,struct _dynforward_ptr,unsigned int);struct _dynforward_ptr Cyc_zstrncpy(
! struct _dynforward_ptr,struct _dynforward_ptr,unsigned int);struct _dynforward_ptr
! Cyc_substring(struct _dynforward_ptr,int ofs,unsigned int n);struct Cyc_Buffer_t{
! struct _dynforward_ptr buffer;unsigned int position;unsigned int length;struct
! _dynforward_ptr initial_buffer;};struct Cyc_Buffer_t*Cyc_Buffer_create(
  unsigned int n){if(n < 1)n=1;{struct _dynforward_ptr s=Cyc_Core_new_string(n + 1);
  return({struct Cyc_Buffer_t*_tmp0=_cycalloc(sizeof(*_tmp0));_tmp0->buffer=s;_tmp0->position=
  0;_tmp0->length=n;_tmp0->initial_buffer=s;_tmp0;});}}struct _dynforward_ptr Cyc_Buffer_contents(
  struct Cyc_Buffer_t*b){return Cyc_substring((struct _dynforward_ptr)b->buffer,0,b->position);}
! unsigned int Cyc_Buffer_length(struct Cyc_Buffer_t*b){return(unsigned int)b->position;}
  void Cyc_Buffer_clear(struct Cyc_Buffer_t*b){b->position=0;return;}void Cyc_Buffer_reset(
  struct Cyc_Buffer_t*b){b->position=0;b->buffer=b->initial_buffer;b->length=
  _get_dynforward_size(b->buffer,sizeof(char))- 1;return;}static void Cyc_Buffer_resize(
! struct Cyc_Buffer_t*b,unsigned int more){unsigned int len=b->length;unsigned int
  new_len=len;struct _dynforward_ptr new_buffer;while(b->position + more > new_len){
  new_len=2 * new_len;}new_buffer=Cyc_Core_new_string(new_len + 1);Cyc_strncpy(
  _dynforward_ptr_decrease_size(new_buffer,sizeof(char),1),(struct _dynforward_ptr)
--- 661,688 ----
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};struct Cyc_Buffer_t;struct Cyc_Buffer_t*Cyc_Buffer_create(
  unsigned int n);struct _dynforward_ptr Cyc_Buffer_contents(struct Cyc_Buffer_t*);
! unsigned long Cyc_Buffer_length(struct Cyc_Buffer_t*);void Cyc_Buffer_clear(struct
  Cyc_Buffer_t*);void Cyc_Buffer_reset(struct Cyc_Buffer_t*);void Cyc_Buffer_add_char(
  struct Cyc_Buffer_t*,char);void Cyc_Buffer_add_substring(struct Cyc_Buffer_t*,
  struct _dynforward_ptr,int offset,int len);void Cyc_Buffer_add_string(struct Cyc_Buffer_t*,
  struct _dynforward_ptr);void Cyc_Buffer_add_buffer(struct Cyc_Buffer_t*buf_dest,
  struct Cyc_Buffer_t*buf_source);struct Cyc_List_List{void*hd;struct Cyc_List_List*
! tl;};extern char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];
! unsigned long Cyc_strlen(struct _dynforward_ptr s);struct _dynforward_ptr Cyc_strncpy(
! struct _dynforward_ptr,struct _dynforward_ptr,unsigned long);struct _dynforward_ptr
! Cyc_zstrncpy(struct _dynforward_ptr,struct _dynforward_ptr,unsigned long);struct
! _dynforward_ptr Cyc_substring(struct _dynforward_ptr,int ofs,unsigned long n);struct
! Cyc_Buffer_t{struct _dynforward_ptr buffer;unsigned int position;unsigned int length;
! struct _dynforward_ptr initial_buffer;};struct Cyc_Buffer_t*Cyc_Buffer_create(
  unsigned int n){if(n < 1)n=1;{struct _dynforward_ptr s=Cyc_Core_new_string(n + 1);
  return({struct Cyc_Buffer_t*_tmp0=_cycalloc(sizeof(*_tmp0));_tmp0->buffer=s;_tmp0->position=
  0;_tmp0->length=n;_tmp0->initial_buffer=s;_tmp0;});}}struct _dynforward_ptr Cyc_Buffer_contents(
  struct Cyc_Buffer_t*b){return Cyc_substring((struct _dynforward_ptr)b->buffer,0,b->position);}
! unsigned long Cyc_Buffer_length(struct Cyc_Buffer_t*b){return(unsigned long)b->position;}
  void Cyc_Buffer_clear(struct Cyc_Buffer_t*b){b->position=0;return;}void Cyc_Buffer_reset(
  struct Cyc_Buffer_t*b){b->position=0;b->buffer=b->initial_buffer;b->length=
  _get_dynforward_size(b->buffer,sizeof(char))- 1;return;}static void Cyc_Buffer_resize(
! struct Cyc_Buffer_t*b,unsigned int more){unsigned long len=b->length;unsigned long
  new_len=len;struct _dynforward_ptr new_buffer;while(b->position + more > new_len){
  new_len=2 * new_len;}new_buffer=Cyc_Core_new_string(new_len + 1);Cyc_strncpy(
  _dynforward_ptr_decrease_size(new_buffer,sizeof(char),1),(struct _dynforward_ptr)
***************
*** 702,713 ****
  Cyc_Buffer_resize(b,(unsigned int)len);Cyc_zstrncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(b->buffer,sizeof(char),(int)b->position),
  sizeof(char),1),(struct _dynforward_ptr)_dynforward_ptr_plus(s,sizeof(char),
! offset),(unsigned int)len);b->position=(unsigned int)new_position;return;}}void
  Cyc_Buffer_add_string(struct Cyc_Buffer_t*b,struct _dynforward_ptr s){int len=(int)
  Cyc_strlen((struct _dynforward_ptr)s);int new_position=(int)(b->position + len);if(
  new_position > b->length)Cyc_Buffer_resize(b,(unsigned int)len);Cyc_strncpy(
  _dynforward_ptr_plus(_dynforward_ptr_decrease_size(b->buffer,sizeof(char),1),
! sizeof(char),(int)b->position),(struct _dynforward_ptr)s,(unsigned int)len);b->position=(
  unsigned int)new_position;return;}void Cyc_Buffer_add_buffer(struct Cyc_Buffer_t*b,
  struct Cyc_Buffer_t*bs){Cyc_Buffer_add_substring(b,(struct _dynforward_ptr)bs->buffer,
  0,(int)bs->position);return;}
--- 702,713 ----
  Cyc_Buffer_resize(b,(unsigned int)len);Cyc_zstrncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(b->buffer,sizeof(char),(int)b->position),
  sizeof(char),1),(struct _dynforward_ptr)_dynforward_ptr_plus(s,sizeof(char),
! offset),(unsigned long)len);b->position=(unsigned int)new_position;return;}}void
  Cyc_Buffer_add_string(struct Cyc_Buffer_t*b,struct _dynforward_ptr s){int len=(int)
  Cyc_strlen((struct _dynforward_ptr)s);int new_position=(int)(b->position + len);if(
  new_position > b->length)Cyc_Buffer_resize(b,(unsigned int)len);Cyc_strncpy(
  _dynforward_ptr_plus(_dynforward_ptr_decrease_size(b->buffer,sizeof(char),1),
! sizeof(char),(int)b->position),(struct _dynforward_ptr)s,(unsigned long)len);b->position=(
  unsigned int)new_position;return;}void Cyc_Buffer_add_buffer(struct Cyc_Buffer_t*b,
  struct Cyc_Buffer_t*bs){Cyc_Buffer_add_substring(b,(struct _dynforward_ptr)bs->buffer,
  0,(int)bs->position);return;}
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/cstubs.c powerpc-apple-rhapsody/lib/cstubs.c
*** i686-unknown-linux/lib/cstubs.c	Fri Jun 21 13:28:18 2002
--- powerpc-apple-rhapsody/lib/cstubs.c	Thu Jun 27 17:35:18 2002
***************
*** 108,119 ****
      *Cyc_stdout = &Cyc_stdout_v,
      *Cyc_stderr = &Cyc_stderr_v;
  
-   // In OpenBSD getchar_unlocked is a macro and not a function, so we
-   // do this for now.
-   int __CYCLONE_GETCHAR_UNLOCKED(void) {
-     return getchar_unlocked();
-   }
- 
    FILE *_sfile_to_file(struct Cyc___cycFILE *sf) {
      if(!sf) {
        fprintf(stderr,"Attempt to access null file descriptor.\n");
--- 108,113 ----
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/cstubs.c.orig powerpc-apple-rhapsody/lib/cstubs.c.orig
*** i686-unknown-linux/lib/cstubs.c.orig	Wed Dec 31 19:00:00 1969
--- powerpc-apple-rhapsody/lib/cstubs.c.orig	Thu Jun 27 17:35:18 2002
***************
*** 0 ****
--- 1,249 ----
+ 
+   #ifdef __APPLE__
+   #include <sys/types.h>
+   #include <netinet/in.h>
+   #include <stdint.h>
+   #endif
+   #include <arpa/inet.h>
+ #if defined(__CYGWIN32__) || defined(__CYGWIN__)
+   /* These types are not defined under Cygwin for some reason */
+   typedef unsigned short uint16_t;
+   typedef unsigned long uint32_t;
+ #endif
+   uint32_t __stub_htonl(uint32_t x) {
+     return htonl(x);
+   }
+   uint16_t __stub_htons(uint16_t x) {
+     return htons(x);
+   }
+   uint32_t __stub_ntohl(uint32_t x) {
+     return ntohl(x);
+   }
+   uint16_t __stub_ntohs(uint16_t x) {
+     return ntohs(x);
+   }
+ 
+   /* OS X needs sys/types.h before dirent.h */
+   #include <sys/types.h>
+   #include <dirent.h>
+   struct Cyc___cycDIR { // must match defn in cyclone stub
+     DIR *dir;
+   };
+ 
+   // We do this because errno is probably a C macro
+   #include <errno.h>
+   int __CYCLONE_ERRNO() {
+     return errno;
+   }
+ 
+   #include "precore_c.h"
+   #include <fcntl.h>
+   int fcntl_with_arg(int fd, int cmd, long arg) {
+     return fcntl(fd, cmd, arg);
+   }
+   // We call lock a void* so we don't have to #include anything else
+   int fcntl_with_lock(int fd, int cmd, void *lock) {
+     return fcntl(fd, cmd, lock);
+   }
+ 
+   int open_with_mode(const char * s, int flags, mode_t m) {
+     return open(s,flags,m);
+   }
+ 
+   int open_without_mode(const char * s, int flags) {
+     /* Use 0 as the mode argument, in case flags contains O_CREAT.  In
+        that case the file will be created with 0 permissions; if we
+        omitted the 0 it would be created with random permissions. */
+     return open(s,flags,0);
+   }
+ 
+   #include <signal.h>
+   typedef void *Cyc_sigarg_t;
+   extern Cyc_sigarg_t Cyc_Csignal_make_SIG_DFL();
+   extern Cyc_sigarg_t Cyc_Csignal_make_SIG_ERR();
+   extern Cyc_sigarg_t Cyc_Csignal_make_SIG_IGN();
+   extern Cyc_sigarg_t Cyc_Csignal_make_SIG_HOLD();
+   extern Cyc_sigarg_t Cyc_Csignal_make_SIG_HANDLER(void (*)(int));
+   Cyc_sigarg_t sig_wrap(void (*f)(int)) {
+     if (f == SIG_DFL)
+       return Cyc_Csignal_make_SIG_DFL();
+     if (f == SIG_ERR)
+       return Cyc_Csignal_make_SIG_ERR();
+     if (f == SIG_IGN)
+       return Cyc_Csignal_make_SIG_IGN();
+   #ifdef SIG_HOLD
+     if (f == SIG_HOLD)
+       return Cyc_Csignal_make_SIG_HOLD();
+   #endif
+       return Cyc_Csignal_make_SIG_HANDLER(f);
+   }
+ 
+   #ifndef __CYGWIN__
+   Cyc_sigarg_t signal_SIG_DFL(int a) {
+     return sig_wrap(signal(a,SIG_DFL));
+   }
+   Cyc_sigarg_t signal_SIG_ERR(int a) {
+     return sig_wrap(signal(a,SIG_ERR));
+   }
+   #ifdef _SIG_HOLD_def_
+   Cyc_sigarg_t signal_SIG_HOLD(int a) {
+     return sig_wrap(signal(a,SIG_HOLD));
+   }
+   #endif
+   Cyc_sigarg_t signal_SIG_IGN(int a) {
+     return sig_wrap(signal(a,SIG_IGN));
+   }
+   #endif
+ 
+   #include <stdio.h>
+   // Define struct __cycFILE, and initialize stdin, stdout, stderr
+   struct Cyc___cycFILE { // must match defn in cyclone stub
+     FILE *file;
+   } Cyc_stdin_v, Cyc_stdout_v, Cyc_stderr_v,
+     *Cyc_stdin = &Cyc_stdin_v,
+     *Cyc_stdout = &Cyc_stdout_v,
+     *Cyc_stderr = &Cyc_stderr_v;
+ 
+   // In OpenBSD getchar_unlocked is a macro and not a function, so we
+   // do this for now.
+   int __CYCLONE_GETCHAR_UNLOCKED(void) {
+     return getchar_unlocked();
+   }
+ 
+   FILE *_sfile_to_file(struct Cyc___cycFILE *sf) {
+     if(!sf) {
+       fprintf(stderr,"Attempt to access null file descriptor.\n");
+       exit(255);
+     }
+     if(!sf->file)
+       throw(Cyc_Null_Exception); // FIX:  should be more descriptive?
+     return sf->file;
+   }
+   int Cyc_file_string_read(struct Cyc___cycFILE *sf, 
+                                  struct _tagged_arr dest,
+                                  int dest_offset, int max_count) {
+     unsigned char *new_curr = dest.curr + dest_offset;
+     size_t sz = dest.last_plus_one - new_curr;
+     FILE *fd = _sfile_to_file(sf);
+     if (new_curr < dest.base || new_curr >= dest.last_plus_one)
+       throw(Cyc_Null_Exception);
+     if(dest_offset + max_count > sz) {
+       fprintf(stderr,"Attempt to read off end of string.\n");
+       exit(255);
+     }
+     return fread(new_curr, 1, max_count, fd);
+   }
+   int Cyc_file_string_write(struct Cyc___cycFILE *sf, 
+                                   struct _tagged_arr src,
+                                   int src_offset, int max_count) {
+     size_t sz = src.last_plus_one - src.curr;
+     unsigned char *new_curr = src.curr + src_offset;
+     FILE *fd = _sfile_to_file(sf);
+     if (new_curr < src.base || new_curr >= src.last_plus_one)
+       throw(Cyc_Null_Exception);
+     if(src_offset + max_count > sz) {
+       fprintf(stderr,"Attempt to write off end of string.\n");
+       exit(255);
+     } 
+     return fwrite(new_curr, 1, max_count, fd);
+   }
+ 
+   #include <sys/types.h>
+   #include <sys/mman.h>
+   #ifndef MMAP_FAILED
+   #define MMAP_FAILED NULL
+   #endif
+   char *__stub_mmap(char *start, size_t length, int prot,
+                     int flags, int fd, off_t offset) {
+     char *retval;
+     retval = mmap(start,length,prot,flags,fd,offset);
+     if (retval == MMAP_FAILED) return NULL;
+     else return retval;
+   }
+ 
+   #include <sys/select.h>
+   void __stub_FD_CLR(int a, fd_set *b) {
+     FD_CLR(a,b);
+   }
+   int __stub_FD_ISSET(int a, fd_set *b) {
+     return FD_ISSET(a,b);
+   }
+   void __stub_FD_SET(int a, fd_set *b) {
+     FD_SET(a,b);
+   }
+   void __stub_FD_ZERO(fd_set *a) {
+     FD_ZERO(a);
+   }
+ 
+   #include <sys/socket.h>
+   #include <netinet/in.h>
+ 
+   #ifdef __APPLE__
+   typedef int socklen_t;
+   #endif
+ 
+   int accept_in(int a, const struct sockaddr_in *b, socklen_t *c) {
+     return accept(a,(struct sockaddr *)b,c);
+   }
+ 
+   int bind_in(int a, const struct sockaddr_in *b, socklen_t c) {
+     return bind(a,(struct sockaddr *)b,c);
+   }
+ 
+   int connect_in(int a, const struct sockaddr_in *b, socklen_t c) {
+     return connect(a,(struct sockaddr *)b,c);
+   }
+ 
+   int getpeername_in(int a, const struct sockaddr_in *b, socklen_t *c) {
+     return getpeername(a,(struct sockaddr *)b,c);
+   }
+ 
+   int getsockname_in(int a, const struct sockaddr_in *b, socklen_t *c) {
+     return getsockname(a,(struct sockaddr *)b,c);
+   }
+ 
+   /* sys/time.h is needed on some systems (OS X) for struct timeval */
+   #include <sys/time.h>
+   int getsockopt_int(int a, int b, int c, int *d, socklen_t *e) {
+     return getsockopt(a,b,c,d,e);
+   }
+   int getsockopt_timeval(int a, int b, int c, struct timeval *d, socklen_t *e) {
+     return getsockopt(a,b,c,d,e);
+   }
+ 
+   ssize_t recv_wrapped(int a, struct _tagged_arr b, size_t c, int d) {
+     char *p = _check_unknown_subscript(b,1,0);
+     unsigned n = _get_arr_size(b,1);  
+     if (n<c) _throw_arraybounds();
+     return recv(a,p,c,d);
+   }
+ 
+   ssize_t recvfrom_in(int a, struct _tagged_arr b, size_t c, int d,
+                       const struct sockaddr_in *e, socklen_t *f) {
+     char *p = _check_unknown_subscript(b,1,0);
+     unsigned n = _get_arr_size(b,1);  
+     if (n<c) _throw_arraybounds();
+     return recvfrom(a,p,c,d,(struct sockaddr *)e,f);
+   }
+ 
+   ssize_t send_wrapped(int a, struct _tagged_arr b, size_t c, int d) {
+     char *p = _check_unknown_subscript(b,1,0);
+     unsigned n = _get_arr_size(b,1);  
+     if (n<c) _throw_arraybounds();
+     return send(a,p,c,d);
+   }
+ 
+   ssize_t sendto_in(int a, struct _tagged_arr b, size_t c, int d,
+                     const struct sockaddr_in *e, socklen_t f) {
+     char *p = _check_unknown_subscript(b,1,0);
+     unsigned n = _get_arr_size(b,1);  
+     if (n<c) _throw_arraybounds();
+     return sendto(a,p,c,d,(struct sockaddr *)e,f);
+   }
+ 
+   int setsockopt_int(int a, int b, int c, const int *d, socklen_t e) {
+     return setsockopt(a,b,c,d,e);
+   }
+   int setsockopt_timeval(int a, int b, int c, const struct timeval *d, socklen_t e) {
+     return setsockopt(a,b,c,d,e);
+   }
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/cycstubs.c powerpc-apple-rhapsody/lib/cycstubs.c
*** i686-unknown-linux/lib/cycstubs.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/cycstubs.c	Thu Jun 27 17:35:18 2002
***************
*** 660,666 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};struct _dynforward_ptr wrap_Cbuffer_as_buffer(char*,
! unsigned int);struct Cyc_in_addr{unsigned int s_addr;};unsigned int Cyc_htonl(
  unsigned int x);unsigned short Cyc_htons(unsigned short x);unsigned int Cyc_ntohl(
  unsigned int x);unsigned short Cyc_ntohs(unsigned short x);unsigned int __stub_htonl(
  unsigned int x);unsigned short __stub_htons(unsigned short x);unsigned int
--- 660,666 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};struct _dynforward_ptr wrap_Cbuffer_as_buffer(char*,
! unsigned long);struct Cyc_in_addr{unsigned int s_addr;};unsigned int Cyc_htonl(
  unsigned int x);unsigned short Cyc_htons(unsigned short x);unsigned int Cyc_ntohl(
  unsigned int x);unsigned short Cyc_ntohs(unsigned short x);unsigned int __stub_htonl(
  unsigned int x);unsigned short __stub_htons(unsigned short x);unsigned int
***************
*** 668,825 ****
  unsigned int Cyc_htonl(unsigned int x){return __stub_htonl(x);}unsigned short Cyc_htons(
  unsigned short x){return __stub_htons(x);}unsigned int Cyc_ntohl(unsigned int x){
  return __stub_ntohl(x);}unsigned short Cyc_ntohs(unsigned short x){return
! __stub_ntohs(x);}struct Cyc_dirent{unsigned long d_ino;long d_off;unsigned short
! d_reclen;unsigned char d_type;char d_name[256];};struct Cyc___cycDIR;int Cyc_closedir(
! struct Cyc___cycDIR*);struct Cyc___cycDIR*Cyc_opendir(const char*);struct Cyc_dirent*
! Cyc_readdir(struct Cyc___cycDIR*);void Cyc_rewinddir(struct Cyc___cycDIR*);void Cyc_seekdir(
! struct Cyc___cycDIR*,long);long Cyc_telldir(struct Cyc___cycDIR*);struct Cyc_Cdirent___abstractDIR;
! struct Cyc___cycDIR{struct Cyc_Cdirent___abstractDIR*dir;};int closedir(struct Cyc_Cdirent___abstractDIR*
! d);int Cyc_closedir(struct Cyc___cycDIR*d){return closedir(d->dir);}struct Cyc_Cdirent___abstractDIR*
! opendir(const char*);static char _tmp1[32]="opendir called with NULL string";static
! struct Cyc_Core_Failure_struct Cyc___opendir_failure={Cyc_Core_Failure,{_tmp1,
! _tmp1 + 32}};struct Cyc___cycDIR*Cyc_opendir(const char*f){struct Cyc_Cdirent___abstractDIR*
! _tmp2=opendir(f);return(unsigned int)_tmp2?({struct Cyc___cycDIR*_tmp3=_cycalloc(
! sizeof(*_tmp3));_tmp3->dir=(struct Cyc_Cdirent___abstractDIR*)_tmp2;_tmp3;}): 0;}
! struct Cyc_dirent*readdir(struct Cyc_Cdirent___abstractDIR*);struct Cyc_dirent*Cyc_readdir(
! struct Cyc___cycDIR*d){return readdir(d->dir);}void rewinddir(struct Cyc_Cdirent___abstractDIR*
! d);void Cyc_rewinddir(struct Cyc___cycDIR*d){return rewinddir(d->dir);}void seekdir(
! struct Cyc_Cdirent___abstractDIR*d,long);void Cyc_seekdir(struct Cyc___cycDIR*d,
! long x){return seekdir(d->dir,x);}long telldir(struct Cyc_Cdirent___abstractDIR*d);
! long Cyc_telldir(struct Cyc___cycDIR*d){return telldir(d->dir);}int*__CYCLONE_ERRNO();
! struct Cyc_flock{short l_type;short l_whence;long l_start;long l_len;int l_pid;};
! struct Cyc_Flock_struct{int tag;struct Cyc_flock*f1;};struct Cyc_Long_struct{int tag;
! long f1;};int Cyc_fcntl(int fd,int cmd,struct _dynforward_ptr);int Cyc_open(const char*,
! int,struct _dynforward_ptr);int fcntl(int fd,int cmd);int fcntl_with_arg(int fd,int cmd,
! long arg);int fcntl_with_lock(int fd,int cmd,struct Cyc_flock*lock);int
! open_without_mode(const char*,int);int open_with_mode(const char*,int,unsigned int);
! static char _tmp5[21]="fcntl: too many args";static struct Cyc_Core_Failure_struct
! Cyc___fcntl_failure={Cyc_Core_Failure,{_tmp5,_tmp5 + 21}};int Cyc_fcntl(int fd,int
! cmd,struct _dynforward_ptr argv){if(_get_dynforward_size(argv,sizeof(void*))== 0)
! return fcntl(fd,cmd);else{if(_get_dynforward_size(argv,sizeof(void*))!= 1)(int)
! _throw((void*)& Cyc___fcntl_failure);else{void*_tmp6=*((void**)
! _check_dynforward_subscript(argv,sizeof(void*),0));long _tmp7;struct Cyc_flock*
! _tmp8;_LL1: if(*((int*)_tmp6)!= 1)goto _LL3;_tmp7=((struct Cyc_Long_struct*)_tmp6)->f1;
! _LL2: return fcntl_with_arg(fd,cmd,_tmp7);_LL3: if(*((int*)_tmp6)!= 0)goto _LL0;
! _tmp8=((struct Cyc_Flock_struct*)_tmp6)->f1;_LL4: return fcntl_with_lock(fd,cmd,(
! struct Cyc_flock*)_tmp8);_LL0:;}}}int Cyc_open(const char*s,int i,struct
! _dynforward_ptr ms){if(_get_dynforward_size(ms,sizeof(unsigned int))>= 1)return
! open_with_mode(s,i,*((unsigned int*)_check_dynforward_subscript(ms,sizeof(
! unsigned int),0)));else{return open_without_mode(s,i);}}enum Cyc___anonymous_enum_51__{
! Cyc_FE_INVALID  = 1,Cyc___FE_DENORM  = 2,Cyc_FE_DIVBYZERO  = 4,Cyc_FE_OVERFLOW  = 8,
! Cyc_FE_UNDERFLOW  = 16,Cyc_FE_INEXACT  = 32};enum Cyc___anonymous_enum_52__{Cyc_FE_TONEAREST
!  = 0,Cyc_FE_DOWNWARD  = 1024,Cyc_FE_UPWARD  = 2048,Cyc_FE_TOWARDZERO  = 3072};
! typedef struct{unsigned short __control_word;unsigned short __unused1;
! unsigned short __status_word;unsigned short __unused2;unsigned short __tags;
! unsigned short __unused3;unsigned int __eip;unsigned short __cs_selector;
! unsigned int __opcode: 11;unsigned int __unused4: 5;unsigned int __data_offset;
! unsigned short __data_selector;unsigned short __unused5;}Cyc_fenv_t;union Cyc___convert_long_double{
! unsigned int __convert_long_double_i[4];long double __convert_long_double_d;};
! enum Cyc___anonymous_enum_61__{Cyc_MM_HARD  = 1,Cyc_MM_SOFT  = 2,Cyc_MM_FIRM  = 4,
! Cyc_MM_APPL  = 8,Cyc_MM_UTIL  = 16,Cyc_MM_OPSYS  = 32,Cyc_MM_RECOVER  = 64,Cyc_MM_NRECOV
!  = 128,Cyc_MM_PRINT  = 256,Cyc_MM_CONSOLE  = 512};enum Cyc___anonymous_enum_62__{
! Cyc_MM_NOSEV  = 0,Cyc_MM_HALT  = 1,Cyc_MM_ERROR  = 2,Cyc_MM_WARNING  = 3,Cyc_MM_INFO
!  = 4};enum Cyc___anonymous_enum_63__{Cyc_MM_NOTOK  = -1,Cyc_MM_OK  = 0,Cyc_MM_NOMSG
!  = 1,Cyc_MM_NOCON  = 4};enum Cyc___anonymous_enum_119__{Cyc_IPPORT_ECHO  = 7,Cyc_IPPORT_DISCARD
!  = 9,Cyc_IPPORT_SYSTAT  = 11,Cyc_IPPORT_DAYTIME  = 13,Cyc_IPPORT_NETSTAT  = 15,Cyc_IPPORT_FTP
!  = 21,Cyc_IPPORT_TELNET  = 23,Cyc_IPPORT_SMTP  = 25,Cyc_IPPORT_TIMESERVER  = 37,Cyc_IPPORT_NAMESERVER
!  = 42,Cyc_IPPORT_WHOIS  = 43,Cyc_IPPORT_MTP  = 57,Cyc_IPPORT_TFTP  = 69,Cyc_IPPORT_RJE
!  = 77,Cyc_IPPORT_FINGER  = 79,Cyc_IPPORT_TTYLINK  = 87,Cyc_IPPORT_SUPDUP  = 95,Cyc_IPPORT_EXECSERVER
!  = 512,Cyc_IPPORT_LOGINSERVER  = 513,Cyc_IPPORT_CMDSERVER  = 514,Cyc_IPPORT_EFSSERVER
!  = 520,Cyc_IPPORT_BIFFUDP  = 512,Cyc_IPPORT_WHOSERVER  = 513,Cyc_IPPORT_ROUTESERVER
!  = 520,Cyc_IPPORT_RESERVED  = 1024,Cyc_IPPORT_USERRESERVED  = 5000};struct Cyc_servent{
! char*s_name;char**s_aliases;int s_port;char*s_proto;};struct Cyc_protoent{char*
! p_name;char**p_aliases;int p_proto;};struct Cyc_hostent{char*h_name;char**
! h_aliases;int h_addrtype;int h_length;struct Cyc_in_addr**h_addr_list;};enum Cyc___anonymous_enum_122__{
! Cyc_IPPROTO_IP  = 0,Cyc_IPPROTO_HOPOPTS  = 0,Cyc_IPPROTO_ICMP  = 1,Cyc_IPPROTO_IGMP
!  = 2,Cyc_IPPROTO_IPIP  = 4,Cyc_IPPROTO_TCP  = 6,Cyc_IPPROTO_EGP  = 8,Cyc_IPPROTO_PUP
!  = 12,Cyc_IPPROTO_UDP  = 17,Cyc_IPPROTO_IDP  = 22,Cyc_IPPROTO_TP  = 29,Cyc_IPPROTO_IPV6
!  = 41,Cyc_IPPROTO_ROUTING  = 43,Cyc_IPPROTO_FRAGMENT  = 44,Cyc_IPPROTO_RSVP  = 46,
! Cyc_IPPROTO_GRE  = 47,Cyc_IPPROTO_ESP  = 50,Cyc_IPPROTO_AH  = 51,Cyc_IPPROTO_ICMPV6
!  = 58,Cyc_IPPROTO_NONE  = 59,Cyc_IPPROTO_DSTOPTS  = 60,Cyc_IPPROTO_MTP  = 92,Cyc_IPPROTO_ENCAP
!  = 98,Cyc_IPPROTO_PIM  = 103,Cyc_IPPROTO_COMP  = 108,Cyc_IPPROTO_RAW  = 255,Cyc_IPPROTO_MAX
!  = 256};struct Cyc_in6_addr{union{unsigned char u6_addr8[16];unsigned short
! u6_addr16[8];unsigned int u6_addr32[4];}in6_u;};struct Cyc_sockaddr{unsigned short
! sa_family;char sa_data[14];};struct Cyc_sockaddr_in{unsigned short sin_family;
! unsigned short sin_port;struct Cyc_in_addr sin_addr;unsigned char sin_zero[((sizeof(
! struct Cyc_sockaddr)- sizeof(unsigned short))- sizeof(unsigned short))- sizeof(
! struct Cyc_in_addr)];};struct Cyc_sockaddr_in6{unsigned short sin6_family;
! unsigned short sin6_port;unsigned int sin6_flowinfo;struct Cyc_in6_addr sin6_addr;
! unsigned int sin6_scope_id;};struct Cyc_ipv6_mreq{struct Cyc_in6_addr
! ipv6mr_multiaddr;unsigned int ipv6mr_interface;};struct Cyc_pollfd{int fd;short
! events;short revents;};int Cyc_poll(struct _dynforward_ptr,unsigned long,int);int
! poll(struct Cyc_pollfd*,unsigned long b,int c);static char _tmpA[22]="poll called with NULL";
! static struct Cyc_Core_Failure_struct Cyc___poll_failure_1={Cyc_Core_Failure,{_tmpA,
! _tmpA + 22}};static char _tmpC[39]="poll called with out-of-bounds pointer";static
! struct Cyc_Core_Failure_struct Cyc___poll_failure_2={Cyc_Core_Failure,{_tmpC,_tmpC
! + 39}};int Cyc_poll(struct _dynforward_ptr a,unsigned long b,int c){if(!((
! unsigned int)a.curr))(int)_throw((void*)& Cyc___poll_failure_1);{struct
! _handler_cons _tmpD;_push_handler(& _tmpD);{int _tmpF=0;if(setjmp(_tmpD.handler))
! _tmpF=1;if(!_tmpF){*((struct Cyc_pollfd*)_check_dynforward_subscript(a,sizeof(
! struct Cyc_pollfd),0));;_pop_handler();}else{void*_tmpE=(void*)_exn_thrown;void*
! _tmp11=_tmpE;_LL6: if(_tmp11 != Cyc_Array_bounds)goto _LL8;_LL7:(int)_throw((void*)&
! Cyc___poll_failure_2);_LL8:;_LL9:(void)_throw(_tmp11);_LL5:;}}}{int len=(int)
! _get_dynforward_size(a,sizeof(struct Cyc_pollfd));return poll((struct Cyc_pollfd*)
! _untag_dynforward_ptr(a,sizeof(struct Cyc_pollfd),0),b < (unsigned long)len?b:(
! unsigned long)len,c);}}typedef struct{unsigned long __val[1024 / (8 * sizeof(
! unsigned long))];}Cyc___sigset_t;typedef Cyc___sigset_t Cyc_sigset_t;enum Cyc___anonymous_enum_182__{
! Cyc_SIGEV_SIGNAL  = 0,Cyc_SIGEV_NONE  = 1,Cyc_SIGEV_THREAD  = 2};struct Cyc___SIG_BUILTIN_struct{
! int tag;void*f1;};struct Cyc___SIG_HANDLER_struct{int tag;void(*f1)(int);};void*Cyc_signal(
! int,struct _dynforward_ptr);void*Cyc_Csignal_make_SIG_DFL(){return(void*)({struct
! Cyc___SIG_BUILTIN_struct*_tmp12=_cycalloc(sizeof(*_tmp12));_tmp12[0]=({struct Cyc___SIG_BUILTIN_struct
! _tmp13;_tmp13.tag=0;_tmp13.f1=(void*)((void*)0);_tmp13;});_tmp12;});}void*Cyc_Csignal_make_SIG_ERR(){
! return(void*)({struct Cyc___SIG_BUILTIN_struct*_tmp14=_cycalloc(sizeof(*_tmp14));
! _tmp14[0]=({struct Cyc___SIG_BUILTIN_struct _tmp15;_tmp15.tag=0;_tmp15.f1=(void*)((
! void*)1);_tmp15;});_tmp14;});}void*Cyc_Csignal_make_SIG_IGN(){return(void*)({
! struct Cyc___SIG_BUILTIN_struct*_tmp16=_cycalloc(sizeof(*_tmp16));_tmp16[0]=({
! struct Cyc___SIG_BUILTIN_struct _tmp17;_tmp17.tag=0;_tmp17.f1=(void*)((void*)1);
! _tmp17;});_tmp16;});}void*Cyc_Csignal_make_SIG_HANDLER(void(*f)(int)){return(
! void*)({struct Cyc___SIG_HANDLER_struct*_tmp18=_cycalloc(sizeof(*_tmp18));_tmp18[
! 0]=({struct Cyc___SIG_HANDLER_struct _tmp19;_tmp19.tag=1;_tmp19.f1=f;_tmp19;});
! _tmp18;});}void*signal_SIG_DFL(int);void*signal_SIG_ERR(int);void*signal_SIG_IGN(
! int);void*signal(int,void(*)(int));static char _tmp1B[49]="signal called with the wrong number of arguments";
  static struct Cyc_Core_Failure_struct Cyc___signal_failure={Cyc_Core_Failure,{
! _tmp1B,_tmp1B + 49}};void*Cyc_signal(int a,struct _dynforward_ptr b){if(
  _get_dynforward_size(b,sizeof(void*))!= 1)(int)_throw((void*)& Cyc___signal_failure);{
! void*_tmp1C=*((void**)_check_dynforward_subscript(b,sizeof(void*),0));void*
! _tmp1D;void*_tmp1E;void*_tmp1F;void(*_tmp20)(int);_LLB: if(*((int*)_tmp1C)!= 0)
! goto _LLD;_tmp1D=(void*)((struct Cyc___SIG_BUILTIN_struct*)_tmp1C)->f1;if((int)
! _tmp1D != 0)goto _LLD;_LLC: return signal_SIG_DFL(a);_LLD: if(*((int*)_tmp1C)!= 0)
! goto _LLF;_tmp1E=(void*)((struct Cyc___SIG_BUILTIN_struct*)_tmp1C)->f1;if((int)
! _tmp1E != 1)goto _LLF;_LLE: return signal_SIG_ERR(a);_LLF: if(*((int*)_tmp1C)!= 0)
! goto _LL11;_tmp1F=(void*)((struct Cyc___SIG_BUILTIN_struct*)_tmp1C)->f1;if((int)
! _tmp1F != 2)goto _LL11;_LL10: return signal_SIG_IGN(a);_LL11: if(*((int*)_tmp1C)!= 1)
! goto _LLA;_tmp20=((struct Cyc___SIG_HANDLER_struct*)_tmp1C)->f1;_LL12: return signal(
! a,_tmp20);_LLA:;}}typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}
! __value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc___cycFILE*Cyc_fromCfile(struct Cyc_Cstdio___abstractFILE*cf);struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
! int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};void Cyc_clearerr(struct Cyc___cycFILE*);int Cyc_fclose(
  struct Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_fdopen(int,const char*);int Cyc_feof(
  struct Cyc___cycFILE*);int Cyc_ferror(struct Cyc___cycFILE*);int Cyc_fflush(struct
  Cyc___cycFILE*);int Cyc_fgetc(struct Cyc___cycFILE*);int Cyc_fgetpos(struct Cyc___cycFILE*,
! Cyc_fpos_t*);struct _dynforward_ptr Cyc_fgets(struct _dynforward_ptr,int,struct Cyc___cycFILE*);
! int Cyc_fileno(struct Cyc___cycFILE*);void Cyc_flockfile(struct Cyc___cycFILE*);
! struct Cyc___cycFILE*Cyc_fopen(const char*,const char*);int Cyc_fputc(int,struct Cyc___cycFILE*);
! int Cyc_fputs(const char*,struct Cyc___cycFILE*);unsigned int Cyc_fread(struct
! _dynforward_ptr,unsigned int,unsigned int,struct Cyc___cycFILE*);struct Cyc___cycFILE*
! Cyc_freopen(const char*,const char*,struct Cyc___cycFILE*);struct Cyc_ShortPtr_sa_struct{
! int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};
! struct Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;
! unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct _dynforward_ptr f1;}
! ;struct Cyc_DoublePtr_sa_struct{int tag;double*f1;};struct Cyc_FloatPtr_sa_struct{
! int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int tag;struct _dynforward_ptr f1;};
! int Cyc_fseek(struct Cyc___cycFILE*,long,int);int Cyc_fsetpos(struct Cyc___cycFILE*,
! const Cyc_fpos_t*);long Cyc_ftell(struct Cyc___cycFILE*);int Cyc_ftrylockfile(struct
! Cyc___cycFILE*);void Cyc_funlockfile(struct Cyc___cycFILE*);unsigned int Cyc_fwrite(
! struct _dynforward_ptr,unsigned int,unsigned int,struct Cyc___cycFILE*);int Cyc_getc(
! struct Cyc___cycFILE*);int Cyc_getchar();int Cyc_getc_unlocked(struct Cyc___cycFILE*);
! int Cyc_getchar_unlocked();int Cyc_pclose(struct Cyc___cycFILE*);struct Cyc___cycFILE*
! Cyc_popen(const char*,const char*);int Cyc_putc(int,struct Cyc___cycFILE*);int Cyc_putc_unlocked(
! int,struct Cyc___cycFILE*);void Cyc_rewind(struct Cyc___cycFILE*);int Cyc_setvbuf(
! struct Cyc___cycFILE*,struct _dynforward_ptr,int,unsigned int);void Cyc_setbuf(
  struct Cyc___cycFILE*,struct _dynforward_ptr);int Cyc_ungetc(int,struct Cyc___cycFILE*);
  int Cyc_getw(struct Cyc___cycFILE*);int Cyc_putw(int,struct Cyc___cycFILE*);extern
  char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{
--- 668,773 ----
  unsigned int Cyc_htonl(unsigned int x){return __stub_htonl(x);}unsigned short Cyc_htons(
  unsigned short x){return __stub_htons(x);}unsigned int Cyc_ntohl(unsigned int x){
  return __stub_ntohl(x);}unsigned short Cyc_ntohs(unsigned short x){return
! __stub_ntohs(x);}struct Cyc_dirent{unsigned int d_fileno;unsigned short d_reclen;
! unsigned char d_type;unsigned char d_namlen;char d_name[256];};struct Cyc___cycDIR;
! int Cyc_closedir(struct Cyc___cycDIR*);struct Cyc___cycDIR*Cyc_opendir(const char*);
! struct Cyc_dirent*Cyc_readdir(struct Cyc___cycDIR*);void Cyc_rewinddir(struct Cyc___cycDIR*);
! void Cyc_seekdir(struct Cyc___cycDIR*,long);long Cyc_telldir(struct Cyc___cycDIR*);
! struct Cyc_Cdirent___abstractDIR;struct Cyc___cycDIR{struct Cyc_Cdirent___abstractDIR*
! dir;};int closedir(struct Cyc_Cdirent___abstractDIR*d);int Cyc_closedir(struct Cyc___cycDIR*
! d){return closedir(d->dir);}struct Cyc_Cdirent___abstractDIR*opendir(const char*);
! static char _tmp1[32]="opendir called with NULL string";static struct Cyc_Core_Failure_struct
! Cyc___opendir_failure={Cyc_Core_Failure,{_tmp1,_tmp1 + 32}};struct Cyc___cycDIR*
! Cyc_opendir(const char*f){struct Cyc_Cdirent___abstractDIR*_tmp2=opendir(f);return(
! unsigned int)_tmp2?({struct Cyc___cycDIR*_tmp3=_cycalloc(sizeof(*_tmp3));_tmp3->dir=(
! struct Cyc_Cdirent___abstractDIR*)_tmp2;_tmp3;}): 0;}struct Cyc_dirent*readdir(
! struct Cyc_Cdirent___abstractDIR*);struct Cyc_dirent*Cyc_readdir(struct Cyc___cycDIR*
! d){return readdir(d->dir);}void rewinddir(struct Cyc_Cdirent___abstractDIR*d);void
! Cyc_rewinddir(struct Cyc___cycDIR*d){return rewinddir(d->dir);}void seekdir(struct
! Cyc_Cdirent___abstractDIR*d,long);void Cyc_seekdir(struct Cyc___cycDIR*d,long x){
! return seekdir(d->dir,x);}long telldir(struct Cyc_Cdirent___abstractDIR*d);long Cyc_telldir(
! struct Cyc___cycDIR*d){return telldir(d->dir);}int*__CYCLONE_ERRNO();struct Cyc_flock{
! long long l_start;long long l_len;int l_pid;short l_type;short l_whence;};struct Cyc_Flock_struct{
! int tag;struct Cyc_flock*f1;};struct Cyc_Long_struct{int tag;long f1;};int Cyc_fcntl(
! int fd,int cmd,struct _dynforward_ptr);int Cyc_open(const char*,int,struct
! _dynforward_ptr);int fcntl(int fd,int cmd);int fcntl_with_arg(int fd,int cmd,long arg);
! int fcntl_with_lock(int fd,int cmd,struct Cyc_flock*lock);int open_without_mode(const
! char*,int);int open_with_mode(const char*,int,unsigned short);static char _tmp5[21]="fcntl: too many args";
! static struct Cyc_Core_Failure_struct Cyc___fcntl_failure={Cyc_Core_Failure,{_tmp5,
! _tmp5 + 21}};int Cyc_fcntl(int fd,int cmd,struct _dynforward_ptr argv){if(
! _get_dynforward_size(argv,sizeof(void*))== 0)return fcntl(fd,cmd);else{if(
! _get_dynforward_size(argv,sizeof(void*))!= 1)(int)_throw((void*)& Cyc___fcntl_failure);
! else{void*_tmp6=*((void**)_check_dynforward_subscript(argv,sizeof(void*),0));
! long _tmp7;struct Cyc_flock*_tmp8;_LL1: if(*((int*)_tmp6)!= 1)goto _LL3;_tmp7=((
! struct Cyc_Long_struct*)_tmp6)->f1;_LL2: return fcntl_with_arg(fd,cmd,_tmp7);_LL3:
! if(*((int*)_tmp6)!= 0)goto _LL0;_tmp8=((struct Cyc_Flock_struct*)_tmp6)->f1;_LL4:
! return fcntl_with_lock(fd,cmd,(struct Cyc_flock*)_tmp8);_LL0:;}}}int Cyc_open(const
! char*s,int i,struct _dynforward_ptr ms){if(_get_dynforward_size(ms,sizeof(
! unsigned short))>= 1)return open_with_mode(s,i,*((unsigned short*)
! _check_dynforward_subscript(ms,sizeof(unsigned short),0)));else{return
! open_without_mode(s,i);}}struct Cyc_servent{char*s_name;char**s_aliases;int s_port;
! char*s_proto;};struct Cyc_protoent{char*p_name;char**p_aliases;int p_proto;};
! struct Cyc_hostent{char*h_name;char**h_aliases;int h_addrtype;int h_length;struct
! Cyc_in_addr**h_addr_list;};struct Cyc_sockaddr_in{unsigned char sin_len;
! unsigned char sin_family;unsigned short sin_port;struct Cyc_in_addr sin_addr;char
! sin_zero[8];};struct Cyc_in6_addr{union{unsigned char __u6_addr8[16];
! unsigned short __u6_addr16[8];unsigned int __u6_addr32[4];}__u6_addr;};struct Cyc_sockaddr_in6{
! unsigned char sin6_len;unsigned char sin6_family;unsigned short sin6_port;
! unsigned int sin6_flowinfo;struct Cyc_in6_addr sin6_addr;unsigned int sin6_scope_id;
! };struct Cyc_ipv6_mreq{struct Cyc_in6_addr ipv6mr_multiaddr;unsigned int
! ipv6mr_interface;};struct Cyc___SIG_BUILTIN_struct{int tag;void*f1;};struct Cyc___SIG_HANDLER_struct{
! int tag;void(*f1)(int);};void*Cyc_signal(int,struct _dynforward_ptr);void*Cyc_Csignal_make_SIG_DFL(){
! return(void*)({struct Cyc___SIG_BUILTIN_struct*_tmp9=_cycalloc(sizeof(*_tmp9));
! _tmp9[0]=({struct Cyc___SIG_BUILTIN_struct _tmpA;_tmpA.tag=0;_tmpA.f1=(void*)((
! void*)0);_tmpA;});_tmp9;});}void*Cyc_Csignal_make_SIG_ERR(){return(void*)({
! struct Cyc___SIG_BUILTIN_struct*_tmpB=_cycalloc(sizeof(*_tmpB));_tmpB[0]=({struct
! Cyc___SIG_BUILTIN_struct _tmpC;_tmpC.tag=0;_tmpC.f1=(void*)((void*)1);_tmpC;});
! _tmpB;});}void*Cyc_Csignal_make_SIG_IGN(){return(void*)({struct Cyc___SIG_BUILTIN_struct*
! _tmpD=_cycalloc(sizeof(*_tmpD));_tmpD[0]=({struct Cyc___SIG_BUILTIN_struct _tmpE;
! _tmpE.tag=0;_tmpE.f1=(void*)((void*)1);_tmpE;});_tmpD;});}void*Cyc_Csignal_make_SIG_HANDLER(
! void(*f)(int)){return(void*)({struct Cyc___SIG_HANDLER_struct*_tmpF=_cycalloc(
! sizeof(*_tmpF));_tmpF[0]=({struct Cyc___SIG_HANDLER_struct _tmp10;_tmp10.tag=1;
! _tmp10.f1=f;_tmp10;});_tmpF;});}void*signal_SIG_DFL(int);void*signal_SIG_ERR(int);
! void*signal_SIG_IGN(int);void*signal(int,void(*)(int));static char _tmp12[49]="signal called with the wrong number of arguments";
  static struct Cyc_Core_Failure_struct Cyc___signal_failure={Cyc_Core_Failure,{
! _tmp12,_tmp12 + 49}};void*Cyc_signal(int a,struct _dynforward_ptr b){if(
  _get_dynforward_size(b,sizeof(void*))!= 1)(int)_throw((void*)& Cyc___signal_failure);{
! void*_tmp13=*((void**)_check_dynforward_subscript(b,sizeof(void*),0));void*
! _tmp14;void*_tmp15;void*_tmp16;void(*_tmp17)(int);_LL6: if(*((int*)_tmp13)!= 0)
! goto _LL8;_tmp14=(void*)((struct Cyc___SIG_BUILTIN_struct*)_tmp13)->f1;if((int)
! _tmp14 != 0)goto _LL8;_LL7: return signal_SIG_DFL(a);_LL8: if(*((int*)_tmp13)!= 0)
! goto _LLA;_tmp15=(void*)((struct Cyc___SIG_BUILTIN_struct*)_tmp13)->f1;if((int)
! _tmp15 != 1)goto _LLA;_LL9: return signal_SIG_ERR(a);_LLA: if(*((int*)_tmp13)!= 0)
! goto _LLC;_tmp16=(void*)((struct Cyc___SIG_BUILTIN_struct*)_tmp13)->f1;if((int)
! _tmp16 != 2)goto _LLC;_LLB: return signal_SIG_IGN(a);_LLC: if(*((int*)_tmp13)!= 1)
! goto _LL5;_tmp17=((struct Cyc___SIG_HANDLER_struct*)_tmp13)->f1;_LLD: return signal(
! a,_tmp17);_LL5:;}}struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc___cycFILE*
! Cyc_fromCfile(struct Cyc_Cstdio___abstractFILE*cf);struct Cyc_String_pa_struct{int
! tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};
! struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{int
! tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};void Cyc_clearerr(struct Cyc___cycFILE*);int Cyc_fclose(
  struct Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_fdopen(int,const char*);int Cyc_feof(
  struct Cyc___cycFILE*);int Cyc_ferror(struct Cyc___cycFILE*);int Cyc_fflush(struct
  Cyc___cycFILE*);int Cyc_fgetc(struct Cyc___cycFILE*);int Cyc_fgetpos(struct Cyc___cycFILE*,
! long long*);struct _dynforward_ptr Cyc_fgets(struct _dynforward_ptr,int,struct Cyc___cycFILE*);
! int Cyc_fileno(struct Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_fopen(const char*,
! const char*);int Cyc_fputc(int,struct Cyc___cycFILE*);int Cyc_fputs(const char*,
! struct Cyc___cycFILE*);unsigned long Cyc_fread(struct _dynforward_ptr,unsigned long,
! unsigned long,struct Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_freopen(const char*,
! const char*,struct Cyc___cycFILE*);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};
! struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
! int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;
! };struct Cyc_FloatPtr_sa_struct{int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int
! tag;struct _dynforward_ptr f1;};int Cyc_fseek(struct Cyc___cycFILE*,long,int);int Cyc_fseeko(
! struct Cyc___cycFILE*,long long,int);int Cyc_fsetpos(struct Cyc___cycFILE*,const
! long long*);long Cyc_ftell(struct Cyc___cycFILE*);long long Cyc_ftello(struct Cyc___cycFILE*);
! unsigned long Cyc_fwrite(struct _dynforward_ptr,unsigned long,unsigned long,struct
! Cyc___cycFILE*);int Cyc_getc(struct Cyc___cycFILE*);int Cyc_getchar();int Cyc_pclose(
! struct Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_popen(const char*,const char*);int
! Cyc_putc(int,struct Cyc___cycFILE*);void Cyc_rewind(struct Cyc___cycFILE*);int Cyc_setvbuf(
! struct Cyc___cycFILE*,struct _dynforward_ptr,int,unsigned long);void Cyc_setbuf(
  struct Cyc___cycFILE*,struct _dynforward_ptr);int Cyc_ungetc(int,struct Cyc___cycFILE*);
  int Cyc_getw(struct Cyc___cycFILE*);int Cyc_putw(int,struct Cyc___cycFILE*);extern
  char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{
***************
*** 827,918 ****
  _dynforward_ptr,struct _dynforward_ptr);void Cyc_file_close(struct Cyc___cycFILE*);
  struct Cyc_Cstdio___abstractFILE;struct Cyc___cycFILE{struct Cyc_Cstdio___abstractFILE*
  file;};struct Cyc___cycFILE*Cyc_fromCfile(struct Cyc_Cstdio___abstractFILE*cf){
! return(unsigned int)cf?({struct Cyc___cycFILE*_tmp21=_cycalloc(sizeof(*_tmp21));
! _tmp21->file=(struct Cyc_Cstdio___abstractFILE*)cf;_tmp21;}): 0;}void clearerr(
  struct Cyc_Cstdio___abstractFILE*);void Cyc_clearerr(struct Cyc___cycFILE*f){return
  clearerr(f->file);}int fclose(struct Cyc_Cstdio___abstractFILE*);int Cyc_fclose(
  struct Cyc___cycFILE*f){return fclose(f->file);}struct Cyc_Cstdio___abstractFILE*
  fdopen(int,const char*);struct Cyc___cycFILE*Cyc_fdopen(int i,const char*s){struct
! Cyc_Cstdio___abstractFILE*_tmp22=fdopen(i,s);return(unsigned int)_tmp22?({struct
! Cyc___cycFILE*_tmp23=_cycalloc(sizeof(*_tmp23));_tmp23->file=(struct Cyc_Cstdio___abstractFILE*)
! _tmp22;_tmp23;}): 0;}int feof(struct Cyc_Cstdio___abstractFILE*);int Cyc_feof(struct
  Cyc___cycFILE*f){return feof(f->file);}int ferror(struct Cyc_Cstdio___abstractFILE*);
  int Cyc_ferror(struct Cyc___cycFILE*f){return ferror(f->file);}int fflush(struct Cyc_Cstdio___abstractFILE*);
  int Cyc_fflush(struct Cyc___cycFILE*f){if((unsigned int)f)return fflush((struct Cyc_Cstdio___abstractFILE*)
  f->file);else{return fflush(0);}}int fgetc(struct Cyc_Cstdio___abstractFILE*);int
  Cyc_fgetc(struct Cyc___cycFILE*f){return fgetc(f->file);}int fgetpos(struct Cyc_Cstdio___abstractFILE*,
! Cyc_fpos_t*);int Cyc_fgetpos(struct Cyc___cycFILE*f,Cyc_fpos_t*x){return fgetpos(f->file,
! x);}char*fgets(char*,int,struct Cyc_Cstdio___abstractFILE*);static char _tmp25[30]="fgets called with NULL string";
  static struct Cyc_Core_Failure_struct Cyc___fgets_failure_1={Cyc_Core_Failure,{
! _tmp25,_tmp25 + 30}};static char _tmp27[27]="fgets: buffer insufficient";static
! struct Cyc_Core_Failure_struct Cyc___fgets_failure_2={Cyc_Core_Failure,{_tmp27,
! _tmp27 + 27}};struct _dynforward_ptr Cyc_fgets(struct _dynforward_ptr s,int n,struct
  Cyc___cycFILE*f){if(!((unsigned int)s.curr))(int)_throw((void*)& Cyc___fgets_failure_1);{
  char*result;char*buffer=(char*)_check_null(_untag_dynforward_ptr(s,sizeof(char),
  1));unsigned int len=_get_dynforward_size(s,sizeof(char));if(len < n)(int)_throw((
  void*)& Cyc___fgets_failure_2);result=fgets(buffer,n,f->file);if(result == 0)
  return _tag_dynforward(0,0,0);else{return s;}}}int fileno(struct Cyc_Cstdio___abstractFILE*);
! int Cyc_fileno(struct Cyc___cycFILE*f){return fileno(f->file);}void flockfile(struct
! Cyc_Cstdio___abstractFILE*);void Cyc_flockfile(struct Cyc___cycFILE*f){return
! flockfile(f->file);}struct Cyc_Cstdio___abstractFILE*fopen(const char*,const char*);
! struct Cyc___cycFILE*Cyc_fopen(const char*name,const char*type){struct Cyc_Cstdio___abstractFILE*
! _tmp28=fopen(name,type);return(unsigned int)_tmp28?({struct Cyc___cycFILE*_tmp29=
! _cycalloc(sizeof(*_tmp29));_tmp29->file=(struct Cyc_Cstdio___abstractFILE*)_tmp28;
! _tmp29;}): 0;}int fputc(int,struct Cyc_Cstdio___abstractFILE*);int Cyc_fputc(int x,
! struct Cyc___cycFILE*f){return fputc(x,f->file);}int fputs(const char*,struct Cyc_Cstdio___abstractFILE*);
  int Cyc_fputs(const char*x,struct Cyc___cycFILE*f){return fputs(x,f->file);}
! unsigned int fread(char*,unsigned int,unsigned int,struct Cyc_Cstdio___abstractFILE*);
! static char _tmp2B[27]="fread: buffer insufficient";static struct Cyc_Core_Failure_struct
! Cyc___fread_failure={Cyc_Core_Failure,{_tmp2B,_tmp2B + 27}};unsigned int Cyc_fread(
! struct _dynforward_ptr ptr,unsigned int size,unsigned int nmemb,struct Cyc___cycFILE*
  f){if(size * nmemb > _get_dynforward_size(ptr,sizeof(char)))(int)_throw((void*)&
  Cyc___fread_failure);return fread((char*)_check_null(_untag_dynforward_ptr(ptr,
  sizeof(char),1)),size,nmemb,f->file);}struct Cyc_Cstdio___abstractFILE*freopen(
  const char*,const char*,struct Cyc_Cstdio___abstractFILE*);struct Cyc___cycFILE*Cyc_freopen(
  const char*filename,const char*modes,struct Cyc___cycFILE*f){struct Cyc_Cstdio___abstractFILE*
! _tmp2C=freopen(filename,modes,f->file);return(unsigned int)_tmp2C?(struct Cyc___cycFILE*)({
! struct Cyc___cycFILE*_tmp2D=_cycalloc(sizeof(*_tmp2D));_tmp2D->file=(struct Cyc_Cstdio___abstractFILE*)
! _tmp2C;_tmp2D;}): 0;}int fseek(struct Cyc_Cstdio___abstractFILE*,long,int);int Cyc_fseek(
! struct Cyc___cycFILE*a,long b,int c){return fseek(a->file,b,c);}int fsetpos(struct Cyc_Cstdio___abstractFILE*,
! const Cyc_fpos_t*);int Cyc_fsetpos(struct Cyc___cycFILE*f,const Cyc_fpos_t*b){return
! fsetpos(f->file,b);}long ftell(struct Cyc_Cstdio___abstractFILE*);long Cyc_ftell(
! struct Cyc___cycFILE*f){return ftell(f->file);}int ftrylockfile(struct Cyc_Cstdio___abstractFILE*);
! int Cyc_ftrylockfile(struct Cyc___cycFILE*f){return ftrylockfile(f->file);}void
! funlockfile(struct Cyc_Cstdio___abstractFILE*);void Cyc_funlockfile(struct Cyc___cycFILE*
! f){return funlockfile(f->file);}unsigned int fwrite(const char*,unsigned int,
! unsigned int,struct Cyc_Cstdio___abstractFILE*);static char _tmp2F[31]="fwrite called with NULL string";
! static struct Cyc_Core_Failure_struct Cyc___fwrite_failure_1={Cyc_Core_Failure,{
! _tmp2F,_tmp2F + 31}};static char _tmp31[28]="fwrite: buffer insufficient";static
! struct Cyc_Core_Failure_struct Cyc___fwrite_failure_2={Cyc_Core_Failure,{_tmp31,
! _tmp31 + 28}};unsigned int Cyc_fwrite(struct _dynforward_ptr ptr,unsigned int size,
! unsigned int nmemb,struct Cyc___cycFILE*f){if(!((unsigned int)ptr.curr))(int)
! _throw((void*)& Cyc___fwrite_failure_1);else{if(size * nmemb > _get_dynforward_size(
! ptr,sizeof(char)))(int)_throw((void*)& Cyc___fwrite_failure_2);return fwrite((
! const char*)_untag_dynforward_ptr(ptr,sizeof(char),1),size,nmemb,f->file);}}int
! getc(struct Cyc_Cstdio___abstractFILE*);int Cyc_getc(struct Cyc___cycFILE*f){return
! getc(f->file);}int getchar();int Cyc_getchar(){return getchar();}int getc_unlocked(
! struct Cyc_Cstdio___abstractFILE*);int Cyc_getc_unlocked(struct Cyc___cycFILE*f){
! return getc_unlocked(f->file);}int __CYCLONE_GETCHAR_UNLOCKED();int Cyc_getchar_unlocked(){
! return __CYCLONE_GETCHAR_UNLOCKED();}int pclose(struct Cyc_Cstdio___abstractFILE*);
! int Cyc_pclose(struct Cyc___cycFILE*f){return pclose(f->file);}struct Cyc_Cstdio___abstractFILE*
! popen(const char*,const char*);struct Cyc___cycFILE*Cyc_popen(const char*name,const
! char*type){struct Cyc_Cstdio___abstractFILE*_tmp32=popen(name,type);return(
! unsigned int)_tmp32?({struct Cyc___cycFILE*_tmp33=_cycalloc(sizeof(*_tmp33));
! _tmp33->file=(struct Cyc_Cstdio___abstractFILE*)_tmp32;_tmp33;}): 0;}int putc(int,
! struct Cyc_Cstdio___abstractFILE*);int Cyc_putc(int x,struct Cyc___cycFILE*f){return
! putc(x,f->file);}int putc_unlocked(int,struct Cyc_Cstdio___abstractFILE*);int Cyc_putc_unlocked(
! int x,struct Cyc___cycFILE*f){return putc_unlocked(x,f->file);}void rewind(struct Cyc_Cstdio___abstractFILE*);
  void Cyc_rewind(struct Cyc___cycFILE*f){return rewind(f->file);}int setvbuf(struct
! Cyc_Cstdio___abstractFILE*,char*,int,unsigned int);static char _tmp35[24]="setvbuf: buffer is NULL";
  static struct Cyc_Core_Failure_struct Cyc___setvbuf_failure_1={Cyc_Core_Failure,{
! _tmp35,_tmp35 + 24}};static char _tmp37[29]="setvbuf: buffer insufficient";static
! struct Cyc_Core_Failure_struct Cyc___setvbuf_failure_2={Cyc_Core_Failure,{_tmp37,
! _tmp37 + 29}};int Cyc_setvbuf(struct Cyc___cycFILE*f,struct _dynforward_ptr buf,int
! type,unsigned int size){if(!((unsigned int)buf.curr))(int)_throw((void*)& Cyc___setvbuf_failure_1);
  if(_get_dynforward_size(buf,sizeof(char))< size)(int)_throw((void*)& Cyc___setvbuf_failure_2);
  return setvbuf(f->file,(char*)_check_null(_untag_dynforward_ptr(buf,sizeof(char),
  1)),type,size);}void Cyc_setbuf(struct Cyc___cycFILE*f,struct _dynforward_ptr buf){
! Cyc_setvbuf(f,buf,(unsigned int)buf.curr?0: 2,8192);return;}int ungetc(int,struct
  Cyc_Cstdio___abstractFILE*);int Cyc_ungetc(int x,struct Cyc___cycFILE*f){return
  ungetc(x,f->file);}int getw(struct Cyc_Cstdio___abstractFILE*);int Cyc_getw(struct
  Cyc___cycFILE*f){return getw(f->file);}int putw(int,struct Cyc_Cstdio___abstractFILE*);
--- 775,861 ----
  _dynforward_ptr,struct _dynforward_ptr);void Cyc_file_close(struct Cyc___cycFILE*);
  struct Cyc_Cstdio___abstractFILE;struct Cyc___cycFILE{struct Cyc_Cstdio___abstractFILE*
  file;};struct Cyc___cycFILE*Cyc_fromCfile(struct Cyc_Cstdio___abstractFILE*cf){
! return(unsigned int)cf?({struct Cyc___cycFILE*_tmp18=_cycalloc(sizeof(*_tmp18));
! _tmp18->file=(struct Cyc_Cstdio___abstractFILE*)cf;_tmp18;}): 0;}void clearerr(
  struct Cyc_Cstdio___abstractFILE*);void Cyc_clearerr(struct Cyc___cycFILE*f){return
  clearerr(f->file);}int fclose(struct Cyc_Cstdio___abstractFILE*);int Cyc_fclose(
  struct Cyc___cycFILE*f){return fclose(f->file);}struct Cyc_Cstdio___abstractFILE*
  fdopen(int,const char*);struct Cyc___cycFILE*Cyc_fdopen(int i,const char*s){struct
! Cyc_Cstdio___abstractFILE*_tmp19=fdopen(i,s);return(unsigned int)_tmp19?({struct
! Cyc___cycFILE*_tmp1A=_cycalloc(sizeof(*_tmp1A));_tmp1A->file=(struct Cyc_Cstdio___abstractFILE*)
! _tmp19;_tmp1A;}): 0;}int feof(struct Cyc_Cstdio___abstractFILE*);int Cyc_feof(struct
  Cyc___cycFILE*f){return feof(f->file);}int ferror(struct Cyc_Cstdio___abstractFILE*);
  int Cyc_ferror(struct Cyc___cycFILE*f){return ferror(f->file);}int fflush(struct Cyc_Cstdio___abstractFILE*);
  int Cyc_fflush(struct Cyc___cycFILE*f){if((unsigned int)f)return fflush((struct Cyc_Cstdio___abstractFILE*)
  f->file);else{return fflush(0);}}int fgetc(struct Cyc_Cstdio___abstractFILE*);int
  Cyc_fgetc(struct Cyc___cycFILE*f){return fgetc(f->file);}int fgetpos(struct Cyc_Cstdio___abstractFILE*,
! long long*);int Cyc_fgetpos(struct Cyc___cycFILE*f,long long*x){return fgetpos(f->file,
! x);}char*fgets(char*,int,struct Cyc_Cstdio___abstractFILE*);static char _tmp1C[30]="fgets called with NULL string";
  static struct Cyc_Core_Failure_struct Cyc___fgets_failure_1={Cyc_Core_Failure,{
! _tmp1C,_tmp1C + 30}};static char _tmp1E[27]="fgets: buffer insufficient";static
! struct Cyc_Core_Failure_struct Cyc___fgets_failure_2={Cyc_Core_Failure,{_tmp1E,
! _tmp1E + 27}};struct _dynforward_ptr Cyc_fgets(struct _dynforward_ptr s,int n,struct
  Cyc___cycFILE*f){if(!((unsigned int)s.curr))(int)_throw((void*)& Cyc___fgets_failure_1);{
  char*result;char*buffer=(char*)_check_null(_untag_dynforward_ptr(s,sizeof(char),
  1));unsigned int len=_get_dynforward_size(s,sizeof(char));if(len < n)(int)_throw((
  void*)& Cyc___fgets_failure_2);result=fgets(buffer,n,f->file);if(result == 0)
  return _tag_dynforward(0,0,0);else{return s;}}}int fileno(struct Cyc_Cstdio___abstractFILE*);
! int Cyc_fileno(struct Cyc___cycFILE*f){return fileno(f->file);}struct Cyc_Cstdio___abstractFILE*
! fopen(const char*,const char*);struct Cyc___cycFILE*Cyc_fopen(const char*name,const
! char*type){struct Cyc_Cstdio___abstractFILE*_tmp1F=fopen(name,type);return(
! unsigned int)_tmp1F?({struct Cyc___cycFILE*_tmp20=_cycalloc(sizeof(*_tmp20));
! _tmp20->file=(struct Cyc_Cstdio___abstractFILE*)_tmp1F;_tmp20;}): 0;}int fputc(int,
! struct Cyc_Cstdio___abstractFILE*);int Cyc_fputc(int x,struct Cyc___cycFILE*f){
! return fputc(x,f->file);}int fputs(const char*,struct Cyc_Cstdio___abstractFILE*);
  int Cyc_fputs(const char*x,struct Cyc___cycFILE*f){return fputs(x,f->file);}
! unsigned long fread(char*,unsigned long,unsigned long,struct Cyc_Cstdio___abstractFILE*);
! static char _tmp22[27]="fread: buffer insufficient";static struct Cyc_Core_Failure_struct
! Cyc___fread_failure={Cyc_Core_Failure,{_tmp22,_tmp22 + 27}};unsigned long Cyc_fread(
! struct _dynforward_ptr ptr,unsigned long size,unsigned long nmemb,struct Cyc___cycFILE*
  f){if(size * nmemb > _get_dynforward_size(ptr,sizeof(char)))(int)_throw((void*)&
  Cyc___fread_failure);return fread((char*)_check_null(_untag_dynforward_ptr(ptr,
  sizeof(char),1)),size,nmemb,f->file);}struct Cyc_Cstdio___abstractFILE*freopen(
  const char*,const char*,struct Cyc_Cstdio___abstractFILE*);struct Cyc___cycFILE*Cyc_freopen(
  const char*filename,const char*modes,struct Cyc___cycFILE*f){struct Cyc_Cstdio___abstractFILE*
! _tmp23=freopen(filename,modes,f->file);return(unsigned int)_tmp23?(struct Cyc___cycFILE*)({
! struct Cyc___cycFILE*_tmp24=_cycalloc(sizeof(*_tmp24));_tmp24->file=(struct Cyc_Cstdio___abstractFILE*)
! _tmp23;_tmp24;}): 0;}int fseek(struct Cyc_Cstdio___abstractFILE*,long,int);int Cyc_fseek(
! struct Cyc___cycFILE*a,long b,int c){return fseek(a->file,b,c);}int fseeko(struct Cyc_Cstdio___abstractFILE*,
! long long,int);int Cyc_fseeko(struct Cyc___cycFILE*a,long long b,int c){return fseeko(
! a->file,b,c);}int fsetpos(struct Cyc_Cstdio___abstractFILE*,const long long*);int
! Cyc_fsetpos(struct Cyc___cycFILE*f,const long long*b){return fsetpos(f->file,b);}
! long ftell(struct Cyc_Cstdio___abstractFILE*);long Cyc_ftell(struct Cyc___cycFILE*f){
! return ftell(f->file);}long long ftello(struct Cyc_Cstdio___abstractFILE*);
! long long Cyc_ftello(struct Cyc___cycFILE*f){return ftello(f->file);}unsigned long
! fwrite(const char*,unsigned long,unsigned long,struct Cyc_Cstdio___abstractFILE*);
! static char _tmp26[31]="fwrite called with NULL string";static struct Cyc_Core_Failure_struct
! Cyc___fwrite_failure_1={Cyc_Core_Failure,{_tmp26,_tmp26 + 31}};static char _tmp28[
! 28]="fwrite: buffer insufficient";static struct Cyc_Core_Failure_struct Cyc___fwrite_failure_2={
! Cyc_Core_Failure,{_tmp28,_tmp28 + 28}};unsigned long Cyc_fwrite(struct
! _dynforward_ptr ptr,unsigned long size,unsigned long nmemb,struct Cyc___cycFILE*f){
! if(!((unsigned int)ptr.curr))(int)_throw((void*)& Cyc___fwrite_failure_1);else{
! if(size * nmemb > _get_dynforward_size(ptr,sizeof(char)))(int)_throw((void*)& Cyc___fwrite_failure_2);
! return fwrite((const char*)_untag_dynforward_ptr(ptr,sizeof(char),1),size,nmemb,f->file);}}
! int getc(struct Cyc_Cstdio___abstractFILE*);int Cyc_getc(struct Cyc___cycFILE*f){
! return getc(f->file);}int getchar();int Cyc_getchar(){return getchar();}int pclose(
! struct Cyc_Cstdio___abstractFILE*);int Cyc_pclose(struct Cyc___cycFILE*f){return
! pclose(f->file);}struct Cyc_Cstdio___abstractFILE*popen(const char*,const char*);
! struct Cyc___cycFILE*Cyc_popen(const char*name,const char*type){struct Cyc_Cstdio___abstractFILE*
! _tmp29=popen(name,type);return(unsigned int)_tmp29?({struct Cyc___cycFILE*_tmp2A=
! _cycalloc(sizeof(*_tmp2A));_tmp2A->file=(struct Cyc_Cstdio___abstractFILE*)_tmp29;
! _tmp2A;}): 0;}int putc(int,struct Cyc_Cstdio___abstractFILE*);int Cyc_putc(int x,
! struct Cyc___cycFILE*f){return putc(x,f->file);}void rewind(struct Cyc_Cstdio___abstractFILE*);
  void Cyc_rewind(struct Cyc___cycFILE*f){return rewind(f->file);}int setvbuf(struct
! Cyc_Cstdio___abstractFILE*,char*,int,unsigned long);static char _tmp2C[24]="setvbuf: buffer is NULL";
  static struct Cyc_Core_Failure_struct Cyc___setvbuf_failure_1={Cyc_Core_Failure,{
! _tmp2C,_tmp2C + 24}};static char _tmp2E[29]="setvbuf: buffer insufficient";static
! struct Cyc_Core_Failure_struct Cyc___setvbuf_failure_2={Cyc_Core_Failure,{_tmp2E,
! _tmp2E + 29}};int Cyc_setvbuf(struct Cyc___cycFILE*f,struct _dynforward_ptr buf,int
! type,unsigned long size){if(!((unsigned int)buf.curr))(int)_throw((void*)& Cyc___setvbuf_failure_1);
  if(_get_dynforward_size(buf,sizeof(char))< size)(int)_throw((void*)& Cyc___setvbuf_failure_2);
  return setvbuf(f->file,(char*)_check_null(_untag_dynforward_ptr(buf,sizeof(char),
  1)),type,size);}void Cyc_setbuf(struct Cyc___cycFILE*f,struct _dynforward_ptr buf){
! Cyc_setvbuf(f,buf,(unsigned int)buf.curr?0: 2,1024);return;}int ungetc(int,struct
  Cyc_Cstdio___abstractFILE*);int Cyc_ungetc(int x,struct Cyc___cycFILE*f){return
  ungetc(x,f->file);}int getw(struct Cyc_Cstdio___abstractFILE*);int Cyc_getw(struct
  Cyc___cycFILE*f){return getw(f->file);}int putw(int,struct Cyc_Cstdio___abstractFILE*);
***************
*** 921,1210 ****
  struct Cyc___cycFILE*Cyc_file_open(struct _dynforward_ptr fname,struct
  _dynforward_ptr mode){struct Cyc___cycFILE*f=Cyc_fopen((const char*)
  _untag_dynforward_ptr(fname,sizeof(char),1),(const char*)_untag_dynforward_ptr(
! mode,sizeof(char),1));if(f == 0){struct _dynforward_ptr fn=({unsigned int _tmp3A=
! _get_dynforward_size(fname,sizeof(char));char*_tmp3B=(char*)_cycalloc_atomic(
! _check_times(sizeof(char),_tmp3A + 1));struct _dynforward_ptr _tmp3D=
! _tag_dynforward(_tmp3B,sizeof(char),_tmp3A + 1);{unsigned int _tmp3C=_tmp3A;
! unsigned int i;for(i=0;i < _tmp3C;i ++){_tmp3B[i]=((const char*)fname.curr)[(int)i];}
! _tmp3B[_tmp3C]=(char)0;}_tmp3D;});(int)_throw((void*)({struct Cyc_FileOpenError_struct*
! _tmp38=_cycalloc(sizeof(*_tmp38));_tmp38[0]=({struct Cyc_FileOpenError_struct
! _tmp39;_tmp39.tag=Cyc_FileOpenError;_tmp39.f1=fn;_tmp39;});_tmp38;}));}return(
  struct Cyc___cycFILE*)f;}void Cyc_file_close(struct Cyc___cycFILE*f){if(Cyc_fclose(
  f)!= 0)(int)_throw((void*)Cyc_FileCloseError);}typedef struct{int quot;int rem;}Cyc_div_t;
  typedef struct{long quot;long rem;}Cyc_ldiv_t;void*abort();void exit(int);void Cyc_free(
! struct _dynforward_ptr);void Cyc_qsort(struct _dynforward_ptr,unsigned int,
  unsigned int,int(*)(const void*,const void*));void Cyc_free(struct _dynforward_ptr
! ptr){;}void qsort(void*,unsigned int,unsigned int,int(*)(const void*,const void*));
! static char _tmp3F[23]="qsort called with NULL";static struct Cyc_Core_Failure_struct
! Cyc___qsort_failure_1={Cyc_Core_Failure,{_tmp3F,_tmp3F + 23}};static char _tmp41[42]="qsort called with insufficient array size";
  static struct Cyc_Core_Failure_struct Cyc___qsort_failure_2={Cyc_Core_Failure,{
! _tmp41,_tmp41 + 42}};void Cyc_qsort(struct _dynforward_ptr tab,unsigned int nmemb,
  unsigned int szmemb,int(*compar)(const void*,const void*)){if(!((unsigned int)tab.curr))(
  int)_throw((void*)& Cyc___qsort_failure_1);if(_get_dynforward_size(tab,sizeof(
  void))< nmemb)(int)_throw((void*)& Cyc___qsort_failure_2);qsort((void*)
! _untag_dynforward_ptr(tab,sizeof(void),1),nmemb,(unsigned int)szmemb,compar);}
! struct Cyc_ipc_perm{int __key;unsigned int uid;unsigned int gid;unsigned int cuid;
! unsigned int cgid;unsigned short mode;unsigned short __pad1;unsigned short __seq;
! unsigned short __pad2;unsigned long __unused1;unsigned long __unused2;};struct
! _dynforward_ptr Cyc_mmap(struct _dynforward_ptr,unsigned int length,int prot,int
! flags,int fd,long offset);int Cyc_munmap(struct _dynforward_ptr start,unsigned int
! length);char*__stub_mmap(char*start,unsigned int length,int prot,int flags,int fd,
! long offset);int munmap(const char*start,unsigned int length);static char _tmp43[42]="mmap called with illegal start/prot/flags";
! static struct Cyc_Core_Failure_struct Cyc___mmap_failure={Cyc_Core_Failure,{_tmp43,
! _tmp43 + 42}};struct _dynforward_ptr Cyc_mmap(struct _dynforward_ptr ignored,
! unsigned int length,int prot,int flags,int fd,long offset){if((ignored.curr == (
! _tag_dynforward(0,0,0)).curr  && prot == 1) && (flags == 2  || flags == 1))return(
! struct _dynforward_ptr)wrap_Cbuffer_as_buffer(__stub_mmap(0,length,prot,flags,fd,
! offset),length);else{(int)_throw((void*)& Cyc___mmap_failure);}}int Cyc_munmap(
! struct _dynforward_ptr start,unsigned int length){return munmap((const char*)
! _check_null(_untag_dynforward_ptr(start,sizeof(char),1)),length);}struct Cyc_timeval{
! long tv_sec;long tv_usec;};struct Cyc_rlimit{unsigned long rlim_cur;unsigned long
! rlim_max;};enum Cyc___rusage_who{Cyc_RUSAGE_SELF  = 0,Cyc_RUSAGE_CHILDREN  = -1,
! Cyc_RUSAGE_BOTH  = -2};struct Cyc_rusage{struct Cyc_timeval ru_utime;struct Cyc_timeval
! ru_stime;long ru_maxrss;long ru_ixrss;long ru_idrss;long ru_isrss;long ru_minflt;long
! ru_majflt;long ru_nswap;long ru_inblock;long ru_oublock;long ru_msgsnd;long ru_msgrcv;
! long ru_nsignals;long ru_nvcsw;long ru_nivcsw;};enum Cyc___priority_which{Cyc_PRIO_PROCESS
!  = 0,Cyc_PRIO_PGRP  = 1,Cyc_PRIO_USER  = 2};struct Cyc_timespec{long tv_sec;long
! tv_nsec;};typedef struct{long __fds_bits[1024 / (8 * sizeof(long))];}Cyc_fd_set;int
! Cyc_select(int a,Cyc_fd_set*b,Cyc_fd_set*c,Cyc_fd_set*d,struct Cyc_timeval*e);void
! Cyc_FD_CLR(int,Cyc_fd_set*);int Cyc_FD_ISSET(int,Cyc_fd_set*);void Cyc_FD_SET(int,
! Cyc_fd_set*);void Cyc_FD_ZERO(Cyc_fd_set*);int select(int,Cyc_fd_set*,Cyc_fd_set*,
! Cyc_fd_set*,struct Cyc_timeval*);extern int Cyc_select(int a,Cyc_fd_set*b,Cyc_fd_set*
! c,Cyc_fd_set*d,struct Cyc_timeval*e){if(a < 0  || a > 1024){*((int*)_check_null(
! __CYCLONE_ERRNO()))=22;return - 1;}return select(a,b,c,d,e);}void __stub_FD_CLR(int,
! Cyc_fd_set*);int __stub_FD_ISSET(int,Cyc_fd_set*);void __stub_FD_SET(int,Cyc_fd_set*);
! void __stub_FD_ZERO(Cyc_fd_set*);void Cyc_FD_CLR(int a,Cyc_fd_set*b){if(a < 0  || a > 
! 1024)return;return __stub_FD_CLR(a,b);}int Cyc_FD_ISSET(int a,Cyc_fd_set*b){if(a < 0
!  || a > 1024)return 0;return __stub_FD_ISSET(a,b);}void Cyc_FD_SET(int a,Cyc_fd_set*b){
! if(a < 0  || a > 1024)return;return __stub_FD_SET(a,b);}void Cyc_FD_ZERO(Cyc_fd_set*a){
! return __stub_FD_ZERO(a);}enum Cyc___socket_type{Cyc_SOCK_STREAM  = 1,Cyc_SOCK_DGRAM
!  = 2,Cyc_SOCK_RAW  = 3,Cyc_SOCK_RDM  = 4,Cyc_SOCK_SEQPACKET  = 5,Cyc_SOCK_PACKET  = 
! 10};enum Cyc___anonymous_enum_271__{Cyc_MSG_OOB  = 1,Cyc_MSG_PEEK  = 2,Cyc_MSG_DONTROUTE
!  = 4,Cyc_MSG_CTRUNC  = 8,Cyc_MSG_PROXY  = 16,Cyc_MSG_TRUNC  = 32,Cyc_MSG_DONTWAIT
!  = 64,Cyc_MSG_EOR  = 128,Cyc_MSG_WAITALL  = 256,Cyc_MSG_FIN  = 512,Cyc_MSG_SYN  = 
! 1024,Cyc_MSG_CONFIRM  = 2048,Cyc_MSG_RST  = 4096,Cyc_MSG_ERRQUEUE  = 8192,Cyc_MSG_NOSIGNAL
!  = 16384,Cyc_MSG_MORE  = 32768};struct Cyc_cmsghdr{unsigned int cmsg_len;int
! cmsg_level;int cmsg_type;unsigned char __cmsg_data[0];};enum Cyc___anonymous_enum_272__{
! Cyc_SCM_RIGHTS  = 1,Cyc_SCM_CREDENTIALS  = 2,Cyc___SCM_CONNECT  = 3};struct Cyc_linger{
! int l_onoff;int l_linger;};enum Cyc___anonymous_enum_273__{Cyc_SHUT_RD  = 0,Cyc_SHUT_WR
!  = 1,Cyc_SHUT_RDWR  = 2};struct Cyc_SA_sockaddr_in_struct{int tag;struct Cyc_sockaddr_in*
! f1;};struct Cyc_SA_socklenptr_struct{int tag;unsigned int*f1;};struct Cyc_SA_socklen_struct{
! int tag;unsigned int f1;};struct Cyc_SO_int_struct{int tag;int*f1;};struct Cyc_SO_timeval_struct{
! int tag;struct Cyc_timeval*f1;};struct Cyc_SO_socklenptr_struct{int tag;unsigned int*
! f1;};struct Cyc_SO_socklen_struct{int tag;unsigned int f1;};int Cyc_accept(int fd,
! struct _dynforward_ptr);extern char Cyc_SocketError[16];int Cyc_bind(int fd,struct
  _dynforward_ptr);int Cyc_connect(int fd,struct _dynforward_ptr);int Cyc_getpeername(
  int fd,struct _dynforward_ptr);int Cyc_getsockname(int fd,struct _dynforward_ptr);int
  Cyc_getsockopt(int fd,int level,int optname,struct _dynforward_ptr);int Cyc_recv(int
! fd,struct _dynforward_ptr buf,unsigned int n,int flags);int Cyc_recvfrom(int fd,struct
! _dynforward_ptr buf,unsigned int n,int flags,struct _dynforward_ptr);int Cyc_send(int
! fd,struct _dynforward_ptr buf,unsigned int n,int flags);int Cyc_sendto(int fd,struct
! _dynforward_ptr buf,unsigned int n,int flags,struct _dynforward_ptr);int Cyc_setsockopt(
  int fd,int level,int optname,struct _dynforward_ptr);char Cyc_SocketError[16]="\000\000\000\000SocketError\000";
! int accept_in(int,const struct Cyc_sockaddr_in*,unsigned int*);struct _tuple0{void*
! f1;void*f2;};int Cyc_accept(int fd,struct _dynforward_ptr ap){if(
  _get_dynforward_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
! struct _tuple0 _tmp45=({struct _tuple0 _tmp44;_tmp44.f1=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),0));_tmp44.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp44;});void*_tmp46;struct Cyc_sockaddr_in*
! _tmp47;void*_tmp48;unsigned int*_tmp49;_LL14: _tmp46=_tmp45.f1;if(*((int*)_tmp46)
! != 0)goto _LL16;_tmp47=((struct Cyc_SA_sockaddr_in_struct*)_tmp46)->f1;_tmp48=
! _tmp45.f2;if(*((int*)_tmp48)!= 1)goto _LL16;_tmp49=((struct Cyc_SA_socklenptr_struct*)
! _tmp48)->f1;_LL15: return accept_in(fd,(const struct Cyc_sockaddr_in*)_tmp47,_tmp49);
! _LL16:;_LL17:(int)_throw((void*)Cyc_SocketError);_LL13:;}}int bind_in(int,const
! struct Cyc_sockaddr_in*,unsigned int);int Cyc_bind(int fd,struct _dynforward_ptr ap){
  if(_get_dynforward_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
! struct _tuple0 _tmp4B=({struct _tuple0 _tmp4A;_tmp4A.f1=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),0));_tmp4A.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp4A;});void*_tmp4C;struct Cyc_sockaddr_in*
! _tmp4D;void*_tmp4E;unsigned int _tmp4F;_LL19: _tmp4C=_tmp4B.f1;if(*((int*)_tmp4C)
! != 0)goto _LL1B;_tmp4D=((struct Cyc_SA_sockaddr_in_struct*)_tmp4C)->f1;_tmp4E=
! _tmp4B.f2;if(*((int*)_tmp4E)!= 2)goto _LL1B;_tmp4F=((struct Cyc_SA_socklen_struct*)
! _tmp4E)->f1;_LL1A: return bind_in(fd,(const struct Cyc_sockaddr_in*)_tmp4D,_tmp4F);
! _LL1B:;_LL1C:(int)_throw((void*)Cyc_SocketError);_LL18:;}}int connect_in(int,
! const struct Cyc_sockaddr_in*,unsigned int);int Cyc_connect(int fd,struct
  _dynforward_ptr ap){if(_get_dynforward_size(ap,sizeof(void*))!= 2)(int)_throw((
! void*)Cyc_SocketError);{struct _tuple0 _tmp51=({struct _tuple0 _tmp50;_tmp50.f1=*((
! void**)_check_dynforward_subscript(ap,sizeof(void*),0));_tmp50.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp50;});void*_tmp52;struct Cyc_sockaddr_in*
! _tmp53;void*_tmp54;unsigned int _tmp55;_LL1E: _tmp52=_tmp51.f1;if(*((int*)_tmp52)
! != 0)goto _LL20;_tmp53=((struct Cyc_SA_sockaddr_in_struct*)_tmp52)->f1;_tmp54=
! _tmp51.f2;if(*((int*)_tmp54)!= 2)goto _LL20;_tmp55=((struct Cyc_SA_socklen_struct*)
! _tmp54)->f1;_LL1F: return connect_in(fd,(const struct Cyc_sockaddr_in*)_tmp53,_tmp55);
! _LL20:;_LL21:(int)_throw((void*)Cyc_SocketError);_LL1D:;}}int getpeername_in(int,
! const struct Cyc_sockaddr_in*,unsigned int*);int Cyc_getpeername(int fd,struct
  _dynforward_ptr ap){if(_get_dynforward_size(ap,sizeof(void*))!= 2)(int)_throw((
! void*)Cyc_SocketError);{struct _tuple0 _tmp57=({struct _tuple0 _tmp56;_tmp56.f1=*((
! void**)_check_dynforward_subscript(ap,sizeof(void*),0));_tmp56.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp56;});void*_tmp58;struct Cyc_sockaddr_in*
! _tmp59;void*_tmp5A;unsigned int*_tmp5B;_LL23: _tmp58=_tmp57.f1;if(*((int*)_tmp58)
! != 0)goto _LL25;_tmp59=((struct Cyc_SA_sockaddr_in_struct*)_tmp58)->f1;_tmp5A=
! _tmp57.f2;if(*((int*)_tmp5A)!= 1)goto _LL25;_tmp5B=((struct Cyc_SA_socklenptr_struct*)
! _tmp5A)->f1;_LL24: return getpeername_in(fd,(const struct Cyc_sockaddr_in*)_tmp59,
! _tmp5B);_LL25:;_LL26:(int)_throw((void*)Cyc_SocketError);_LL22:;}}int
! getsockname_in(int,const struct Cyc_sockaddr_in*,unsigned int*);int Cyc_getsockname(
! int fd,struct _dynforward_ptr ap){if(_get_dynforward_size(ap,sizeof(void*))!= 2)(
! int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp5D=({struct _tuple0 _tmp5C;
! _tmp5C.f1=*((void**)_check_dynforward_subscript(ap,sizeof(void*),0));_tmp5C.f2=*((
! void**)_check_dynforward_subscript(ap,sizeof(void*),1));_tmp5C;});void*_tmp5E;
! struct Cyc_sockaddr_in*_tmp5F;void*_tmp60;unsigned int*_tmp61;_LL28: _tmp5E=_tmp5D.f1;
! if(*((int*)_tmp5E)!= 0)goto _LL2A;_tmp5F=((struct Cyc_SA_sockaddr_in_struct*)
! _tmp5E)->f1;_tmp60=_tmp5D.f2;if(*((int*)_tmp60)!= 1)goto _LL2A;_tmp61=((struct Cyc_SA_socklenptr_struct*)
! _tmp60)->f1;_LL29: return getsockname_in(fd,(const struct Cyc_sockaddr_in*)_tmp5F,
! _tmp61);_LL2A:;_LL2B:(int)_throw((void*)Cyc_SocketError);_LL27:;}}int
! getsockopt_int(int,int,int,int*,unsigned int*);int getsockopt_timeval(int,int,int,
! struct Cyc_timeval*,unsigned int*);int Cyc_getsockopt(int fd,int level,int optname,
! struct _dynforward_ptr ap){if(_get_dynforward_size(ap,sizeof(void*))!= 2)(int)
! _throw((void*)Cyc_SocketError);{struct _tuple0 _tmp63=({struct _tuple0 _tmp62;_tmp62.f1=*((
! void**)_check_dynforward_subscript(ap,sizeof(void*),0));_tmp62.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp62;});void*_tmp64;int*
! _tmp65;void*_tmp66;unsigned int*_tmp67;void*_tmp68;int*_tmp69;void*_tmp6A;int*
! _tmp6B;void*_tmp6C;struct Cyc_timeval*_tmp6D;void*_tmp6E;unsigned int*_tmp6F;void*
! _tmp70;struct Cyc_timeval*_tmp71;void*_tmp72;int*_tmp73;_LL2D: _tmp64=_tmp63.f1;
! if(*((int*)_tmp64)!= 0)goto _LL2F;_tmp65=((struct Cyc_SO_int_struct*)_tmp64)->f1;
! _tmp66=_tmp63.f2;if(*((int*)_tmp66)!= 2)goto _LL2F;_tmp67=((struct Cyc_SO_socklenptr_struct*)
! _tmp66)->f1;_LL2E: return getsockopt_int(fd,level,optname,_tmp65,_tmp67);_LL2F:
! _tmp68=_tmp63.f1;if(*((int*)_tmp68)!= 0)goto _LL31;_tmp69=((struct Cyc_SO_int_struct*)
! _tmp68)->f1;_tmp6A=_tmp63.f2;if(*((int*)_tmp6A)!= 0)goto _LL31;_tmp6B=((struct Cyc_SO_int_struct*)
! _tmp6A)->f1;_LL30: return getsockopt_int(fd,level,optname,_tmp69,(unsigned int*)
! _tmp6B);_LL31: _tmp6C=_tmp63.f1;if(*((int*)_tmp6C)!= 1)goto _LL33;_tmp6D=((struct
! Cyc_SO_timeval_struct*)_tmp6C)->f1;_tmp6E=_tmp63.f2;if(*((int*)_tmp6E)!= 2)goto
! _LL33;_tmp6F=((struct Cyc_SO_socklenptr_struct*)_tmp6E)->f1;_LL32: return
! getsockopt_timeval(fd,level,optname,_tmp6D,_tmp6F);_LL33: _tmp70=_tmp63.f1;if(*((
! int*)_tmp70)!= 1)goto _LL35;_tmp71=((struct Cyc_SO_timeval_struct*)_tmp70)->f1;
! _tmp72=_tmp63.f2;if(*((int*)_tmp72)!= 0)goto _LL35;_tmp73=((struct Cyc_SO_int_struct*)
! _tmp72)->f1;_LL34: return getsockopt_timeval(fd,level,optname,_tmp71,(unsigned int*)
! _tmp73);_LL35:;_LL36:(int)_throw((void*)Cyc_SocketError);_LL2C:;}}int
! recv_wrapped(int,struct _dynforward_ptr,unsigned int,int);int Cyc_recv(int fd,
! struct _dynforward_ptr buf,unsigned int n,int flags){return recv_wrapped(fd,buf,n,
! flags);}int recvfrom_in(int,struct _dynforward_ptr,unsigned int,int,const struct Cyc_sockaddr_in*,
! unsigned int*);int Cyc_recvfrom(int fd,struct _dynforward_ptr buf,unsigned int n,int
! flags,struct _dynforward_ptr ap){if(_get_dynforward_size(ap,sizeof(void*))!= 2)(
! int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp75=({struct _tuple0 _tmp74;
! _tmp74.f1=*((void**)_check_dynforward_subscript(ap,sizeof(void*),0));_tmp74.f2=*((
! void**)_check_dynforward_subscript(ap,sizeof(void*),1));_tmp74;});void*_tmp76;
! struct Cyc_sockaddr_in*_tmp77;void*_tmp78;unsigned int*_tmp79;_LL38: _tmp76=_tmp75.f1;
! if(*((int*)_tmp76)!= 0)goto _LL3A;_tmp77=((struct Cyc_SA_sockaddr_in_struct*)
! _tmp76)->f1;_tmp78=_tmp75.f2;if(*((int*)_tmp78)!= 1)goto _LL3A;_tmp79=((struct Cyc_SA_socklenptr_struct*)
! _tmp78)->f1;_LL39: return recvfrom_in(fd,buf,n,flags,(const struct Cyc_sockaddr_in*)
! _tmp77,_tmp79);_LL3A:;_LL3B:(int)_throw((void*)Cyc_SocketError);_LL37:;}}int
! send_wrapped(int,struct _dynforward_ptr,unsigned int,int);int Cyc_send(int fd,
! struct _dynforward_ptr buf,unsigned int n,int flags){return send_wrapped(fd,buf,n,
! flags);}int sendto_in(int,struct _dynforward_ptr,unsigned int,int,const struct Cyc_sockaddr_in*,
! unsigned int);int Cyc_sendto(int fd,struct _dynforward_ptr buf,unsigned int n,int
! flags,struct _dynforward_ptr ap){if(_get_dynforward_size(ap,sizeof(void*))!= 2)(
! int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp7B=({struct _tuple0 _tmp7A;
! _tmp7A.f1=*((void**)_check_dynforward_subscript(ap,sizeof(void*),0));_tmp7A.f2=*((
! void**)_check_dynforward_subscript(ap,sizeof(void*),1));_tmp7A;});void*_tmp7C;
! struct Cyc_sockaddr_in*_tmp7D;void*_tmp7E;unsigned int _tmp7F;_LL3D: _tmp7C=_tmp7B.f1;
! if(*((int*)_tmp7C)!= 0)goto _LL3F;_tmp7D=((struct Cyc_SA_sockaddr_in_struct*)
! _tmp7C)->f1;_tmp7E=_tmp7B.f2;if(*((int*)_tmp7E)!= 2)goto _LL3F;_tmp7F=((struct Cyc_SA_socklen_struct*)
! _tmp7E)->f1;_LL3E: return sendto_in(fd,buf,n,flags,(const struct Cyc_sockaddr_in*)
! _tmp7D,_tmp7F);_LL3F:;_LL40:(int)_throw((void*)Cyc_SocketError);_LL3C:;}}int
! setsockopt_int(int,int,int,const int*,unsigned int);int setsockopt_timeval(int,int,
! int,const struct Cyc_timeval*,unsigned int);int Cyc_setsockopt(int fd,int level,int
! optname,struct _dynforward_ptr ap){if(_get_dynforward_size(ap,sizeof(void*))!= 2)(
! int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp81=({struct _tuple0 _tmp80;
! _tmp80.f1=*((void**)_check_dynforward_subscript(ap,sizeof(void*),0));_tmp80.f2=*((
! void**)_check_dynforward_subscript(ap,sizeof(void*),1));_tmp80;});void*_tmp82;
! int*_tmp83;void*_tmp84;unsigned int _tmp85;void*_tmp86;struct Cyc_timeval*_tmp87;
! void*_tmp88;unsigned int _tmp89;_LL42: _tmp82=_tmp81.f1;if(*((int*)_tmp82)!= 0)
! goto _LL44;_tmp83=((struct Cyc_SO_int_struct*)_tmp82)->f1;_tmp84=_tmp81.f2;if(*((
! int*)_tmp84)!= 3)goto _LL44;_tmp85=((struct Cyc_SO_socklen_struct*)_tmp84)->f1;
! _LL43: return setsockopt_int(fd,level,optname,(const int*)_tmp83,_tmp85);_LL44:
! _tmp86=_tmp81.f1;if(*((int*)_tmp86)!= 1)goto _LL46;_tmp87=((struct Cyc_SO_timeval_struct*)
! _tmp86)->f1;_tmp88=_tmp81.f2;if(*((int*)_tmp88)!= 3)goto _LL46;_tmp89=((struct Cyc_SO_socklen_struct*)
! _tmp88)->f1;_LL45: return setsockopt_timeval(fd,level,optname,(const struct Cyc_timeval*)
! _tmp87,_tmp89);_LL46:;_LL47:(int)_throw((void*)Cyc_SocketError);_LL41:;}}struct
! Cyc_stat{unsigned long long st_dev;unsigned short __pad1;unsigned long st_ino;
! unsigned int st_mode;unsigned int st_nlink;unsigned int st_uid;unsigned int st_gid;
! unsigned long long st_rdev;unsigned short __pad2;long st_size;long st_blksize;long
! st_blocks;long st_atime;unsigned long __unused1;long st_mtime;unsigned long
! __unused2;long st_ctime;unsigned long __unused3;unsigned long __unused4;
! unsigned long __unused5;};struct Cyc_timezone{int tz_minuteswest;int tz_dsttime;};
! enum Cyc___itimer_which{Cyc_ITIMER_REAL  = 0,Cyc_ITIMER_VIRTUAL  = 1,Cyc_ITIMER_PROF
!  = 2};struct Cyc_itimerval{struct Cyc_timeval it_interval;struct Cyc_timeval it_value;
! };int Cyc_gettimeofday(struct Cyc_timeval*,struct Cyc_timezone*);int Cyc_select(int,
! Cyc_fd_set*,Cyc_fd_set*,Cyc_fd_set*,struct Cyc_timeval*);void Cyc_FD_CLR(int,Cyc_fd_set*);
! int Cyc_FD_ISSET(int,Cyc_fd_set*);void Cyc_FD_SET(int,Cyc_fd_set*);void Cyc_FD_ZERO(
! Cyc_fd_set*);int gettimeofday(struct Cyc_timeval*,struct Cyc_timezone*);int Cyc_gettimeofday(
  struct Cyc_timeval*a,struct Cyc_timezone*b){return gettimeofday(a,0);}struct Cyc_timeb{
! long time;unsigned short millitm;short timezone;short dstflag;};struct Cyc_tms{long
! tms_utime;long tms_stime;long tms_cutime;long tms_cstime;};struct Cyc_sockaddr_un{
! unsigned short sun_family;char sun_path[108];};struct Cyc_utsname{char sysname[65];
! char nodename[65];char release[65];char version[65];char machine[65];char
! __domainname[65];};typedef enum {Cyc_P_ALL  = 0,Cyc_P_PID  = 1,Cyc_P_PGID  = 2 }Cyc_idtype_t;
! struct Cyc_tm{int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int
! tm_wday;int tm_yday;int tm_isdst;long tm_gmtoff;const char*tm_zone;};struct Cyc_itimerspec{
! struct Cyc_timespec it_interval;struct Cyc_timespec it_value;};unsigned int Cyc_strftime(
! struct _dynforward_ptr,unsigned int,struct _dynforward_ptr,const struct Cyc_tm*);
! unsigned int strftime(char*,unsigned int,const char*,const struct Cyc_tm*);static
! char _tmp8B[27]="fgets: buffer insufficient";static struct Cyc_Core_Failure_struct
! Cyc___strftime_failure={Cyc_Core_Failure,{_tmp8B,_tmp8B + 27}};unsigned int Cyc_strftime(
! struct _dynforward_ptr s,unsigned int maxsize,struct _dynforward_ptr fmt,const struct
  Cyc_tm*t){if(maxsize > _get_dynforward_size(s,sizeof(char)))(int)_throw((void*)&
  Cyc___strftime_failure);return strftime((char*)_check_null(_untag_dynforward_ptr(
  s,sizeof(char),1)),maxsize,(const char*)_check_null(_untag_dynforward_ptr(fmt,
! sizeof(char),1)),t);}enum Cyc___anonymous_enum_368__{Cyc__PC_LINK_MAX  = 0,Cyc__PC_MAX_CANON
!  = 1,Cyc__PC_MAX_INPUT  = 2,Cyc__PC_NAME_MAX  = 3,Cyc__PC_PATH_MAX  = 4,Cyc__PC_PIPE_BUF
!  = 5,Cyc__PC_CHOWN_RESTRICTED  = 6,Cyc__PC_NO_TRUNC  = 7,Cyc__PC_VDISABLE  = 8,Cyc__PC_SYNC_IO
!  = 9,Cyc__PC_ASYNC_IO  = 10,Cyc__PC_PRIO_IO  = 11,Cyc__PC_SOCK_MAXBUF  = 12,Cyc__PC_FILESIZEBITS
!  = 13,Cyc__PC_REC_INCR_XFER_SIZE  = 14,Cyc__PC_REC_MAX_XFER_SIZE  = 15,Cyc__PC_REC_MIN_XFER_SIZE
!  = 16,Cyc__PC_REC_XFER_ALIGN  = 17,Cyc__PC_ALLOC_SIZE_MIN  = 18,Cyc__PC_SYMLINK_MAX
!  = 19};enum Cyc___anonymous_enum_370__{Cyc__CS_PATH  = 0,Cyc__CS_V6_WIDTH_RESTRICTED_ENVS
!  = 1};struct Cyc_option{struct _dynforward_ptr name;int has_arg;int*flag;int val;};
! int Cyc_execlp(const char*,const char*,struct _dynforward_ptr);int execvp(const char*
! file,const char**argv);struct _dynforward_ptr Cyc_getcwd(struct _dynforward_ptr buf,
! unsigned int size);int Cyc_gethostname(struct _dynforward_ptr,unsigned int);int Cyc_read(
! int,struct _dynforward_ptr,unsigned int);int Cyc_write(int,struct _dynforward_ptr,
! unsigned int);static char _tmp8D[36]="execlp arg list not NULL-terminated";static
! struct Cyc_Core_Failure_struct Cyc___execlp_failure={Cyc_Core_Failure,{_tmp8D,
! _tmp8D + 36}};int Cyc_execlp(const char*path,const char*arg0,struct _dynforward_ptr
! argv){if(*((const char**)_check_dynforward_subscript(argv,sizeof(const char*),(int)(
! _get_dynforward_size(argv,sizeof(const char*))- 1)))!= (const char*)0)(int)_throw((
! void*)& Cyc___execlp_failure);{const char**newargs=(const char**)
! _untag_dynforward_ptr(({unsigned int _tmp96=_get_dynforward_size(argv,sizeof(
! const char*));const char**_tmp97=(const char**)_cycalloc(_check_times(sizeof(const
! char*),_tmp96 + 1));struct _dynforward_ptr _tmp99=_tag_dynforward(_tmp97,sizeof(
! const char*),_tmp96 + 1);{unsigned int _tmp98=_tmp96;unsigned int i;for(i=0;i < 
! _tmp98;i ++){_tmp97[i]=(const char*)0;}_tmp97[_tmp98]=(const char*)0;}_tmp99;}),
! sizeof(const char*),1);({struct _dyneither_ptr _tmp8F=_dyneither_ptr_plus(({const
! char**_tmp8E=newargs;_tag_dyneither(_tmp8E,sizeof(const char*),_get_zero_arr_size(
! _tmp8E,1));}),sizeof(const char*),0);const char*_tmp90=*((const char**)
! _check_dyneither_subscript(_tmp8F,sizeof(const char*),0));const char*_tmp91=(const
! char*)arg0;if(_get_dyneither_size(_tmp8F,sizeof(const char*))== 1  && (_tmp90 == 0
!  && _tmp91 != 0))_throw_arraybounds();*((const char**)_tmp8F.curr)=_tmp91;});{int i=
  0;for(0;i < _get_dynforward_size(argv,sizeof(const char*))- 1;i ++){({struct
! _dyneither_ptr _tmp93=_dyneither_ptr_plus(({const char**_tmp92=newargs;
! _tag_dyneither(_tmp92,sizeof(const char*),_get_zero_arr_size(_tmp92,1));}),
! sizeof(const char*),i + 1);const char*_tmp94=*((const char**)
! _check_dyneither_subscript(_tmp93,sizeof(const char*),0));const char*_tmp95=*((
  const char**)_check_dynforward_subscript(argv,sizeof(const char*),i));if(
! _get_dyneither_size(_tmp93,sizeof(const char*))== 1  && (_tmp94 == 0  && _tmp95 != 0))
! _throw_arraybounds();*((const char**)_tmp93.curr)=_tmp95;});}}return execvp(path,(
! const char**)newargs);}}char*getcwd(char*buf,unsigned int size);static char _tmp9B[
  29]="getcwd: invalid buf argument";static struct Cyc_Core_Failure_struct Cyc___getcwd_failure={
! Cyc_Core_Failure,{_tmp9B,_tmp9B + 29}};struct _dynforward_ptr Cyc_getcwd(struct
! _dynforward_ptr buf,unsigned int size){if(_get_dynforward_size(buf,sizeof(char))< 
! size)(int)_throw((void*)& Cyc___getcwd_failure);{char*_tmp9C=getcwd((char*)
  _check_null(_untag_dynforward_ptr(buf,sizeof(char),1)),size);return(unsigned int)
! _tmp9C?buf: _tag_dynforward(0,0,0);}}int gethostname(char*,unsigned int);static
! char _tmp9E[34]="gethostname: called with NULL buf";static struct Cyc_Core_Failure_struct
! Cyc___gethostname_failure_1={Cyc_Core_Failure,{_tmp9E,_tmp9E + 34}};static char
! _tmpA0[42]="gethostname: called with count > buf.size";static struct Cyc_Core_Failure_struct
! Cyc___gethostname_failure_2={Cyc_Core_Failure,{_tmpA0,_tmpA0 + 42}};int Cyc_gethostname(
! struct _dynforward_ptr buf,unsigned int count){if(!((unsigned int)buf.curr))(int)
  _throw((void*)& Cyc___gethostname_failure_1);else{if(count > _get_dynforward_size(
  buf,sizeof(char)))(int)_throw((void*)& Cyc___gethostname_failure_2);return
  gethostname((char*)_untag_dynforward_ptr(buf,sizeof(char),1),count);}}int read(
! int fd,char*buf,unsigned int count);static char _tmpA2[35]="read: called with count > buf.size";
! static struct Cyc_Core_Failure_struct Cyc___read_failure={Cyc_Core_Failure,{_tmpA2,
! _tmpA2 + 35}};int Cyc_read(int fd,struct _dynforward_ptr buf,unsigned int count){if(
  count > _get_dynforward_size(buf,sizeof(char)))(int)_throw((void*)& Cyc___read_failure);
  return read(fd,(char*)_check_null(_untag_dynforward_ptr(buf,sizeof(char),1)),
! count);}int write(int fd,const char*buf,unsigned int count);static char _tmpA4[36]="write: called with count > buf.size";
! static struct Cyc_Core_Failure_struct Cyc___write_failure={Cyc_Core_Failure,{_tmpA4,
! _tmpA4 + 36}};int Cyc_write(int fd,struct _dynforward_ptr buf,unsigned int count){if(
  count > _get_dynforward_size(buf,sizeof(char)))(int)_throw((void*)& Cyc___write_failure);
  return write(fd,(const char*)_untag_dynforward_ptr(buf,sizeof(char),1),count);}
  struct Cyc_utimbuf{long actime;long modtime;};
--- 864,1130 ----
  struct Cyc___cycFILE*Cyc_file_open(struct _dynforward_ptr fname,struct
  _dynforward_ptr mode){struct Cyc___cycFILE*f=Cyc_fopen((const char*)
  _untag_dynforward_ptr(fname,sizeof(char),1),(const char*)_untag_dynforward_ptr(
! mode,sizeof(char),1));if(f == 0){struct _dynforward_ptr fn=({unsigned int _tmp31=
! _get_dynforward_size(fname,sizeof(char));char*_tmp32=(char*)_cycalloc_atomic(
! _check_times(sizeof(char),_tmp31 + 1));struct _dynforward_ptr _tmp34=
! _tag_dynforward(_tmp32,sizeof(char),_tmp31 + 1);{unsigned int _tmp33=_tmp31;
! unsigned int i;for(i=0;i < _tmp33;i ++){_tmp32[i]=((const char*)fname.curr)[(int)i];}
! _tmp32[_tmp33]=(char)0;}_tmp34;});(int)_throw((void*)({struct Cyc_FileOpenError_struct*
! _tmp2F=_cycalloc(sizeof(*_tmp2F));_tmp2F[0]=({struct Cyc_FileOpenError_struct
! _tmp30;_tmp30.tag=Cyc_FileOpenError;_tmp30.f1=fn;_tmp30;});_tmp2F;}));}return(
  struct Cyc___cycFILE*)f;}void Cyc_file_close(struct Cyc___cycFILE*f){if(Cyc_fclose(
  f)!= 0)(int)_throw((void*)Cyc_FileCloseError);}typedef struct{int quot;int rem;}Cyc_div_t;
  typedef struct{long quot;long rem;}Cyc_ldiv_t;void*abort();void exit(int);void Cyc_free(
! struct _dynforward_ptr);void Cyc_qsort(struct _dynforward_ptr,unsigned long,
  unsigned int,int(*)(const void*,const void*));void Cyc_free(struct _dynforward_ptr
! ptr){;}void qsort(void*,unsigned long,unsigned long,int(*)(const void*,const void*));
! static char _tmp36[23]="qsort called with NULL";static struct Cyc_Core_Failure_struct
! Cyc___qsort_failure_1={Cyc_Core_Failure,{_tmp36,_tmp36 + 23}};static char _tmp38[42]="qsort called with insufficient array size";
  static struct Cyc_Core_Failure_struct Cyc___qsort_failure_2={Cyc_Core_Failure,{
! _tmp38,_tmp38 + 42}};void Cyc_qsort(struct _dynforward_ptr tab,unsigned long nmemb,
  unsigned int szmemb,int(*compar)(const void*,const void*)){if(!((unsigned int)tab.curr))(
  int)_throw((void*)& Cyc___qsort_failure_1);if(_get_dynforward_size(tab,sizeof(
  void))< nmemb)(int)_throw((void*)& Cyc___qsort_failure_2);qsort((void*)
! _untag_dynforward_ptr(tab,sizeof(void),1),nmemb,(unsigned long)szmemb,compar);}
! struct Cyc_ipc_perm{unsigned short cuid;unsigned short cgid;unsigned short uid;
! unsigned short gid;unsigned short mode;unsigned short seq;long key;};struct
! _dynforward_ptr Cyc_mmap(struct _dynforward_ptr,unsigned long length,int prot,int
! flags,int fd,long long offset);int Cyc_munmap(struct _dynforward_ptr start,
! unsigned long length);char*__stub_mmap(char*start,unsigned long length,int prot,int
! flags,int fd,long long offset);int munmap(const char*start,unsigned long length);
! static char _tmp3A[42]="mmap called with illegal start/prot/flags";static struct Cyc_Core_Failure_struct
! Cyc___mmap_failure={Cyc_Core_Failure,{_tmp3A,_tmp3A + 42}};struct _dynforward_ptr
! Cyc_mmap(struct _dynforward_ptr ignored,unsigned long length,int prot,int flags,int fd,
! long long offset){if((ignored.curr == (_tag_dynforward(0,0,0)).curr  && prot == 1)
!  && (flags == 2  || flags == 1))return(struct _dynforward_ptr)wrap_Cbuffer_as_buffer(
! __stub_mmap(0,length,prot,flags,fd,offset),length);else{(int)_throw((void*)& Cyc___mmap_failure);}}
! int Cyc_munmap(struct _dynforward_ptr start,unsigned long length){return munmap((
! const char*)_check_null(_untag_dynforward_ptr(start,sizeof(char),1)),length);}
! struct Cyc_timeval{int tv_sec;int tv_usec;};struct Cyc_rusage{struct Cyc_timeval
! ru_utime;struct Cyc_timeval ru_stime;long ru_maxrss;long ru_ixrss;long ru_idrss;long
! ru_isrss;long ru_minflt;long ru_majflt;long ru_nswap;long ru_inblock;long ru_oublock;
! long ru_msgsnd;long ru_msgrcv;long ru_nsignals;long ru_nvcsw;long ru_nivcsw;};struct
! Cyc_rlimit{long long rlim_cur;long long rlim_max;};struct Cyc_fd_set{int fds_bits[(
! 1024 + (sizeof(int)* 8 - 1))/ (sizeof(int)* 8)];};struct Cyc_timespec{long tv_sec;
! int tv_nsec;};int Cyc_select(int a,struct Cyc_fd_set*b,struct Cyc_fd_set*c,struct Cyc_fd_set*
! d,struct Cyc_timeval*e);void Cyc_FD_CLR(int,struct Cyc_fd_set*);int Cyc_FD_ISSET(int,
! struct Cyc_fd_set*);void Cyc_FD_SET(int,struct Cyc_fd_set*);void Cyc_FD_ZERO(struct
! Cyc_fd_set*);int select(int,struct Cyc_fd_set*,struct Cyc_fd_set*,struct Cyc_fd_set*,
! struct Cyc_timeval*);extern int Cyc_select(int a,struct Cyc_fd_set*b,struct Cyc_fd_set*
! c,struct Cyc_fd_set*d,struct Cyc_timeval*e){if(a < 0  || a > 1024){*((int*)
! _check_null(__CYCLONE_ERRNO()))=22;return - 1;}return select(a,b,c,d,e);}void
! __stub_FD_CLR(int,struct Cyc_fd_set*);int __stub_FD_ISSET(int,struct Cyc_fd_set*);
! void __stub_FD_SET(int,struct Cyc_fd_set*);void __stub_FD_ZERO(struct Cyc_fd_set*);
! void Cyc_FD_CLR(int a,struct Cyc_fd_set*b){if(a < 0  || a > 1024)return;return
! __stub_FD_CLR(a,b);}int Cyc_FD_ISSET(int a,struct Cyc_fd_set*b){if(a < 0  || a > 1024)
! return 0;return __stub_FD_ISSET(a,b);}void Cyc_FD_SET(int a,struct Cyc_fd_set*b){if(a
! < 0  || a > 1024)return;return __stub_FD_SET(a,b);}void Cyc_FD_ZERO(struct Cyc_fd_set*
! a){return __stub_FD_ZERO(a);}struct Cyc_cmsghdr;struct Cyc_linger{int l_onoff;int
! l_linger;};struct Cyc_SA_sockaddr_in_struct{int tag;struct Cyc_sockaddr_in*f1;};
! struct Cyc_SA_socklenptr_struct{int tag;int*f1;};struct Cyc_SA_socklen_struct{int
! tag;int f1;};struct Cyc_SO_int_struct{int tag;int*f1;};struct Cyc_SO_timeval_struct{
! int tag;struct Cyc_timeval*f1;};struct Cyc_SO_socklenptr_struct{int tag;int*f1;};
! struct Cyc_SO_socklen_struct{int tag;int f1;};int Cyc_accept(int fd,struct
! _dynforward_ptr);extern char Cyc_SocketError[16];int Cyc_bind(int fd,struct
  _dynforward_ptr);int Cyc_connect(int fd,struct _dynforward_ptr);int Cyc_getpeername(
  int fd,struct _dynforward_ptr);int Cyc_getsockname(int fd,struct _dynforward_ptr);int
  Cyc_getsockopt(int fd,int level,int optname,struct _dynforward_ptr);int Cyc_recv(int
! fd,struct _dynforward_ptr buf,unsigned long n,int flags);int Cyc_recvfrom(int fd,
! struct _dynforward_ptr buf,unsigned long n,int flags,struct _dynforward_ptr);int Cyc_send(
! int fd,struct _dynforward_ptr buf,unsigned long n,int flags);int Cyc_sendto(int fd,
! struct _dynforward_ptr buf,unsigned long n,int flags,struct _dynforward_ptr);int Cyc_setsockopt(
  int fd,int level,int optname,struct _dynforward_ptr);char Cyc_SocketError[16]="\000\000\000\000SocketError\000";
! int accept_in(int,const struct Cyc_sockaddr_in*,int*);struct _tuple0{void*f1;void*f2;
! };int Cyc_accept(int fd,struct _dynforward_ptr ap){if(_get_dynforward_size(ap,
! sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp3C=({
! struct _tuple0 _tmp3B;_tmp3B.f1=*((void**)_check_dynforward_subscript(ap,sizeof(
! void*),0));_tmp3B.f2=*((void**)_check_dynforward_subscript(ap,sizeof(void*),1));
! _tmp3B;});void*_tmp3D;struct Cyc_sockaddr_in*_tmp3E;void*_tmp3F;int*_tmp40;_LLF:
! _tmp3D=_tmp3C.f1;if(*((int*)_tmp3D)!= 0)goto _LL11;_tmp3E=((struct Cyc_SA_sockaddr_in_struct*)
! _tmp3D)->f1;_tmp3F=_tmp3C.f2;if(*((int*)_tmp3F)!= 1)goto _LL11;_tmp40=((struct Cyc_SA_socklenptr_struct*)
! _tmp3F)->f1;_LL10: return accept_in(fd,(const struct Cyc_sockaddr_in*)_tmp3E,_tmp40);
! _LL11:;_LL12:(int)_throw((void*)Cyc_SocketError);_LLE:;}}int bind_in(int,const
! struct Cyc_sockaddr_in*,int);int Cyc_bind(int fd,struct _dynforward_ptr ap){if(
  _get_dynforward_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
! struct _tuple0 _tmp42=({struct _tuple0 _tmp41;_tmp41.f1=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),0));_tmp41.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp41;});void*_tmp43;struct Cyc_sockaddr_in*
! _tmp44;void*_tmp45;int _tmp46;_LL14: _tmp43=_tmp42.f1;if(*((int*)_tmp43)!= 0)goto
! _LL16;_tmp44=((struct Cyc_SA_sockaddr_in_struct*)_tmp43)->f1;_tmp45=_tmp42.f2;if(*((
! int*)_tmp45)!= 2)goto _LL16;_tmp46=((struct Cyc_SA_socklen_struct*)_tmp45)->f1;
! _LL15: return bind_in(fd,(const struct Cyc_sockaddr_in*)_tmp44,_tmp46);_LL16:;_LL17:(
! int)_throw((void*)Cyc_SocketError);_LL13:;}}int connect_in(int,const struct Cyc_sockaddr_in*,
! int);int Cyc_connect(int fd,struct _dynforward_ptr ap){if(_get_dynforward_size(ap,
! sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp48=({
! struct _tuple0 _tmp47;_tmp47.f1=*((void**)_check_dynforward_subscript(ap,sizeof(
! void*),0));_tmp47.f2=*((void**)_check_dynforward_subscript(ap,sizeof(void*),1));
! _tmp47;});void*_tmp49;struct Cyc_sockaddr_in*_tmp4A;void*_tmp4B;int _tmp4C;_LL19:
! _tmp49=_tmp48.f1;if(*((int*)_tmp49)!= 0)goto _LL1B;_tmp4A=((struct Cyc_SA_sockaddr_in_struct*)
! _tmp49)->f1;_tmp4B=_tmp48.f2;if(*((int*)_tmp4B)!= 2)goto _LL1B;_tmp4C=((struct Cyc_SA_socklen_struct*)
! _tmp4B)->f1;_LL1A: return connect_in(fd,(const struct Cyc_sockaddr_in*)_tmp4A,_tmp4C);
! _LL1B:;_LL1C:(int)_throw((void*)Cyc_SocketError);_LL18:;}}int getpeername_in(int,
! const struct Cyc_sockaddr_in*,int*);int Cyc_getpeername(int fd,struct _dynforward_ptr
! ap){if(_get_dynforward_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
! struct _tuple0 _tmp4E=({struct _tuple0 _tmp4D;_tmp4D.f1=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),0));_tmp4D.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp4D;});void*_tmp4F;struct Cyc_sockaddr_in*
! _tmp50;void*_tmp51;int*_tmp52;_LL1E: _tmp4F=_tmp4E.f1;if(*((int*)_tmp4F)!= 0)goto
! _LL20;_tmp50=((struct Cyc_SA_sockaddr_in_struct*)_tmp4F)->f1;_tmp51=_tmp4E.f2;if(*((
! int*)_tmp51)!= 1)goto _LL20;_tmp52=((struct Cyc_SA_socklenptr_struct*)_tmp51)->f1;
! _LL1F: return getpeername_in(fd,(const struct Cyc_sockaddr_in*)_tmp50,_tmp52);_LL20:;
! _LL21:(int)_throw((void*)Cyc_SocketError);_LL1D:;}}int getsockname_in(int,const
! struct Cyc_sockaddr_in*,int*);int Cyc_getsockname(int fd,struct _dynforward_ptr ap){
  if(_get_dynforward_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
! struct _tuple0 _tmp54=({struct _tuple0 _tmp53;_tmp53.f1=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),0));_tmp53.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp53;});void*_tmp55;struct Cyc_sockaddr_in*
! _tmp56;void*_tmp57;int*_tmp58;_LL23: _tmp55=_tmp54.f1;if(*((int*)_tmp55)!= 0)goto
! _LL25;_tmp56=((struct Cyc_SA_sockaddr_in_struct*)_tmp55)->f1;_tmp57=_tmp54.f2;if(*((
! int*)_tmp57)!= 1)goto _LL25;_tmp58=((struct Cyc_SA_socklenptr_struct*)_tmp57)->f1;
! _LL24: return getsockname_in(fd,(const struct Cyc_sockaddr_in*)_tmp56,_tmp58);_LL25:;
! _LL26:(int)_throw((void*)Cyc_SocketError);_LL22:;}}int getsockopt_int(int,int,int,
! int*,int*);int getsockopt_timeval(int,int,int,struct Cyc_timeval*,int*);int Cyc_getsockopt(
! int fd,int level,int optname,struct _dynforward_ptr ap){if(_get_dynforward_size(ap,
! sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp5A=({
! struct _tuple0 _tmp59;_tmp59.f1=*((void**)_check_dynforward_subscript(ap,sizeof(
! void*),0));_tmp59.f2=*((void**)_check_dynforward_subscript(ap,sizeof(void*),1));
! _tmp59;});void*_tmp5B;int*_tmp5C;void*_tmp5D;int*_tmp5E;void*_tmp5F;int*_tmp60;
! void*_tmp61;int*_tmp62;void*_tmp63;struct Cyc_timeval*_tmp64;void*_tmp65;int*
! _tmp66;void*_tmp67;struct Cyc_timeval*_tmp68;void*_tmp69;int*_tmp6A;_LL28: _tmp5B=
! _tmp5A.f1;if(*((int*)_tmp5B)!= 0)goto _LL2A;_tmp5C=((struct Cyc_SO_int_struct*)
! _tmp5B)->f1;_tmp5D=_tmp5A.f2;if(*((int*)_tmp5D)!= 2)goto _LL2A;_tmp5E=((struct Cyc_SO_socklenptr_struct*)
! _tmp5D)->f1;_LL29: return getsockopt_int(fd,level,optname,_tmp5C,_tmp5E);_LL2A:
! _tmp5F=_tmp5A.f1;if(*((int*)_tmp5F)!= 0)goto _LL2C;_tmp60=((struct Cyc_SO_int_struct*)
! _tmp5F)->f1;_tmp61=_tmp5A.f2;if(*((int*)_tmp61)!= 0)goto _LL2C;_tmp62=((struct Cyc_SO_int_struct*)
! _tmp61)->f1;_LL2B: return getsockopt_int(fd,level,optname,_tmp60,(int*)_tmp62);
! _LL2C: _tmp63=_tmp5A.f1;if(*((int*)_tmp63)!= 1)goto _LL2E;_tmp64=((struct Cyc_SO_timeval_struct*)
! _tmp63)->f1;_tmp65=_tmp5A.f2;if(*((int*)_tmp65)!= 2)goto _LL2E;_tmp66=((struct Cyc_SO_socklenptr_struct*)
! _tmp65)->f1;_LL2D: return getsockopt_timeval(fd,level,optname,_tmp64,_tmp66);_LL2E:
! _tmp67=_tmp5A.f1;if(*((int*)_tmp67)!= 1)goto _LL30;_tmp68=((struct Cyc_SO_timeval_struct*)
! _tmp67)->f1;_tmp69=_tmp5A.f2;if(*((int*)_tmp69)!= 0)goto _LL30;_tmp6A=((struct Cyc_SO_int_struct*)
! _tmp69)->f1;_LL2F: return getsockopt_timeval(fd,level,optname,_tmp68,(int*)_tmp6A);
! _LL30:;_LL31:(int)_throw((void*)Cyc_SocketError);_LL27:;}}int recv_wrapped(int,
! struct _dynforward_ptr,unsigned long,int);int Cyc_recv(int fd,struct _dynforward_ptr
! buf,unsigned long n,int flags){return recv_wrapped(fd,buf,n,flags);}int recvfrom_in(
! int,struct _dynforward_ptr,unsigned long,int,const struct Cyc_sockaddr_in*,int*);
! int Cyc_recvfrom(int fd,struct _dynforward_ptr buf,unsigned long n,int flags,struct
  _dynforward_ptr ap){if(_get_dynforward_size(ap,sizeof(void*))!= 2)(int)_throw((
! void*)Cyc_SocketError);{struct _tuple0 _tmp6C=({struct _tuple0 _tmp6B;_tmp6B.f1=*((
! void**)_check_dynforward_subscript(ap,sizeof(void*),0));_tmp6B.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp6B;});void*_tmp6D;struct Cyc_sockaddr_in*
! _tmp6E;void*_tmp6F;int*_tmp70;_LL33: _tmp6D=_tmp6C.f1;if(*((int*)_tmp6D)!= 0)goto
! _LL35;_tmp6E=((struct Cyc_SA_sockaddr_in_struct*)_tmp6D)->f1;_tmp6F=_tmp6C.f2;if(*((
! int*)_tmp6F)!= 1)goto _LL35;_tmp70=((struct Cyc_SA_socklenptr_struct*)_tmp6F)->f1;
! _LL34: return recvfrom_in(fd,buf,n,flags,(const struct Cyc_sockaddr_in*)_tmp6E,
! _tmp70);_LL35:;_LL36:(int)_throw((void*)Cyc_SocketError);_LL32:;}}int
! send_wrapped(int,struct _dynforward_ptr,unsigned long,int);int Cyc_send(int fd,
! struct _dynforward_ptr buf,unsigned long n,int flags){return send_wrapped(fd,buf,n,
! flags);}int sendto_in(int,struct _dynforward_ptr,unsigned long,int,const struct Cyc_sockaddr_in*,
! int);int Cyc_sendto(int fd,struct _dynforward_ptr buf,unsigned long n,int flags,struct
  _dynforward_ptr ap){if(_get_dynforward_size(ap,sizeof(void*))!= 2)(int)_throw((
! void*)Cyc_SocketError);{struct _tuple0 _tmp72=({struct _tuple0 _tmp71;_tmp71.f1=*((
! void**)_check_dynforward_subscript(ap,sizeof(void*),0));_tmp71.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp71;});void*_tmp73;struct Cyc_sockaddr_in*
! _tmp74;void*_tmp75;int _tmp76;_LL38: _tmp73=_tmp72.f1;if(*((int*)_tmp73)!= 0)goto
! _LL3A;_tmp74=((struct Cyc_SA_sockaddr_in_struct*)_tmp73)->f1;_tmp75=_tmp72.f2;if(*((
! int*)_tmp75)!= 2)goto _LL3A;_tmp76=((struct Cyc_SA_socklen_struct*)_tmp75)->f1;
! _LL39: return sendto_in(fd,buf,n,flags,(const struct Cyc_sockaddr_in*)_tmp74,_tmp76);
! _LL3A:;_LL3B:(int)_throw((void*)Cyc_SocketError);_LL37:;}}int setsockopt_int(int,
! int,int,const int*,int);int setsockopt_timeval(int,int,int,const struct Cyc_timeval*,
! int);int Cyc_setsockopt(int fd,int level,int optname,struct _dynforward_ptr ap){if(
! _get_dynforward_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
! struct _tuple0 _tmp78=({struct _tuple0 _tmp77;_tmp77.f1=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),0));_tmp77.f2=*((void**)
! _check_dynforward_subscript(ap,sizeof(void*),1));_tmp77;});void*_tmp79;int*
! _tmp7A;void*_tmp7B;int _tmp7C;void*_tmp7D;struct Cyc_timeval*_tmp7E;void*_tmp7F;
! int _tmp80;_LL3D: _tmp79=_tmp78.f1;if(*((int*)_tmp79)!= 0)goto _LL3F;_tmp7A=((
! struct Cyc_SO_int_struct*)_tmp79)->f1;_tmp7B=_tmp78.f2;if(*((int*)_tmp7B)!= 3)
! goto _LL3F;_tmp7C=((struct Cyc_SO_socklen_struct*)_tmp7B)->f1;_LL3E: return
! setsockopt_int(fd,level,optname,(const int*)_tmp7A,_tmp7C);_LL3F: _tmp7D=_tmp78.f1;
! if(*((int*)_tmp7D)!= 1)goto _LL41;_tmp7E=((struct Cyc_SO_timeval_struct*)_tmp7D)->f1;
! _tmp7F=_tmp78.f2;if(*((int*)_tmp7F)!= 3)goto _LL41;_tmp80=((struct Cyc_SO_socklen_struct*)
! _tmp7F)->f1;_LL40: return setsockopt_timeval(fd,level,optname,(const struct Cyc_timeval*)
! _tmp7E,_tmp80);_LL41:;_LL42:(int)_throw((void*)Cyc_SocketError);_LL3C:;}}struct
! Cyc_stat{int st_dev;unsigned int st_ino;unsigned short st_mode;unsigned short
! st_nlink;unsigned int st_uid;unsigned int st_gid;int st_rdev;struct Cyc_timespec
! st_atimespec;struct Cyc_timespec st_mtimespec;struct Cyc_timespec st_ctimespec;
! long long st_size;long long st_blocks;unsigned int st_blksize;unsigned int st_flags;
! unsigned int st_gen;int st_lspare;long long st_qspare[2];};struct Cyc_timezone{int
! tz_minuteswest;int tz_dsttime;};struct Cyc_itimerval{struct Cyc_timeval it_interval;
! struct Cyc_timeval it_value;};int Cyc_gettimeofday(struct Cyc_timeval*,struct Cyc_timezone*);
! int Cyc_select(int,struct Cyc_fd_set*,struct Cyc_fd_set*,struct Cyc_fd_set*,struct
! Cyc_timeval*);void Cyc_FD_CLR(int,struct Cyc_fd_set*);int Cyc_FD_ISSET(int,struct
! Cyc_fd_set*);void Cyc_FD_SET(int,struct Cyc_fd_set*);void Cyc_FD_ZERO(struct Cyc_fd_set*);
! int gettimeofday(struct Cyc_timeval*,struct Cyc_timezone*);int Cyc_gettimeofday(
  struct Cyc_timeval*a,struct Cyc_timezone*b){return gettimeofday(a,0);}struct Cyc_timeb{
! long time;unsigned short millitm;short timezone;short dstflag;};struct Cyc_tms{
! unsigned long tms_utime;unsigned long tms_stime;unsigned long tms_cutime;
! unsigned long tms_cstime;};struct Cyc_sockaddr_un{unsigned char sun_len;
! unsigned char sun_family;char sun_path[104];};struct Cyc_utsname{char sysname[256];
! char nodename[256];char release[256];char version[256];char machine[256];};struct Cyc_tm{
! int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int
! tm_yday;int tm_isdst;long tm_gmtoff;char*tm_zone;};unsigned long Cyc_strftime(
! struct _dynforward_ptr,unsigned long,struct _dynforward_ptr,const struct Cyc_tm*);
! unsigned long strftime(char*,unsigned long,const char*,const struct Cyc_tm*);static
! char _tmp82[27]="fgets: buffer insufficient";static struct Cyc_Core_Failure_struct
! Cyc___strftime_failure={Cyc_Core_Failure,{_tmp82,_tmp82 + 27}};unsigned long Cyc_strftime(
! struct _dynforward_ptr s,unsigned long maxsize,struct _dynforward_ptr fmt,const struct
  Cyc_tm*t){if(maxsize > _get_dynforward_size(s,sizeof(char)))(int)_throw((void*)&
  Cyc___strftime_failure);return strftime((char*)_check_null(_untag_dynforward_ptr(
  s,sizeof(char),1)),maxsize,(const char*)_check_null(_untag_dynforward_ptr(fmt,
! sizeof(char),1)),t);}struct Cyc_option{struct _dynforward_ptr name;int has_arg;int*
! flag;int val;};int Cyc_execlp(const char*,const char*,struct _dynforward_ptr);int
! execvp(const char*file,const char**argv);struct _dynforward_ptr Cyc_getcwd(struct
! _dynforward_ptr buf,unsigned long size);int Cyc_gethostname(struct _dynforward_ptr,
! unsigned long);int Cyc_read(int,struct _dynforward_ptr,unsigned long);int Cyc_write(
! int,struct _dynforward_ptr,unsigned long);static char _tmp84[36]="execlp arg list not NULL-terminated";
! static struct Cyc_Core_Failure_struct Cyc___execlp_failure={Cyc_Core_Failure,{
! _tmp84,_tmp84 + 36}};int Cyc_execlp(const char*path,const char*arg0,struct
! _dynforward_ptr argv){if(*((const char**)_check_dynforward_subscript(argv,sizeof(
! const char*),(int)(_get_dynforward_size(argv,sizeof(const char*))- 1)))!= (const
! char*)0)(int)_throw((void*)& Cyc___execlp_failure);{const char**newargs=(const char**)
! _untag_dynforward_ptr(({unsigned int _tmp8D=_get_dynforward_size(argv,sizeof(
! const char*));const char**_tmp8E=(const char**)_cycalloc(_check_times(sizeof(const
! char*),_tmp8D + 1));struct _dynforward_ptr _tmp90=_tag_dynforward(_tmp8E,sizeof(
! const char*),_tmp8D + 1);{unsigned int _tmp8F=_tmp8D;unsigned int i;for(i=0;i < 
! _tmp8F;i ++){_tmp8E[i]=(const char*)0;}_tmp8E[_tmp8F]=(const char*)0;}_tmp90;}),
! sizeof(const char*),1);({struct _dyneither_ptr _tmp86=_dyneither_ptr_plus(({const
! char**_tmp85=newargs;_tag_dyneither(_tmp85,sizeof(const char*),_get_zero_arr_size(
! _tmp85,1));}),sizeof(const char*),0);const char*_tmp87=*((const char**)
! _check_dyneither_subscript(_tmp86,sizeof(const char*),0));const char*_tmp88=(const
! char*)arg0;if(_get_dyneither_size(_tmp86,sizeof(const char*))== 1  && (_tmp87 == 0
!  && _tmp88 != 0))_throw_arraybounds();*((const char**)_tmp86.curr)=_tmp88;});{int i=
  0;for(0;i < _get_dynforward_size(argv,sizeof(const char*))- 1;i ++){({struct
! _dyneither_ptr _tmp8A=_dyneither_ptr_plus(({const char**_tmp89=newargs;
! _tag_dyneither(_tmp89,sizeof(const char*),_get_zero_arr_size(_tmp89,1));}),
! sizeof(const char*),i + 1);const char*_tmp8B=*((const char**)
! _check_dyneither_subscript(_tmp8A,sizeof(const char*),0));const char*_tmp8C=*((
  const char**)_check_dynforward_subscript(argv,sizeof(const char*),i));if(
! _get_dyneither_size(_tmp8A,sizeof(const char*))== 1  && (_tmp8B == 0  && _tmp8C != 0))
! _throw_arraybounds();*((const char**)_tmp8A.curr)=_tmp8C;});}}return execvp(path,(
! const char**)newargs);}}char*getcwd(char*buf,unsigned long size);static char _tmp92[
  29]="getcwd: invalid buf argument";static struct Cyc_Core_Failure_struct Cyc___getcwd_failure={
! Cyc_Core_Failure,{_tmp92,_tmp92 + 29}};struct _dynforward_ptr Cyc_getcwd(struct
! _dynforward_ptr buf,unsigned long size){if(_get_dynforward_size(buf,sizeof(char))< 
! size)(int)_throw((void*)& Cyc___getcwd_failure);{char*_tmp93=getcwd((char*)
  _check_null(_untag_dynforward_ptr(buf,sizeof(char),1)),size);return(unsigned int)
! _tmp93?buf: _tag_dynforward(0,0,0);}}int gethostname(char*,unsigned long);static
! char _tmp95[34]="gethostname: called with NULL buf";static struct Cyc_Core_Failure_struct
! Cyc___gethostname_failure_1={Cyc_Core_Failure,{_tmp95,_tmp95 + 34}};static char
! _tmp97[42]="gethostname: called with count > buf.size";static struct Cyc_Core_Failure_struct
! Cyc___gethostname_failure_2={Cyc_Core_Failure,{_tmp97,_tmp97 + 42}};int Cyc_gethostname(
! struct _dynforward_ptr buf,unsigned long count){if(!((unsigned int)buf.curr))(int)
  _throw((void*)& Cyc___gethostname_failure_1);else{if(count > _get_dynforward_size(
  buf,sizeof(char)))(int)_throw((void*)& Cyc___gethostname_failure_2);return
  gethostname((char*)_untag_dynforward_ptr(buf,sizeof(char),1),count);}}int read(
! int fd,char*buf,unsigned long count);static char _tmp99[35]="read: called with count > buf.size";
! static struct Cyc_Core_Failure_struct Cyc___read_failure={Cyc_Core_Failure,{_tmp99,
! _tmp99 + 35}};int Cyc_read(int fd,struct _dynforward_ptr buf,unsigned long count){if(
  count > _get_dynforward_size(buf,sizeof(char)))(int)_throw((void*)& Cyc___read_failure);
  return read(fd,(char*)_check_null(_untag_dynforward_ptr(buf,sizeof(char),1)),
! count);}int write(int fd,const char*buf,unsigned long count);static char _tmp9B[36]="write: called with count > buf.size";
! static struct Cyc_Core_Failure_struct Cyc___write_failure={Cyc_Core_Failure,{_tmp9B,
! _tmp9B + 36}};int Cyc_write(int fd,struct _dynforward_ptr buf,unsigned long count){if(
  count > _get_dynforward_size(buf,sizeof(char)))(int)_throw((void*)& Cyc___write_failure);
  return write(fd,(const char*)_untag_dynforward_ptr(buf,sizeof(char),1),count);}
  struct Cyc_utimbuf{long actime;long modtime;};
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/cycstubs.c.orig powerpc-apple-rhapsody/lib/cycstubs.c.orig
*** i686-unknown-linux/lib/cycstubs.c.orig	Wed Dec 31 19:00:00 1969
--- powerpc-apple-rhapsody/lib/cycstubs.c.orig	Thu Jun 27 17:35:18 2002
***************
*** 0 ****
--- 1,981 ----
+ // This is a C header file to be used by the output of the Cyclone
+ // to C translator.  The corresponding definitions are in file lib/runtime_cyc.c
+ #ifndef _CYC_INCLUDE_H_
+ #define _CYC_INCLUDE_H_
+ 
+ #include <setjmp.h>
+ 
+ #ifdef NO_CYC_PREFIX
+ #define ADD_PREFIX(x) x
+ #else
+ #define ADD_PREFIX(x) Cyc_##x
+ #endif
+ 
+ #ifndef offsetof
+ // should be size_t, but int is fine.
+ #define offsetof(t,n) ((int)(&(((t *)0)->n)))
+ #endif
+ 
+ //// Tagged arrays
+ struct _tagged_arr { 
+   unsigned char *curr; 
+   unsigned char *base; 
+   unsigned char *last_plus_one; 
+ };
+ 
+ //// Discriminated Unions
+ struct _xtunion_struct { char *tag; };
+ 
+ // Need one of these per thread (we don't have threads)
+ // The runtime maintains a stack that contains either _handler_cons
+ // structs or _RegionHandle structs.  The tag is 0 for a handler_cons
+ // and 1 for a region handle.  
+ struct _RuntimeStack {
+   int tag; // 0 for an exception handler, 1 for a region handle
+   struct _RuntimeStack *next;
+ };
+ 
+ //// Regions
+ struct _RegionPage {
+ #ifdef CYC_REGION_PROFILE
+   unsigned total_bytes;
+   unsigned free_bytes;
+ #endif
+   struct _RegionPage *next;
+   char data[0];
+ };
+ 
+ struct _RegionHandle {
+   struct _RuntimeStack s;
+   struct _RegionPage *curr;
+   char               *offset;
+   char               *last_plus_one;
+ #ifdef CYC_REGION_PROFILE
+   const char         *name;
+ #endif
+ };
+ 
+ extern struct _RegionHandle _new_region(const char *);
+ extern void * _region_malloc(struct _RegionHandle *, unsigned);
+ extern void * _region_calloc(struct _RegionHandle *, unsigned t, unsigned n);
+ extern void   _free_region(struct _RegionHandle *);
+ extern void   _reset_region(struct _RegionHandle *);
+ 
+ //// Exceptions 
+ struct _handler_cons {
+   struct _RuntimeStack s;
+   jmp_buf handler;
+ };
+ extern void _push_handler(struct _handler_cons *);
+ extern void _push_region(struct _RegionHandle *);
+ extern void _npop_handler(int);
+ extern void _pop_handler();
+ extern void _pop_region();
+ 
+ #ifndef _throw
+ extern int _throw_null();
+ extern int _throw_arraybounds();
+ extern int _throw_badalloc();
+ extern int _throw(void* e);
+ #endif
+ 
+ extern struct _xtunion_struct *_exn_thrown;
+ 
+ //// Built-in Exceptions
+ extern struct _xtunion_struct ADD_PREFIX(Null_Exception_struct);
+ extern struct _xtunion_struct * ADD_PREFIX(Null_Exception);
+ extern struct _xtunion_struct ADD_PREFIX(Array_bounds_struct);
+ extern struct _xtunion_struct * ADD_PREFIX(Array_bounds);
+ extern struct _xtunion_struct ADD_PREFIX(Match_Exception_struct);
+ extern struct _xtunion_struct * ADD_PREFIX(Match_Exception);
+ extern struct _xtunion_struct ADD_PREFIX(Bad_alloc_struct);
+ extern struct _xtunion_struct * ADD_PREFIX(Bad_alloc);
+ 
+ //// Built-in Run-time Checks and company
+ #ifdef __APPLE__
+ #define _INLINE_FUNCTIONS
+ #endif
+ 
+ #ifdef NO_CYC_NULL_CHECKS
+ #define _check_null(ptr) (ptr)
+ #else
+ #ifdef _INLINE_FUNCTIONS
+ static inline void *
+ _check_null(void *ptr) {
+   void*_check_null_temp = (void*)(ptr);
+   if (!_check_null_temp) _throw_null();
+   return _check_null_temp;
+ }
+ #else
+ #define _check_null(ptr) \
+   ({ void*_check_null_temp = (void*)(ptr); \
+      if (!_check_null_temp) _throw_null(); \
+      _check_null_temp; })
+ #endif
+ #endif
+ 
+ #ifdef NO_CYC_BOUNDS_CHECKS
+ #define _check_known_subscript_null(ptr,bound,elt_sz,index) ({ \
+   ((char *)ptr) + (elt_sz)*(index); })
+ #else
+ #ifdef _INLINE_FUNCTIONS
+ static inline char *
+ _check_known_subscript_null(void *ptr, unsigned bound, unsigned elt_sz, unsigned index) {
+   void*_cks_ptr = (void*)(ptr);
+   unsigned _cks_bound = (bound);
+   unsigned _cks_elt_sz = (elt_sz);
+   unsigned _cks_index = (index);
+   if (!_cks_ptr) _throw_null();
+   if (_cks_index >= _cks_bound) _throw_arraybounds();
+   return ((char *)_cks_ptr) + _cks_elt_sz*_cks_index;
+ }
+ #else
+ #define _check_known_subscript_null(ptr,bound,elt_sz,index) ({ \
+   void*_cks_ptr = (void*)(ptr); \
+   unsigned _cks_bound = (bound); \
+   unsigned _cks_elt_sz = (elt_sz); \
+   unsigned _cks_index = (index); \
+   if (!_cks_ptr) _throw_null(); \
+   if (_cks_index >= _cks_bound) _throw_arraybounds(); \
+   ((char *)_cks_ptr) + _cks_elt_sz*_cks_index; })
+ #endif
+ #endif
+ 
+ #ifdef NO_CYC_BOUNDS_CHECKS
+ #define _check_known_subscript_notnull(bound,index) (index)
+ #else
+ #ifdef _INLINE_FUNCTIONS
+ static inline unsigned
+ _check_known_subscript_notnull(unsigned bound,unsigned index) { 
+   unsigned _cksnn_bound = (bound); 
+   unsigned _cksnn_index = (index); 
+   if (_cksnn_index >= _cksnn_bound) _throw_arraybounds(); 
+   return _cksnn_index;
+ }
+ #else
+ #define _check_known_subscript_notnull(bound,index) ({ \
+   unsigned _cksnn_bound = (bound); \
+   unsigned _cksnn_index = (index); \
+   if (_cksnn_index >= _cksnn_bound) _throw_arraybounds(); \
+   _cksnn_index; })
+ #endif
+ #endif
+ 
+ #ifdef NO_CYC_BOUNDS_CHECKS
+ #ifdef _INLINE_FUNCTIONS
+ static inline struct _tagged_arr
+ _check_unknown_subscript(struct _tagged_arr arr,unsigned elt_sz,unsigned index) {
+   struct _tagged_arr _cus_arr = (arr);
+   unsigned _cus_elt_sz = (elt_sz);
+   unsigned _cus_index = (index);
+   unsigned char *_cus_ans = _cus_arr.curr + _cus_elt_sz * _cus_index;
+   return _cus_ans;
+ }
+ #else
+ #define _check_unknown_subscript(arr,elt_sz,index) ({ \
+   struct _tagged_arr _cus_arr = (arr); \
+   unsigned _cus_elt_sz = (elt_sz); \
+   unsigned _cus_index = (index); \
+   unsigned char *_cus_ans = _cus_arr.curr + _cus_elt_sz * _cus_index; \
+   _cus_ans; })
+ #endif
+ #else
+ #ifdef _INLINE_FUNCTIONS
+ static inline unsigned char *
+ _check_unknown_subscript(struct _tagged_arr arr,unsigned elt_sz,unsigned index) {
+   struct _tagged_arr _cus_arr = (arr);
+   unsigned _cus_elt_sz = (elt_sz);
+   unsigned _cus_index = (index);
+   unsigned char *_cus_ans = _cus_arr.curr + _cus_elt_sz * _cus_index;
+   if (!_cus_arr.base) _throw_null();
+   if (_cus_ans < _cus_arr.base || _cus_ans >= _cus_arr.last_plus_one)
+     _throw_arraybounds();
+   return _cus_ans;
+ }
+ #else
+ #define _check_unknown_subscript(arr,elt_sz,index) ({ \
+   struct _tagged_arr _cus_arr = (arr); \
+   unsigned _cus_elt_sz = (elt_sz); \
+   unsigned _cus_index = (index); \
+   unsigned char *_cus_ans = _cus_arr.curr + _cus_elt_sz * _cus_index; \
+   if (!_cus_arr.base) _throw_null(); \
+   if (_cus_ans < _cus_arr.base || _cus_ans >= _cus_arr.last_plus_one) \
+     _throw_arraybounds(); \
+   _cus_ans; })
+ #endif
+ #endif
+ 
+ #ifdef _INLINE_FUNCTIONS
+ static inline struct _tagged_arr
+ _tag_arr(const void *tcurr,unsigned elt_sz,unsigned num_elts) {
+   struct _tagged_arr _tag_arr_ans;
+   _tag_arr_ans.base = _tag_arr_ans.curr = (void*)(tcurr);
+   _tag_arr_ans.last_plus_one = _tag_arr_ans.base + (elt_sz) * (num_elts);
+   return _tag_arr_ans;
+ }
+ #else
+ #define _tag_arr(tcurr,elt_sz,num_elts) ({ \
+   struct _tagged_arr _tag_arr_ans; \
+   _tag_arr_ans.base = _tag_arr_ans.curr = (void*)(tcurr); \
+   _tag_arr_ans.last_plus_one = _tag_arr_ans.base + (elt_sz) * (num_elts); \
+   _tag_arr_ans; })
+ #endif
+ 
+ #ifdef _INLINE_FUNCTIONS
+ static inline struct _tagged_arr *
+ _init_tag_arr(struct _tagged_arr *arr_ptr,
+               void *arr, unsigned elt_sz, unsigned num_elts) {
+   struct _tagged_arr *_itarr_ptr = (arr_ptr);
+   void* _itarr = (arr);
+   _itarr_ptr->base = _itarr_ptr->curr = _itarr;
+   _itarr_ptr->last_plus_one = ((char *)_itarr) + (elt_sz) * (num_elts);
+   return _itarr_ptr;
+ }
+ #else
+ #define _init_tag_arr(arr_ptr,arr,elt_sz,num_elts) ({ \
+   struct _tagged_arr *_itarr_ptr = (arr_ptr); \
+   void* _itarr = (arr); \
+   _itarr_ptr->base = _itarr_ptr->curr = _itarr; \
+   _itarr_ptr->last_plus_one = ((char *)_itarr) + (elt_sz) * (num_elts); \
+   _itarr_ptr; })
+ #endif
+ 
+ #ifdef NO_CYC_BOUNDS_CHECKS
+ #define _untag_arr(arr,elt_sz,num_elts) ((arr).curr)
+ #else
+ #ifdef _INLINE_FUNCTIONS
+ static inline unsigned char *
+ _untag_arr(struct _tagged_arr arr, unsigned elt_sz,unsigned num_elts) {
+   struct _tagged_arr _arr = (arr);
+   unsigned char *_curr = _arr.curr;
+   if (_curr < _arr.base || _curr + (elt_sz) * (num_elts) > _arr.last_plus_one)
+     _throw_arraybounds();
+   return _curr;
+ }
+ #else
+ #define _untag_arr(arr,elt_sz,num_elts) ({ \
+   struct _tagged_arr _arr = (arr); \
+   unsigned char *_curr = _arr.curr; \
+   if (_curr < _arr.base || _curr + (elt_sz) * (num_elts) > _arr.last_plus_one)\
+     _throw_arraybounds(); \
+   _curr; })
+ #endif
+ #endif
+ 
+ #ifdef _INLINE_FUNCTIONS
+ static inline unsigned
+ _get_arr_size(struct _tagged_arr arr,unsigned elt_sz) {
+   struct _tagged_arr _get_arr_size_temp = (arr);
+   unsigned char *_get_arr_size_curr=_get_arr_size_temp.curr;
+   unsigned char *_get_arr_size_last=_get_arr_size_temp.last_plus_one;
+   return (_get_arr_size_curr < _get_arr_size_temp.base ||
+           _get_arr_size_curr >= _get_arr_size_last) ? 0 :
+     ((_get_arr_size_last - _get_arr_size_curr) / (elt_sz));
+ }
+ #else
+ #define _get_arr_size(arr,elt_sz) \
+   ({struct _tagged_arr _get_arr_size_temp = (arr); \
+     unsigned char *_get_arr_size_curr=_get_arr_size_temp.curr; \
+     unsigned char *_get_arr_size_last=_get_arr_size_temp.last_plus_one; \
+     (_get_arr_size_curr < _get_arr_size_temp.base || \
+      _get_arr_size_curr >= _get_arr_size_last) ? 0 : \
+     ((_get_arr_size_last - _get_arr_size_curr) / (elt_sz));})
+ #endif
+ 
+ #ifdef _INLINE_FUNCTIONS
+ static inline struct _tagged_arr
+ _tagged_arr_plus(struct _tagged_arr arr,unsigned elt_sz,int change) {
+   struct _tagged_arr _ans = (arr);
+   _ans.curr += ((int)(elt_sz))*(change);
+   return _ans;
+ }
+ #else
+ #define _tagged_arr_plus(arr,elt_sz,change) ({ \
+   struct _tagged_arr _ans = (arr); \
+   _ans.curr += ((int)(elt_sz))*(change); \
+   _ans; })
+ #endif
+ 
+ #ifdef _INLINE_FUNCTIONS
+ static inline struct _tagged_arr
+ _tagged_arr_inplace_plus(struct _tagged_arr *arr_ptr,unsigned elt_sz,int change) {
+   struct _tagged_arr * _arr_ptr = (arr_ptr);
+   _arr_ptr->curr += ((int)(elt_sz))*(change);
+   return *_arr_ptr;
+ }
+ #else
+ #define _tagged_arr_inplace_plus(arr_ptr,elt_sz,change) ({ \
+   struct _tagged_arr * _arr_ptr = (arr_ptr); \
+   _arr_ptr->curr += ((int)(elt_sz))*(change); \
+   *_arr_ptr; })
+ #endif
+ 
+ #ifdef _INLINE_FUNCTIONS
+ static inline struct _tagged_arr
+ _tagged_arr_inplace_plus_post(struct _tagged_arr *arr_ptr,unsigned elt_sz,int change) {
+   struct _tagged_arr * _arr_ptr = (arr_ptr);
+   struct _tagged_arr _ans = *_arr_ptr;
+   _arr_ptr->curr += ((int)(elt_sz))*(change);
+   return _ans;
+ }
+ #else
+ #define _tagged_arr_inplace_plus_post(arr_ptr,elt_sz,change) ({ \
+   struct _tagged_arr * _arr_ptr = (arr_ptr); \
+   struct _tagged_arr _ans = *_arr_ptr; \
+   _arr_ptr->curr += ((int)(elt_sz))*(change); \
+   _ans; })
+ #endif
+ 
+ // Decrease the upper bound on a fat pointer by numelts where sz is
+ // the size of the pointer's type.  Note that this can't be a macro
+ // if we're to get initializers right.
+ static struct _tagged_arr _tagged_ptr_decrease_size(struct _tagged_arr x,
+                                                     unsigned int sz,
+                                                     unsigned int numelts) {
+   x.last_plus_one -= sz * numelts; 
+   return x; 
+ }
+ 
+ // Add i to zero-terminated pointer x.  Checks for x being null and
+ // ensures that x[0..i-1] are not 0.
+ #ifdef NO_CYC_BOUNDS_CHECK
+ #define _zero_arr_plus(orig_x,orig_sz,orig_i) ((orig_x)+(orig_i))
+ #else
+ #define _zero_arr_plus(orig_x,orig_sz,orig_i) ({ \
+   typedef _czs_tx = (*orig_x); \
+   _czs_tx *_czs_x = (_czs_tx *)(orig_x); \
+   unsigned int _czs_sz = (orig_sz); \
+   int _czs_i = (orig_i); \
+   unsigned int _czs_temp; \
+   if ((_czs_x) == 0) _throw_null(); \
+   if (_czs_i < 0) _throw_arraybounds(); \
+   for (_czs_temp=_czs_sz; _czs_temp < _czs_i; _czs_temp++) \
+     if (_czs_x[_czs_temp] == 0) _throw_arraybounds(); \
+   _czs_x+_czs_i; })
+ #endif
+ 
+ // Calculates the number of elements in a zero-terminated, thin array.
+ // If non-null, the array is guaranteed to have orig_offset elements.
+ #define _get_zero_arr_size(orig_x,orig_offset) ({ \
+   typedef _gres_tx = (*orig_x); \
+   _gres_tx *_gres_x = (_gres_tx *)(orig_x); \
+   unsigned int _gres_offset = (orig_offset); \
+   unsigned int _gres = 0; \
+   if (_gres_x != 0) { \
+      _gres = _gres_offset; \
+      _gres_x += _gres_offset - 1; \
+      while (*_gres_x != 0) { _gres_x++; _gres++; } \
+   } _gres; })
+ 
+ // Does in-place addition of a zero-terminated pointer (x += e and ++x).  
+ // Note that this expands to call _zero_arr_plus.
+ #define _zero_arr_inplace_plus(x,orig_i) ({ \
+   typedef _zap_tx = (*x); \
+   _zap_tx **_zap_x = &((_zap_tx*)x); \
+   *_zap_x = _zero_arr_plus(*_zap_x,1,(orig_i)); })
+ 
+ // Does in-place increment of a zero-terminated pointer (e.g., x++).
+ // Note that this expands to call _zero_arr_plus.
+ #define _zero_arr_inplace_plus_post(x,orig_i) ({ \
+   typedef _zap_tx = (*x); \
+   _zap_tx **_zap_x = &((_zap_tx*)x); \
+   _zap_tx *_zap_res = *_zap_x; \
+   *_zap_x = _zero_arr_plus(_zap_res,1,(orig_i)); \
+   _zap_res; })
+   
+ //// Allocation
+ extern void* GC_malloc(int);
+ extern void* GC_malloc_atomic(int);
+ extern void* GC_calloc(unsigned,unsigned);
+ extern void* GC_calloc_atomic(unsigned,unsigned);
+ 
+ static inline void* _cycalloc(int n) {
+   void * ans = (void *)GC_malloc(n);
+   if(!ans)
+     _throw_badalloc();
+   return ans;
+ }
+ static inline void* _cycalloc_atomic(int n) {
+   void * ans = (void *)GC_malloc_atomic(n);
+   if(!ans)
+     _throw_badalloc();
+   return ans;
+ }
+ static inline void* _cyccalloc(unsigned n, unsigned s) {
+   void* ans = (void*)GC_calloc(n,s);
+   if (!ans)
+     _throw_badalloc();
+   return ans;
+ }
+ static inline void* _cyccalloc_atomic(unsigned n, unsigned s) {
+   void* ans = (void*)GC_calloc_atomic(n,s);
+   if (!ans)
+     _throw_badalloc();
+   return ans;
+ }
+ #define MAX_MALLOC_SIZE (1 << 28)
+ static inline unsigned int _check_times(unsigned x, unsigned y) {
+   unsigned long long whole_ans = 
+     ((unsigned long long)x)*((unsigned long long)y);
+   unsigned word_ans = (unsigned)whole_ans;
+   if(word_ans < whole_ans || word_ans > MAX_MALLOC_SIZE)
+     _throw_badalloc();
+   return word_ans;
+ }
+ 
+ #if defined(CYC_REGION_PROFILE) 
+ extern void* _profile_GC_malloc(int,char *file,int lineno);
+ extern void* _profile_GC_malloc_atomic(int,char *file,int lineno);
+ extern void* _profile_region_malloc(struct _RegionHandle *, unsigned,
+                                      char *file,int lineno);
+ extern struct _RegionHandle _profile_new_region(const char *rgn_name,
+ 						char *file,int lineno);
+ extern void _profile_free_region(struct _RegionHandle *,
+ 				 char *file,int lineno);
+ #  if !defined(RUNTIME_CYC)
+ #define _new_region(n) _profile_new_region(n,__FILE__ ":" __FUNCTION__,__LINE__)
+ #define _free_region(r) _profile_free_region(r,__FILE__ ":" __FUNCTION__,__LINE__)
+ #define _region_malloc(rh,n) _profile_region_malloc(rh,n,__FILE__ ":" __FUNCTION__,__LINE__)
+ #  endif
+ #define _cycalloc(n) _profile_GC_malloc(n,__FILE__ ":" __FUNCTION__,__LINE__)
+ #define _cycalloc_atomic(n) _profile_GC_malloc_atomic(n,__FILE__ ":" __FUNCTION__,__LINE__)
+ #endif
+ #endif
+  void exit(int);void*abort();struct Cyc_Core_Opt{void*v;};extern char Cyc_Core_Invalid_argument[
+ 21];struct Cyc_Core_Invalid_argument_struct{char*tag;struct _tagged_arr f1;};extern
+ char Cyc_Core_Failure[12];struct Cyc_Core_Failure_struct{char*tag;struct
+ _tagged_arr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
+ char*tag;struct _tagged_arr f1;};extern char Cyc_Core_Not_found[14];extern char Cyc_Core_Unreachable[
+ 16];struct Cyc_Core_Unreachable_struct{char*tag;struct _tagged_arr f1;};struct
+ _tagged_arr wrap_Cbuffer_as_buffer(char*,unsigned int);struct Cyc_in_addr{
+ unsigned int s_addr;};unsigned int Cyc_htonl(unsigned int x);unsigned short Cyc_htons(
+ unsigned short x);unsigned int Cyc_ntohl(unsigned int x);unsigned short Cyc_ntohs(
+ unsigned short x);unsigned int __stub_htonl(unsigned int x);unsigned short
+ __stub_htons(unsigned short x);unsigned int __stub_ntohl(unsigned int x);
+ unsigned short __stub_ntohs(unsigned short x);unsigned int Cyc_htonl(unsigned int x){
+ return __stub_htonl(x);}unsigned short Cyc_htons(unsigned short x){return
+ __stub_htons(x);}unsigned int Cyc_ntohl(unsigned int x){return __stub_ntohl(x);}
+ unsigned short Cyc_ntohs(unsigned short x){return __stub_ntohs(x);}struct Cyc_dirent{
+ unsigned int d_ino;int d_off;unsigned short d_reclen;unsigned char d_type;char d_name[
+ 256];};struct Cyc___cycDIR;int Cyc_closedir(struct Cyc___cycDIR*);struct Cyc___cycDIR*
+ Cyc_opendir(const char*);struct Cyc_dirent*Cyc_readdir(struct Cyc___cycDIR*);void
+ Cyc_rewinddir(struct Cyc___cycDIR*);void Cyc_seekdir(struct Cyc___cycDIR*,int);int
+ Cyc_telldir(struct Cyc___cycDIR*);struct Cyc_Cdirent___abstractDIR;struct Cyc___cycDIR{
+ struct Cyc_Cdirent___abstractDIR*dir;};int closedir(struct Cyc_Cdirent___abstractDIR*
+ d);int Cyc_closedir(struct Cyc___cycDIR*d){return closedir(d->dir);}struct Cyc_Cdirent___abstractDIR*
+ opendir(const char*);static char _tmp1[32]="opendir called with NULL string";static
+ struct Cyc_Core_Failure_struct Cyc___opendir_failure={Cyc_Core_Failure,{_tmp1,
+ _tmp1,_tmp1 + 32}};struct Cyc___cycDIR*Cyc_opendir(const char*f){struct Cyc_Cdirent___abstractDIR*
+ _tmp2=opendir(f);return(unsigned int)_tmp2?({struct Cyc___cycDIR*_tmp3=_cycalloc(
+ sizeof(*_tmp3));_tmp3->dir=(struct Cyc_Cdirent___abstractDIR*)_check_null(_tmp2);
+ _tmp3;}): 0;}struct Cyc_dirent*readdir(struct Cyc_Cdirent___abstractDIR*);struct Cyc_dirent*
+ Cyc_readdir(struct Cyc___cycDIR*d){return readdir(d->dir);}void rewinddir(struct Cyc_Cdirent___abstractDIR*
+ d);void Cyc_rewinddir(struct Cyc___cycDIR*d){return rewinddir(d->dir);}void seekdir(
+ struct Cyc_Cdirent___abstractDIR*d,int);void Cyc_seekdir(struct Cyc___cycDIR*d,int x){
+ return seekdir(d->dir,x);}int telldir(struct Cyc_Cdirent___abstractDIR*d);int Cyc_telldir(
+ struct Cyc___cycDIR*d){return telldir(d->dir);}struct Cyc_flock{short l_type;short
+ l_whence;int l_start;int l_len;int l_pid;};struct Cyc_Flock_struct{int tag;struct Cyc_flock*
+ f1;};struct Cyc_Long_struct{int tag;int f1;};int Cyc_fcntl(int fd,int cmd,struct
+ _tagged_arr);int Cyc_open(const char*,int,struct _tagged_arr);int fcntl(int fd,int cmd);
+ int fcntl_with_arg(int fd,int cmd,int arg);int fcntl_with_lock(int fd,int cmd,struct Cyc_flock*
+ lock);int open_without_mode(const char*,int);int open_with_mode(const char*,int,
+ unsigned int);static char _tmp5[21]="fcntl: too many args";static struct Cyc_Core_Failure_struct
+ Cyc___fcntl_failure={Cyc_Core_Failure,{_tmp5,_tmp5,_tmp5 + 21}};int Cyc_fcntl(int
+ fd,int cmd,struct _tagged_arr argv){if(_get_arr_size(argv,sizeof(void*))== 0)return
+ fcntl(fd,cmd);else{if(_get_arr_size(argv,sizeof(void*))!= 1)(int)_throw((void*)&
+ Cyc___fcntl_failure);else{void*_tmp6=*((void**)_check_unknown_subscript(argv,
+ sizeof(void*),0));int _tmp7;struct Cyc_flock*_tmp8;_LL1: if(*((int*)_tmp6)!= 1)goto
+ _LL3;_tmp7=((struct Cyc_Long_struct*)_tmp6)->f1;_LL2: return fcntl_with_arg(fd,cmd,
+ _tmp7);_LL3: if(*((int*)_tmp6)!= 0)goto _LL0;_tmp8=((struct Cyc_Flock_struct*)_tmp6)->f1;
+ _LL4: return fcntl_with_lock(fd,cmd,(struct Cyc_flock*)_tmp8);_LL0:;}}}int Cyc_open(
+ const char*s,int i,struct _tagged_arr ms){if(_get_arr_size(ms,sizeof(unsigned int))
+ >= 1)return open_with_mode(s,i,*((unsigned int*)_check_unknown_subscript(ms,
+ sizeof(unsigned int),0)));else{return open_without_mode(s,i);}}enum Cyc___anonymous_enum_51__{
+ Cyc_FE_INVALID  = 1,Cyc___FE_DENORM  = 2,Cyc_FE_DIVBYZERO  = 4,Cyc_FE_OVERFLOW  = 8,
+ Cyc_FE_UNDERFLOW  = 16,Cyc_FE_INEXACT  = 32};enum Cyc___anonymous_enum_52__{Cyc_FE_TONEAREST
+  = 0,Cyc_FE_DOWNWARD  = 1024,Cyc_FE_UPWARD  = 2048,Cyc_FE_TOWARDZERO  = 3072};
+ typedef struct{unsigned short __control_word;unsigned short __unused1;
+ unsigned short __status_word;unsigned short __unused2;unsigned short __tags;
+ unsigned short __unused3;unsigned int __eip;unsigned short __cs_selector;
+ unsigned int __opcode: 11;unsigned int __unused4: 5;unsigned int __data_offset;
+ unsigned short __data_selector;unsigned short __unused5;}Cyc_fenv_t;union Cyc___convert_long_double{
+ unsigned int __convert_long_double_i[4];long double __convert_long_double_d;};
+ enum Cyc___anonymous_enum_61__{Cyc_MM_HARD  = 1,Cyc_MM_SOFT  = 2,Cyc_MM_FIRM  = 4,
+ Cyc_MM_APPL  = 8,Cyc_MM_UTIL  = 16,Cyc_MM_OPSYS  = 32,Cyc_MM_RECOVER  = 64,Cyc_MM_NRECOV
+  = 128,Cyc_MM_PRINT  = 256,Cyc_MM_CONSOLE  = 512};enum Cyc___anonymous_enum_62__{
+ Cyc_MM_NOSEV  = 0,Cyc_MM_HALT  = 1,Cyc_MM_ERROR  = 2,Cyc_MM_WARNING  = 3,Cyc_MM_INFO
+  = 4};enum Cyc___anonymous_enum_63__{Cyc_MM_NOTOK  = -1,Cyc_MM_OK  = 0,Cyc_MM_NOMSG
+  = 1,Cyc_MM_NOCON  = 4};enum Cyc___anonymous_enum_118__{Cyc_IPPORT_ECHO  = 7,Cyc_IPPORT_DISCARD
+  = 9,Cyc_IPPORT_SYSTAT  = 11,Cyc_IPPORT_DAYTIME  = 13,Cyc_IPPORT_NETSTAT  = 15,Cyc_IPPORT_FTP
+  = 21,Cyc_IPPORT_TELNET  = 23,Cyc_IPPORT_SMTP  = 25,Cyc_IPPORT_TIMESERVER  = 37,Cyc_IPPORT_NAMESERVER
+  = 42,Cyc_IPPORT_WHOIS  = 43,Cyc_IPPORT_MTP  = 57,Cyc_IPPORT_TFTP  = 69,Cyc_IPPORT_RJE
+  = 77,Cyc_IPPORT_FINGER  = 79,Cyc_IPPORT_TTYLINK  = 87,Cyc_IPPORT_SUPDUP  = 95,Cyc_IPPORT_EXECSERVER
+  = 512,Cyc_IPPORT_LOGINSERVER  = 513,Cyc_IPPORT_CMDSERVER  = 514,Cyc_IPPORT_EFSSERVER
+  = 520,Cyc_IPPORT_BIFFUDP  = 512,Cyc_IPPORT_WHOSERVER  = 513,Cyc_IPPORT_ROUTESERVER
+  = 520,Cyc_IPPORT_RESERVED  = 1024,Cyc_IPPORT_USERRESERVED  = 5000};struct Cyc_servent{
+ char*s_name;char**s_aliases;int s_port;char*s_proto;};struct Cyc_protoent{char*
+ p_name;char**p_aliases;int p_proto;};struct Cyc_hostent{char*h_name;char**
+ h_aliases;int h_addrtype;int h_length;struct Cyc_in_addr**h_addr_list;};enum Cyc___anonymous_enum_121__{
+ Cyc_IPPROTO_IP  = 0,Cyc_IPPROTO_HOPOPTS  = 0,Cyc_IPPROTO_ICMP  = 1,Cyc_IPPROTO_IGMP
+  = 2,Cyc_IPPROTO_IPIP  = 4,Cyc_IPPROTO_TCP  = 6,Cyc_IPPROTO_EGP  = 8,Cyc_IPPROTO_PUP
+  = 12,Cyc_IPPROTO_UDP  = 17,Cyc_IPPROTO_IDP  = 22,Cyc_IPPROTO_TP  = 29,Cyc_IPPROTO_IPV6
+  = 41,Cyc_IPPROTO_ROUTING  = 43,Cyc_IPPROTO_FRAGMENT  = 44,Cyc_IPPROTO_RSVP  = 46,
+ Cyc_IPPROTO_GRE  = 47,Cyc_IPPROTO_ESP  = 50,Cyc_IPPROTO_AH  = 51,Cyc_IPPROTO_ICMPV6
+  = 58,Cyc_IPPROTO_NONE  = 59,Cyc_IPPROTO_DSTOPTS  = 60,Cyc_IPPROTO_MTP  = 92,Cyc_IPPROTO_ENCAP
+  = 98,Cyc_IPPROTO_PIM  = 103,Cyc_IPPROTO_COMP  = 108,Cyc_IPPROTO_RAW  = 255,Cyc_IPPROTO_MAX
+  = 256};struct Cyc_in6_addr{union{unsigned char u6_addr8[16];unsigned short
+ u6_addr16[8];unsigned int u6_addr32[4];}in6_u;};struct Cyc_sockaddr{unsigned short
+ sa_family;char sa_data[14];};struct Cyc_sockaddr_in{unsigned short sin_family;
+ unsigned short sin_port;struct Cyc_in_addr sin_addr;unsigned char sin_zero[((sizeof(
+ struct Cyc_sockaddr)- sizeof(unsigned short))- sizeof(unsigned short))- sizeof(
+ struct Cyc_in_addr)];};struct Cyc_sockaddr_in6{unsigned short sin6_family;
+ unsigned short sin6_port;unsigned int sin6_flowinfo;struct Cyc_in6_addr sin6_addr;
+ unsigned int sin6_scope_id;};struct Cyc_ipv6_mreq{struct Cyc_in6_addr
+ ipv6mr_multiaddr;unsigned int ipv6mr_interface;};struct Cyc_pollfd{int fd;short
+ events;short revents;};int Cyc_poll(struct _tagged_arr,unsigned int,int);int poll(
+ struct Cyc_pollfd*,unsigned int b,int c);static char _tmpA[22]="poll called with NULL";
+ static struct Cyc_Core_Failure_struct Cyc___poll_failure_1={Cyc_Core_Failure,{_tmpA,
+ _tmpA,_tmpA + 22}};static char _tmpC[39]="poll called with out-of-bounds pointer";
+ static struct Cyc_Core_Failure_struct Cyc___poll_failure_2={Cyc_Core_Failure,{_tmpC,
+ _tmpC,_tmpC + 39}};int Cyc_poll(struct _tagged_arr a,unsigned int b,int c){if(!((
+ unsigned int)a.curr))(int)_throw((void*)& Cyc___poll_failure_1);{struct
+ _handler_cons _tmpD;_push_handler(& _tmpD);{int _tmpF=0;if(setjmp(_tmpD.handler))
+ _tmpF=1;if(!_tmpF){*((struct Cyc_pollfd*)_check_unknown_subscript(a,sizeof(struct
+ Cyc_pollfd),0));;_pop_handler();}else{void*_tmpE=(void*)_exn_thrown;void*_tmp11=
+ _tmpE;_LL6: if(_tmp11 != Cyc_Array_bounds)goto _LL8;_LL7:(int)_throw((void*)& Cyc___poll_failure_2);
+ _LL8:;_LL9:(void)_throw(_tmp11);_LL5:;}}}{int len=(int)_get_arr_size(a,sizeof(
+ struct Cyc_pollfd));return poll((struct Cyc_pollfd*)_untag_arr(a,sizeof(struct Cyc_pollfd),
+ 0),b < (unsigned int)len?b:(unsigned int)len,c);}}typedef struct{unsigned int __val[
+ 1024 / (8 * sizeof(unsigned int))];}Cyc___sigset_t;typedef Cyc___sigset_t Cyc_sigset_t;
+ enum Cyc___anonymous_enum_181__{Cyc_SIGEV_SIGNAL  = 0,Cyc_SIGEV_NONE  = 1,Cyc_SIGEV_THREAD
+  = 2};struct Cyc___SIG_BUILTIN_struct{int tag;void*f1;};struct Cyc___SIG_HANDLER_struct{
+ int tag;void(*f1)(int);};void*Cyc_signal(int,struct _tagged_arr);void*Cyc_Csignal_make_SIG_DFL(){
+ return(void*)({struct Cyc___SIG_BUILTIN_struct*_tmp12=_cycalloc(sizeof(*_tmp12));
+ _tmp12[0]=({struct Cyc___SIG_BUILTIN_struct _tmp13;_tmp13.tag=0;_tmp13.f1=(void*)((
+ void*)0);_tmp13;});_tmp12;});}void*Cyc_Csignal_make_SIG_ERR(){return(void*)({
+ struct Cyc___SIG_BUILTIN_struct*_tmp14=_cycalloc(sizeof(*_tmp14));_tmp14[0]=({
+ struct Cyc___SIG_BUILTIN_struct _tmp15;_tmp15.tag=0;_tmp15.f1=(void*)((void*)1);
+ _tmp15;});_tmp14;});}void*Cyc_Csignal_make_SIG_IGN(){return(void*)({struct Cyc___SIG_BUILTIN_struct*
+ _tmp16=_cycalloc(sizeof(*_tmp16));_tmp16[0]=({struct Cyc___SIG_BUILTIN_struct
+ _tmp17;_tmp17.tag=0;_tmp17.f1=(void*)((void*)1);_tmp17;});_tmp16;});}void*Cyc_Csignal_make_SIG_HANDLER(
+ void(*f)(int)){return(void*)({struct Cyc___SIG_HANDLER_struct*_tmp18=_cycalloc(
+ sizeof(*_tmp18));_tmp18[0]=({struct Cyc___SIG_HANDLER_struct _tmp19;_tmp19.tag=1;
+ _tmp19.f1=f;_tmp19;});_tmp18;});}void*signal_SIG_DFL(int);void*signal_SIG_ERR(
+ int);void*signal_SIG_IGN(int);void*signal(int,void(*)(int));static char _tmp1B[49]="signal called with the wrong number of arguments";
+ static struct Cyc_Core_Failure_struct Cyc___signal_failure={Cyc_Core_Failure,{
+ _tmp1B,_tmp1B,_tmp1B + 49}};void*Cyc_signal(int a,struct _tagged_arr b){if(
+ _get_arr_size(b,sizeof(void*))!= 1)(int)_throw((void*)& Cyc___signal_failure);{
+ void*_tmp1C=*((void**)_check_unknown_subscript(b,sizeof(void*),0));void*_tmp1D;
+ void*_tmp1E;void*_tmp1F;void(*_tmp20)(int);_LLB: if(*((int*)_tmp1C)!= 0)goto _LLD;
+ _tmp1D=(void*)((struct Cyc___SIG_BUILTIN_struct*)_tmp1C)->f1;if((int)_tmp1D != 0)
+ goto _LLD;_LLC: return signal_SIG_DFL(a);_LLD: if(*((int*)_tmp1C)!= 0)goto _LLF;
+ _tmp1E=(void*)((struct Cyc___SIG_BUILTIN_struct*)_tmp1C)->f1;if((int)_tmp1E != 1)
+ goto _LLF;_LLE: return signal_SIG_ERR(a);_LLF: if(*((int*)_tmp1C)!= 0)goto _LL11;
+ _tmp1F=(void*)((struct Cyc___SIG_BUILTIN_struct*)_tmp1C)->f1;if((int)_tmp1F != 2)
+ goto _LL11;_LL10: return signal_SIG_IGN(a);_LL11: if(*((int*)_tmp1C)!= 1)goto _LLA;
+ _tmp20=((struct Cyc___SIG_HANDLER_struct*)_tmp1C)->f1;_LL12: return signal(a,_tmp20);
+ _LLA:;}}typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}
+ Cyc___mbstate_t;typedef struct{int __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
+ typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
+ struct Cyc___cycFILE*Cyc_fromCfile(struct Cyc_Cstdio___abstractFILE*cf);struct Cyc_String_pa_struct{
+ int tag;struct _tagged_arr f1;};struct Cyc_Int_pa_struct{int tag;unsigned int f1;};
+ struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_ShortPtr_pa_struct{int tag;
+ short*f1;};struct Cyc_IntPtr_pa_struct{int tag;unsigned int*f1;};void Cyc_clearerr(
+ struct Cyc___cycFILE*);int Cyc_fclose(struct Cyc___cycFILE*);struct Cyc___cycFILE*
+ Cyc_fdopen(int,const char*);int Cyc_feof(struct Cyc___cycFILE*);int Cyc_ferror(
+ struct Cyc___cycFILE*);int Cyc_fflush(struct Cyc___cycFILE*);int Cyc_fgetc(struct Cyc___cycFILE*);
+ int Cyc_fgetpos(struct Cyc___cycFILE*,Cyc_fpos_t*);struct _tagged_arr Cyc_fgets(
+ struct _tagged_arr,int,struct Cyc___cycFILE*);int Cyc_fileno(struct Cyc___cycFILE*);
+ void Cyc_flockfile(struct Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_fopen(const char*,
+ const char*);int Cyc_fputc(int,struct Cyc___cycFILE*);int Cyc_fputs(const char*,
+ struct Cyc___cycFILE*);unsigned int Cyc_fread(struct _tagged_arr,unsigned int,
+ unsigned int,struct Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_freopen(const char*,
+ const char*,struct Cyc___cycFILE*);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};
+ struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
+ int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{
+ int tag;struct _tagged_arr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;};
+ struct Cyc_FloatPtr_sa_struct{int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int
+ tag;struct _tagged_arr f1;};int Cyc_fseek(struct Cyc___cycFILE*,int,int);int Cyc_fsetpos(
+ struct Cyc___cycFILE*,const Cyc_fpos_t*);int Cyc_ftell(struct Cyc___cycFILE*);int Cyc_ftrylockfile(
+ struct Cyc___cycFILE*);void Cyc_funlockfile(struct Cyc___cycFILE*);unsigned int Cyc_fwrite(
+ struct _tagged_arr,unsigned int,unsigned int,struct Cyc___cycFILE*);int Cyc_getc(
+ struct Cyc___cycFILE*);int Cyc_getchar();int Cyc_getc_unlocked(struct Cyc___cycFILE*);
+ int Cyc_getchar_unlocked();int Cyc_pclose(struct Cyc___cycFILE*);struct Cyc___cycFILE*
+ Cyc_popen(const char*,const char*);int Cyc_putc(int,struct Cyc___cycFILE*);int Cyc_putc_unlocked(
+ int,struct Cyc___cycFILE*);void Cyc_rewind(struct Cyc___cycFILE*);int Cyc_setvbuf(
+ struct Cyc___cycFILE*,struct _tagged_arr,int,unsigned int);void Cyc_setbuf(struct
+ Cyc___cycFILE*,struct _tagged_arr);int Cyc_ungetc(int,struct Cyc___cycFILE*);int Cyc_getw(
+ struct Cyc___cycFILE*);int Cyc_putw(int,struct Cyc___cycFILE*);extern char Cyc_FileCloseError[
+ 19];extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{char*tag;
+ struct _tagged_arr f1;};struct Cyc___cycFILE*Cyc_file_open(struct _tagged_arr,struct
+ _tagged_arr);void Cyc_file_close(struct Cyc___cycFILE*);struct Cyc_Cstdio___abstractFILE;
+ struct Cyc___cycFILE{struct Cyc_Cstdio___abstractFILE*file;};struct Cyc___cycFILE*
+ Cyc_fromCfile(struct Cyc_Cstdio___abstractFILE*cf){return(unsigned int)cf?({
+ struct Cyc___cycFILE*_tmp21=_cycalloc(sizeof(*_tmp21));_tmp21->file=(struct Cyc_Cstdio___abstractFILE*)
+ _check_null(cf);_tmp21;}): 0;}void clearerr(struct Cyc_Cstdio___abstractFILE*);void
+ Cyc_clearerr(struct Cyc___cycFILE*f){return clearerr(f->file);}int fclose(struct Cyc_Cstdio___abstractFILE*);
+ int Cyc_fclose(struct Cyc___cycFILE*f){return fclose(f->file);}struct Cyc_Cstdio___abstractFILE*
+ fdopen(int,const char*);struct Cyc___cycFILE*Cyc_fdopen(int i,const char*s){struct
+ Cyc_Cstdio___abstractFILE*_tmp22=fdopen(i,s);return(unsigned int)_tmp22?({struct
+ Cyc___cycFILE*_tmp23=_cycalloc(sizeof(*_tmp23));_tmp23->file=(struct Cyc_Cstdio___abstractFILE*)
+ _check_null(_tmp22);_tmp23;}): 0;}int feof(struct Cyc_Cstdio___abstractFILE*);int
+ Cyc_feof(struct Cyc___cycFILE*f){return feof(f->file);}int ferror(struct Cyc_Cstdio___abstractFILE*);
+ int Cyc_ferror(struct Cyc___cycFILE*f){return ferror(f->file);}int fflush(struct Cyc_Cstdio___abstractFILE*);
+ int Cyc_fflush(struct Cyc___cycFILE*f){if((unsigned int)f)return fflush((struct Cyc_Cstdio___abstractFILE*)
+ f->file);else{return fflush(0);}}int fgetc(struct Cyc_Cstdio___abstractFILE*);int
+ Cyc_fgetc(struct Cyc___cycFILE*f){return fgetc(f->file);}int fgetpos(struct Cyc_Cstdio___abstractFILE*,
+ Cyc_fpos_t*);int Cyc_fgetpos(struct Cyc___cycFILE*f,Cyc_fpos_t*x){return fgetpos(f->file,
+ x);}char*fgets(char*,int,struct Cyc_Cstdio___abstractFILE*);static char _tmp25[30]="fgets called with NULL string";
+ static struct Cyc_Core_Failure_struct Cyc___fgets_failure_1={Cyc_Core_Failure,{
+ _tmp25,_tmp25,_tmp25 + 30}};static char _tmp27[27]="fgets: buffer insufficient";
+ static struct Cyc_Core_Failure_struct Cyc___fgets_failure_2={Cyc_Core_Failure,{
+ _tmp27,_tmp27,_tmp27 + 27}};struct _tagged_arr Cyc_fgets(struct _tagged_arr s,int n,
+ struct Cyc___cycFILE*f){if(!((unsigned int)s.curr))(int)_throw((void*)& Cyc___fgets_failure_1);{
+ char*result;char*buffer=(char*)_check_null(_untag_arr(s,sizeof(char),1));
+ unsigned int len=_get_arr_size(s,sizeof(char));if(len < n)(int)_throw((void*)& Cyc___fgets_failure_2);
+ result=fgets(buffer,n,f->file);if(result == 0)return _tag_arr(0,0,0);else{return s;}}}
+ int fileno(struct Cyc_Cstdio___abstractFILE*);int Cyc_fileno(struct Cyc___cycFILE*f){
+ return fileno(f->file);}void flockfile(struct Cyc_Cstdio___abstractFILE*);void Cyc_flockfile(
+ struct Cyc___cycFILE*f){return flockfile(f->file);}struct Cyc_Cstdio___abstractFILE*
+ fopen(const char*,const char*);struct Cyc___cycFILE*Cyc_fopen(const char*name,const
+ char*type){struct Cyc_Cstdio___abstractFILE*_tmp28=fopen(name,type);return(
+ unsigned int)_tmp28?({struct Cyc___cycFILE*_tmp29=_cycalloc(sizeof(*_tmp29));
+ _tmp29->file=(struct Cyc_Cstdio___abstractFILE*)_check_null(_tmp28);_tmp29;}): 0;}
+ int fputc(int,struct Cyc_Cstdio___abstractFILE*);int Cyc_fputc(int x,struct Cyc___cycFILE*
+ f){return fputc(x,f->file);}int fputs(const char*,struct Cyc_Cstdio___abstractFILE*);
+ int Cyc_fputs(const char*x,struct Cyc___cycFILE*f){return fputs(x,f->file);}
+ unsigned int fread(char*,unsigned int,unsigned int,struct Cyc_Cstdio___abstractFILE*);
+ static char _tmp2B[27]="fread: buffer insufficient";static struct Cyc_Core_Failure_struct
+ Cyc___fread_failure={Cyc_Core_Failure,{_tmp2B,_tmp2B,_tmp2B + 27}};unsigned int
+ Cyc_fread(struct _tagged_arr ptr,unsigned int size,unsigned int nmemb,struct Cyc___cycFILE*
+ f){if(size * nmemb > _get_arr_size(ptr,sizeof(char)))(int)_throw((void*)& Cyc___fread_failure);
+ return fread((char*)_check_null(_untag_arr(ptr,sizeof(char),1)),size,nmemb,f->file);}
+ struct Cyc_Cstdio___abstractFILE*freopen(const char*,const char*,struct Cyc_Cstdio___abstractFILE*);
+ struct Cyc___cycFILE*Cyc_freopen(const char*filename,const char*modes,struct Cyc___cycFILE*
+ f){struct Cyc_Cstdio___abstractFILE*_tmp2C=freopen(filename,modes,f->file);return(
+ unsigned int)_tmp2C?(struct Cyc___cycFILE*)({struct Cyc___cycFILE*_tmp2D=_cycalloc(
+ sizeof(*_tmp2D));_tmp2D->file=(struct Cyc_Cstdio___abstractFILE*)_check_null(
+ _tmp2C);_tmp2D;}): 0;}int fseek(struct Cyc_Cstdio___abstractFILE*,int,int);int Cyc_fseek(
+ struct Cyc___cycFILE*a,int b,int c){return fseek(a->file,b,c);}int fsetpos(struct Cyc_Cstdio___abstractFILE*,
+ const Cyc_fpos_t*);int Cyc_fsetpos(struct Cyc___cycFILE*f,const Cyc_fpos_t*b){return
+ fsetpos(f->file,b);}int ftell(struct Cyc_Cstdio___abstractFILE*);int Cyc_ftell(
+ struct Cyc___cycFILE*f){return ftell(f->file);}int ftrylockfile(struct Cyc_Cstdio___abstractFILE*);
+ int Cyc_ftrylockfile(struct Cyc___cycFILE*f){return ftrylockfile(f->file);}void
+ funlockfile(struct Cyc_Cstdio___abstractFILE*);void Cyc_funlockfile(struct Cyc___cycFILE*
+ f){return funlockfile(f->file);}unsigned int fwrite(const char*,unsigned int,
+ unsigned int,struct Cyc_Cstdio___abstractFILE*);static char _tmp2F[31]="fwrite called with NULL string";
+ static struct Cyc_Core_Failure_struct Cyc___fwrite_failure_1={Cyc_Core_Failure,{
+ _tmp2F,_tmp2F,_tmp2F + 31}};static char _tmp31[28]="fwrite: buffer insufficient";
+ static struct Cyc_Core_Failure_struct Cyc___fwrite_failure_2={Cyc_Core_Failure,{
+ _tmp31,_tmp31,_tmp31 + 28}};unsigned int Cyc_fwrite(struct _tagged_arr ptr,
+ unsigned int size,unsigned int nmemb,struct Cyc___cycFILE*f){if(!((unsigned int)ptr.curr))(
+ int)_throw((void*)& Cyc___fwrite_failure_1);else{if(size * nmemb > _get_arr_size(
+ ptr,sizeof(char)))(int)_throw((void*)& Cyc___fwrite_failure_2);return fwrite((
+ const char*)_untag_arr(ptr,sizeof(char),1),size,nmemb,f->file);}}int getc(struct
+ Cyc_Cstdio___abstractFILE*);int Cyc_getc(struct Cyc___cycFILE*f){return getc(f->file);}
+ int getchar();int Cyc_getchar(){return getchar();}int getc_unlocked(struct Cyc_Cstdio___abstractFILE*);
+ int Cyc_getc_unlocked(struct Cyc___cycFILE*f){return getc_unlocked(f->file);}int
+ __CYCLONE_GETCHAR_UNLOCKED();int Cyc_getchar_unlocked(){return
+ __CYCLONE_GETCHAR_UNLOCKED();}int pclose(struct Cyc_Cstdio___abstractFILE*);int Cyc_pclose(
+ struct Cyc___cycFILE*f){return pclose(f->file);}struct Cyc_Cstdio___abstractFILE*
+ popen(const char*,const char*);struct Cyc___cycFILE*Cyc_popen(const char*name,const
+ char*type){struct Cyc_Cstdio___abstractFILE*_tmp32=popen(name,type);return(
+ unsigned int)_tmp32?({struct Cyc___cycFILE*_tmp33=_cycalloc(sizeof(*_tmp33));
+ _tmp33->file=(struct Cyc_Cstdio___abstractFILE*)_check_null(_tmp32);_tmp33;}): 0;}
+ int putc(int,struct Cyc_Cstdio___abstractFILE*);int Cyc_putc(int x,struct Cyc___cycFILE*
+ f){return putc(x,f->file);}int putc_unlocked(int,struct Cyc_Cstdio___abstractFILE*);
+ int Cyc_putc_unlocked(int x,struct Cyc___cycFILE*f){return putc_unlocked(x,f->file);}
+ void rewind(struct Cyc_Cstdio___abstractFILE*);void Cyc_rewind(struct Cyc___cycFILE*
+ f){return rewind(f->file);}int setvbuf(struct Cyc_Cstdio___abstractFILE*,char*,int,
+ unsigned int);static char _tmp35[24]="setvbuf: buffer is NULL";static struct Cyc_Core_Failure_struct
+ Cyc___setvbuf_failure_1={Cyc_Core_Failure,{_tmp35,_tmp35,_tmp35 + 24}};static char
+ _tmp37[29]="setvbuf: buffer insufficient";static struct Cyc_Core_Failure_struct Cyc___setvbuf_failure_2={
+ Cyc_Core_Failure,{_tmp37,_tmp37,_tmp37 + 29}};int Cyc_setvbuf(struct Cyc___cycFILE*
+ f,struct _tagged_arr buf,int type,unsigned int size){if(!((unsigned int)buf.curr))(
+ int)_throw((void*)& Cyc___setvbuf_failure_1);if(_get_arr_size(buf,sizeof(char))< 
+ size)(int)_throw((void*)& Cyc___setvbuf_failure_2);return setvbuf(f->file,(char*)
+ _check_null(_untag_arr(buf,sizeof(char),1)),type,size);}void Cyc_setbuf(struct Cyc___cycFILE*
+ f,struct _tagged_arr buf){Cyc_setvbuf(f,buf,(unsigned int)buf.curr?0: 2,8192);
+ return;}int ungetc(int,struct Cyc_Cstdio___abstractFILE*);int Cyc_ungetc(int x,
+ struct Cyc___cycFILE*f){return ungetc(x,f->file);}int getw(struct Cyc_Cstdio___abstractFILE*);
+ int Cyc_getw(struct Cyc___cycFILE*f){return getw(f->file);}int putw(int,struct Cyc_Cstdio___abstractFILE*);
+ int Cyc_putw(int x,struct Cyc___cycFILE*f){return putw(x,f->file);}char Cyc_FileCloseError[
+ 19]="\000\000\000\000FileCloseError\000";char Cyc_FileOpenError[18]="\000\000\000\000FileOpenError\000";
+ struct Cyc___cycFILE*Cyc_file_open(struct _tagged_arr fname,struct _tagged_arr mode){
+ struct Cyc___cycFILE*f=Cyc_fopen((const char*)_untag_arr(fname,sizeof(char),1),(
+ const char*)_untag_arr(mode,sizeof(char),1));if(f == 0){struct _tagged_arr fn=({
+ unsigned int _tmp3A=_get_arr_size(fname,sizeof(char));char*_tmp3B=(char*)
+ _cycalloc_atomic(_check_times(sizeof(char),_tmp3A + 1));struct _tagged_arr _tmp3D=
+ _tag_arr(_tmp3B,sizeof(char),_tmp3A + 1);{unsigned int _tmp3C=_tmp3A;unsigned int i;
+ for(i=0;i < _tmp3C;i ++){_tmp3B[i]=((const char*)fname.curr)[(int)i];}_tmp3B[_tmp3C]=(
+ char)0;}_tmp3D;});(int)_throw((void*)({struct Cyc_FileOpenError_struct*_tmp38=
+ _cycalloc(sizeof(*_tmp38));_tmp38[0]=({struct Cyc_FileOpenError_struct _tmp39;
+ _tmp39.tag=Cyc_FileOpenError;_tmp39.f1=fn;_tmp39;});_tmp38;}));}return(struct Cyc___cycFILE*)
+ _check_null(f);}void Cyc_file_close(struct Cyc___cycFILE*f){if(Cyc_fclose(f)!= 0)(
+ int)_throw((void*)Cyc_FileCloseError);}typedef struct{int quot;int rem;}Cyc_div_t;
+ typedef struct{int quot;int rem;}Cyc_ldiv_t;void*abort();void exit(int);void Cyc_free(
+ struct _tagged_arr);void Cyc_qsort(struct _tagged_arr,unsigned int,unsigned int,int(*)(
+ const void*,const void*));void Cyc_free(struct _tagged_arr ptr){;}void qsort(void*,
+ unsigned int,unsigned int,int(*)(const void*,const void*));static char _tmp3F[23]="qsort called with NULL";
+ static struct Cyc_Core_Failure_struct Cyc___qsort_failure_1={Cyc_Core_Failure,{
+ _tmp3F,_tmp3F,_tmp3F + 23}};static char _tmp41[42]="qsort called with insufficient array size";
+ static struct Cyc_Core_Failure_struct Cyc___qsort_failure_2={Cyc_Core_Failure,{
+ _tmp41,_tmp41,_tmp41 + 42}};void Cyc_qsort(struct _tagged_arr tab,unsigned int nmemb,
+ unsigned int szmemb,int(*compar)(const void*,const void*)){if(!((unsigned int)tab.curr))(
+ int)_throw((void*)& Cyc___qsort_failure_1);if(_get_arr_size(tab,sizeof(void))< 
+ nmemb)(int)_throw((void*)& Cyc___qsort_failure_2);qsort((void*)_untag_arr(tab,
+ sizeof(void),1),nmemb,(unsigned int)szmemb,compar);}struct Cyc_ipc_perm{int __key;
+ unsigned int uid;unsigned int gid;unsigned int cuid;unsigned int cgid;unsigned short
+ mode;unsigned short __pad1;unsigned short __seq;unsigned short __pad2;unsigned int
+ __unused1;unsigned int __unused2;};struct _tagged_arr Cyc_mmap(struct _tagged_arr,
+ unsigned int length,int prot,int flags,int fd,int offset);int Cyc_munmap(struct
+ _tagged_arr start,unsigned int length);char*__stub_mmap(char*start,unsigned int
+ length,int prot,int flags,int fd,int offset);int munmap(const char*start,unsigned int
+ length);static char _tmp43[42]="mmap called with illegal start/prot/flags";static
+ struct Cyc_Core_Failure_struct Cyc___mmap_failure={Cyc_Core_Failure,{_tmp43,_tmp43,
+ _tmp43 + 42}};struct _tagged_arr Cyc_mmap(struct _tagged_arr ignored,unsigned int
+ length,int prot,int flags,int fd,int offset){if((ignored.curr == (_tag_arr(0,0,0)).curr?
+ prot == 1: 0)?flags == 2?1: flags == 1: 0)return(struct _tagged_arr)
+ wrap_Cbuffer_as_buffer(__stub_mmap(0,length,prot,flags,fd,offset),length);else{(
+ int)_throw((void*)& Cyc___mmap_failure);}}int Cyc_munmap(struct _tagged_arr start,
+ unsigned int length){return munmap((const char*)_check_null(_untag_arr(start,
+ sizeof(char),1)),length);}struct Cyc_timeval{int tv_sec;int tv_usec;};struct Cyc_rlimit{
+ unsigned int rlim_cur;unsigned int rlim_max;};enum Cyc___rusage_who{Cyc_RUSAGE_SELF
+  = 0,Cyc_RUSAGE_CHILDREN  = -1,Cyc_RUSAGE_BOTH  = -2};struct Cyc_rusage{struct Cyc_timeval
+ ru_utime;struct Cyc_timeval ru_stime;int ru_maxrss;int ru_ixrss;int ru_idrss;int
+ ru_isrss;int ru_minflt;int ru_majflt;int ru_nswap;int ru_inblock;int ru_oublock;int
+ ru_msgsnd;int ru_msgrcv;int ru_nsignals;int ru_nvcsw;int ru_nivcsw;};enum Cyc___priority_which{
+ Cyc_PRIO_PROCESS  = 0,Cyc_PRIO_PGRP  = 1,Cyc_PRIO_USER  = 2};struct Cyc_timespec{int
+ tv_sec;int tv_nsec;};typedef struct{int __fds_bits[1024 / (8 * sizeof(int))];}Cyc_fd_set;
+ int select(int,Cyc_fd_set*,Cyc_fd_set*,Cyc_fd_set*,struct Cyc_timeval*);void Cyc_FD_CLR(
+ int,Cyc_fd_set*);int Cyc_FD_ISSET(int,Cyc_fd_set*);void Cyc_FD_SET(int,Cyc_fd_set*);
+ void Cyc_FD_ZERO(Cyc_fd_set*);void __stub_FD_CLR(int,Cyc_fd_set*);int
+ __stub_FD_ISSET(int,Cyc_fd_set*);void __stub_FD_SET(int,Cyc_fd_set*);void
+ __stub_FD_ZERO(Cyc_fd_set*);void Cyc_FD_CLR(int a,Cyc_fd_set*b){return
+ __stub_FD_CLR(a,b);}int Cyc_FD_ISSET(int a,Cyc_fd_set*b){return __stub_FD_ISSET(a,b);}
+ void Cyc_FD_SET(int a,Cyc_fd_set*b){return __stub_FD_SET(a,b);}void Cyc_FD_ZERO(Cyc_fd_set*
+ a){return __stub_FD_ZERO(a);}enum Cyc___socket_type{Cyc_SOCK_STREAM  = 1,Cyc_SOCK_DGRAM
+  = 2,Cyc_SOCK_RAW  = 3,Cyc_SOCK_RDM  = 4,Cyc_SOCK_SEQPACKET  = 5,Cyc_SOCK_PACKET  = 
+ 10};enum Cyc___anonymous_enum_270__{Cyc_MSG_OOB  = 1,Cyc_MSG_PEEK  = 2,Cyc_MSG_DONTROUTE
+  = 4,Cyc_MSG_CTRUNC  = 8,Cyc_MSG_PROXY  = 16,Cyc_MSG_TRUNC  = 32,Cyc_MSG_DONTWAIT
+  = 64,Cyc_MSG_EOR  = 128,Cyc_MSG_WAITALL  = 256,Cyc_MSG_FIN  = 512,Cyc_MSG_SYN  = 
+ 1024,Cyc_MSG_CONFIRM  = 2048,Cyc_MSG_RST  = 4096,Cyc_MSG_ERRQUEUE  = 8192,Cyc_MSG_NOSIGNAL
+  = 16384,Cyc_MSG_MORE  = 32768};struct Cyc_cmsghdr{unsigned int cmsg_len;int
+ cmsg_level;int cmsg_type;unsigned char __cmsg_data[0];};enum Cyc___anonymous_enum_271__{
+ Cyc_SCM_RIGHTS  = 1,Cyc_SCM_CREDENTIALS  = 2,Cyc___SCM_CONNECT  = 3};struct Cyc_linger{
+ int l_onoff;int l_linger;};enum Cyc___anonymous_enum_272__{Cyc_SHUT_RD  = 0,Cyc_SHUT_WR
+  = 1,Cyc_SHUT_RDWR  = 2};struct Cyc_SA_sockaddr_in_struct{int tag;struct Cyc_sockaddr_in*
+ f1;};struct Cyc_SA_socklenptr_struct{int tag;unsigned int*f1;};struct Cyc_SA_socklen_struct{
+ int tag;unsigned int f1;};struct Cyc_SO_int_struct{int tag;int*f1;};struct Cyc_SO_timeval_struct{
+ int tag;struct Cyc_timeval*f1;};struct Cyc_SO_socklenptr_struct{int tag;unsigned int*
+ f1;};struct Cyc_SO_socklen_struct{int tag;unsigned int f1;};int Cyc_accept(int fd,
+ struct _tagged_arr);extern char Cyc_SocketError[16];int Cyc_bind(int fd,struct
+ _tagged_arr);int Cyc_connect(int fd,struct _tagged_arr);int Cyc_getpeername(int fd,
+ struct _tagged_arr);int Cyc_getsockname(int fd,struct _tagged_arr);int Cyc_getsockopt(
+ int fd,int level,int optname,struct _tagged_arr);int Cyc_recv(int fd,struct _tagged_arr
+ buf,unsigned int n,int flags);int Cyc_recvfrom(int fd,struct _tagged_arr buf,
+ unsigned int n,int flags,struct _tagged_arr);int Cyc_send(int fd,struct _tagged_arr buf,
+ unsigned int n,int flags);int Cyc_sendto(int fd,struct _tagged_arr buf,unsigned int n,
+ int flags,struct _tagged_arr);int Cyc_setsockopt(int fd,int level,int optname,struct
+ _tagged_arr);char Cyc_SocketError[16]="\000\000\000\000SocketError\000";int
+ accept_in(int,const struct Cyc_sockaddr_in*,unsigned int*);struct _tuple0{void*f1;
+ void*f2;};int Cyc_accept(int fd,struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(
+ void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp45=({struct
+ _tuple0 _tmp44;_tmp44.f1=*((void**)_check_unknown_subscript(ap,sizeof(void*),0));
+ _tmp44.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),1));_tmp44;});void*
+ _tmp46;struct Cyc_sockaddr_in*_tmp47;void*_tmp48;unsigned int*_tmp49;_LL14: _tmp46=
+ _tmp45.f1;if(*((int*)_tmp46)!= 0)goto _LL16;_tmp47=((struct Cyc_SA_sockaddr_in_struct*)
+ _tmp46)->f1;_tmp48=_tmp45.f2;if(*((int*)_tmp48)!= 1)goto _LL16;_tmp49=((struct Cyc_SA_socklenptr_struct*)
+ _tmp48)->f1;_LL15: return accept_in(fd,(const struct Cyc_sockaddr_in*)_tmp47,_tmp49);
+ _LL16:;_LL17:(int)_throw((void*)Cyc_SocketError);_LL13:;}}int bind_in(int,const
+ struct Cyc_sockaddr_in*,unsigned int);int Cyc_bind(int fd,struct _tagged_arr ap){if(
+ _get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct
+ _tuple0 _tmp4B=({struct _tuple0 _tmp4A;_tmp4A.f1=*((void**)_check_unknown_subscript(
+ ap,sizeof(void*),0));_tmp4A.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),
+ 1));_tmp4A;});void*_tmp4C;struct Cyc_sockaddr_in*_tmp4D;void*_tmp4E;unsigned int
+ _tmp4F;_LL19: _tmp4C=_tmp4B.f1;if(*((int*)_tmp4C)!= 0)goto _LL1B;_tmp4D=((struct
+ Cyc_SA_sockaddr_in_struct*)_tmp4C)->f1;_tmp4E=_tmp4B.f2;if(*((int*)_tmp4E)!= 2)
+ goto _LL1B;_tmp4F=((struct Cyc_SA_socklen_struct*)_tmp4E)->f1;_LL1A: return bind_in(
+ fd,(const struct Cyc_sockaddr_in*)_tmp4D,_tmp4F);_LL1B:;_LL1C:(int)_throw((void*)
+ Cyc_SocketError);_LL18:;}}int connect_in(int,const struct Cyc_sockaddr_in*,
+ unsigned int);int Cyc_connect(int fd,struct _tagged_arr ap){if(_get_arr_size(ap,
+ sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp51=({
+ struct _tuple0 _tmp50;_tmp50.f1=*((void**)_check_unknown_subscript(ap,sizeof(void*),
+ 0));_tmp50.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),1));_tmp50;});
+ void*_tmp52;struct Cyc_sockaddr_in*_tmp53;void*_tmp54;unsigned int _tmp55;_LL1E:
+ _tmp52=_tmp51.f1;if(*((int*)_tmp52)!= 0)goto _LL20;_tmp53=((struct Cyc_SA_sockaddr_in_struct*)
+ _tmp52)->f1;_tmp54=_tmp51.f2;if(*((int*)_tmp54)!= 2)goto _LL20;_tmp55=((struct Cyc_SA_socklen_struct*)
+ _tmp54)->f1;_LL1F: return connect_in(fd,(const struct Cyc_sockaddr_in*)_tmp53,_tmp55);
+ _LL20:;_LL21:(int)_throw((void*)Cyc_SocketError);_LL1D:;}}int getpeername_in(int,
+ const struct Cyc_sockaddr_in*,unsigned int*);int Cyc_getpeername(int fd,struct
+ _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
+ struct _tuple0 _tmp57=({struct _tuple0 _tmp56;_tmp56.f1=*((void**)
+ _check_unknown_subscript(ap,sizeof(void*),0));_tmp56.f2=*((void**)
+ _check_unknown_subscript(ap,sizeof(void*),1));_tmp56;});void*_tmp58;struct Cyc_sockaddr_in*
+ _tmp59;void*_tmp5A;unsigned int*_tmp5B;_LL23: _tmp58=_tmp57.f1;if(*((int*)_tmp58)
+ != 0)goto _LL25;_tmp59=((struct Cyc_SA_sockaddr_in_struct*)_tmp58)->f1;_tmp5A=
+ _tmp57.f2;if(*((int*)_tmp5A)!= 1)goto _LL25;_tmp5B=((struct Cyc_SA_socklenptr_struct*)
+ _tmp5A)->f1;_LL24: return getpeername_in(fd,(const struct Cyc_sockaddr_in*)_tmp59,
+ _tmp5B);_LL25:;_LL26:(int)_throw((void*)Cyc_SocketError);_LL22:;}}int
+ getsockname_in(int,const struct Cyc_sockaddr_in*,unsigned int*);int Cyc_getsockname(
+ int fd,struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((
+ void*)Cyc_SocketError);{struct _tuple0 _tmp5D=({struct _tuple0 _tmp5C;_tmp5C.f1=*((
+ void**)_check_unknown_subscript(ap,sizeof(void*),0));_tmp5C.f2=*((void**)
+ _check_unknown_subscript(ap,sizeof(void*),1));_tmp5C;});void*_tmp5E;struct Cyc_sockaddr_in*
+ _tmp5F;void*_tmp60;unsigned int*_tmp61;_LL28: _tmp5E=_tmp5D.f1;if(*((int*)_tmp5E)
+ != 0)goto _LL2A;_tmp5F=((struct Cyc_SA_sockaddr_in_struct*)_tmp5E)->f1;_tmp60=
+ _tmp5D.f2;if(*((int*)_tmp60)!= 1)goto _LL2A;_tmp61=((struct Cyc_SA_socklenptr_struct*)
+ _tmp60)->f1;_LL29: return getsockname_in(fd,(const struct Cyc_sockaddr_in*)_tmp5F,
+ _tmp61);_LL2A:;_LL2B:(int)_throw((void*)Cyc_SocketError);_LL27:;}}int
+ getsockopt_int(int,int,int,int*,unsigned int*);int getsockopt_timeval(int,int,int,
+ struct Cyc_timeval*,unsigned int*);int Cyc_getsockopt(int fd,int level,int optname,
+ struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)
+ Cyc_SocketError);{struct _tuple0 _tmp63=({struct _tuple0 _tmp62;_tmp62.f1=*((void**)
+ _check_unknown_subscript(ap,sizeof(void*),0));_tmp62.f2=*((void**)
+ _check_unknown_subscript(ap,sizeof(void*),1));_tmp62;});void*_tmp64;int*_tmp65;
+ void*_tmp66;unsigned int*_tmp67;void*_tmp68;int*_tmp69;void*_tmp6A;int*_tmp6B;
+ void*_tmp6C;struct Cyc_timeval*_tmp6D;void*_tmp6E;unsigned int*_tmp6F;void*_tmp70;
+ struct Cyc_timeval*_tmp71;void*_tmp72;int*_tmp73;_LL2D: _tmp64=_tmp63.f1;if(*((int*)
+ _tmp64)!= 0)goto _LL2F;_tmp65=((struct Cyc_SO_int_struct*)_tmp64)->f1;_tmp66=
+ _tmp63.f2;if(*((int*)_tmp66)!= 2)goto _LL2F;_tmp67=((struct Cyc_SO_socklenptr_struct*)
+ _tmp66)->f1;_LL2E: return getsockopt_int(fd,level,optname,_tmp65,_tmp67);_LL2F:
+ _tmp68=_tmp63.f1;if(*((int*)_tmp68)!= 0)goto _LL31;_tmp69=((struct Cyc_SO_int_struct*)
+ _tmp68)->f1;_tmp6A=_tmp63.f2;if(*((int*)_tmp6A)!= 0)goto _LL31;_tmp6B=((struct Cyc_SO_int_struct*)
+ _tmp6A)->f1;_LL30: return getsockopt_int(fd,level,optname,_tmp69,(unsigned int*)
+ _tmp6B);_LL31: _tmp6C=_tmp63.f1;if(*((int*)_tmp6C)!= 1)goto _LL33;_tmp6D=((struct
+ Cyc_SO_timeval_struct*)_tmp6C)->f1;_tmp6E=_tmp63.f2;if(*((int*)_tmp6E)!= 2)goto
+ _LL33;_tmp6F=((struct Cyc_SO_socklenptr_struct*)_tmp6E)->f1;_LL32: return
+ getsockopt_timeval(fd,level,optname,_tmp6D,_tmp6F);_LL33: _tmp70=_tmp63.f1;if(*((
+ int*)_tmp70)!= 1)goto _LL35;_tmp71=((struct Cyc_SO_timeval_struct*)_tmp70)->f1;
+ _tmp72=_tmp63.f2;if(*((int*)_tmp72)!= 0)goto _LL35;_tmp73=((struct Cyc_SO_int_struct*)
+ _tmp72)->f1;_LL34: return getsockopt_timeval(fd,level,optname,_tmp71,(unsigned int*)
+ _tmp73);_LL35:;_LL36:(int)_throw((void*)Cyc_SocketError);_LL2C:;}}int
+ recv_wrapped(int,struct _tagged_arr,unsigned int,int);int Cyc_recv(int fd,struct
+ _tagged_arr buf,unsigned int n,int flags){return recv_wrapped(fd,buf,n,flags);}int
+ recvfrom_in(int,struct _tagged_arr,unsigned int,int,const struct Cyc_sockaddr_in*,
+ unsigned int*);int Cyc_recvfrom(int fd,struct _tagged_arr buf,unsigned int n,int flags,
+ struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)
+ Cyc_SocketError);{struct _tuple0 _tmp75=({struct _tuple0 _tmp74;_tmp74.f1=*((void**)
+ _check_unknown_subscript(ap,sizeof(void*),0));_tmp74.f2=*((void**)
+ _check_unknown_subscript(ap,sizeof(void*),1));_tmp74;});void*_tmp76;struct Cyc_sockaddr_in*
+ _tmp77;void*_tmp78;unsigned int*_tmp79;_LL38: _tmp76=_tmp75.f1;if(*((int*)_tmp76)
+ != 0)goto _LL3A;_tmp77=((struct Cyc_SA_sockaddr_in_struct*)_tmp76)->f1;_tmp78=
+ _tmp75.f2;if(*((int*)_tmp78)!= 1)goto _LL3A;_tmp79=((struct Cyc_SA_socklenptr_struct*)
+ _tmp78)->f1;_LL39: return recvfrom_in(fd,buf,n,flags,(const struct Cyc_sockaddr_in*)
+ _tmp77,_tmp79);_LL3A:;_LL3B:(int)_throw((void*)Cyc_SocketError);_LL37:;}}int
+ send_wrapped(int,struct _tagged_arr,unsigned int,int);int Cyc_send(int fd,struct
+ _tagged_arr buf,unsigned int n,int flags){return send_wrapped(fd,buf,n,flags);}int
+ sendto_in(int,struct _tagged_arr,unsigned int,int,const struct Cyc_sockaddr_in*,
+ unsigned int);int Cyc_sendto(int fd,struct _tagged_arr buf,unsigned int n,int flags,
+ struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)
+ Cyc_SocketError);{struct _tuple0 _tmp7B=({struct _tuple0 _tmp7A;_tmp7A.f1=*((void**)
+ _check_unknown_subscript(ap,sizeof(void*),0));_tmp7A.f2=*((void**)
+ _check_unknown_subscript(ap,sizeof(void*),1));_tmp7A;});void*_tmp7C;struct Cyc_sockaddr_in*
+ _tmp7D;void*_tmp7E;unsigned int _tmp7F;_LL3D: _tmp7C=_tmp7B.f1;if(*((int*)_tmp7C)
+ != 0)goto _LL3F;_tmp7D=((struct Cyc_SA_sockaddr_in_struct*)_tmp7C)->f1;_tmp7E=
+ _tmp7B.f2;if(*((int*)_tmp7E)!= 2)goto _LL3F;_tmp7F=((struct Cyc_SA_socklen_struct*)
+ _tmp7E)->f1;_LL3E: return sendto_in(fd,buf,n,flags,(const struct Cyc_sockaddr_in*)
+ _tmp7D,_tmp7F);_LL3F:;_LL40:(int)_throw((void*)Cyc_SocketError);_LL3C:;}}int
+ setsockopt_int(int,int,int,const int*,unsigned int);int setsockopt_timeval(int,int,
+ int,const struct Cyc_timeval*,unsigned int);int Cyc_setsockopt(int fd,int level,int
+ optname,struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((
+ void*)Cyc_SocketError);{struct _tuple0 _tmp81=({struct _tuple0 _tmp80;_tmp80.f1=*((
+ void**)_check_unknown_subscript(ap,sizeof(void*),0));_tmp80.f2=*((void**)
+ _check_unknown_subscript(ap,sizeof(void*),1));_tmp80;});void*_tmp82;int*_tmp83;
+ void*_tmp84;unsigned int _tmp85;void*_tmp86;struct Cyc_timeval*_tmp87;void*_tmp88;
+ unsigned int _tmp89;_LL42: _tmp82=_tmp81.f1;if(*((int*)_tmp82)!= 0)goto _LL44;
+ _tmp83=((struct Cyc_SO_int_struct*)_tmp82)->f1;_tmp84=_tmp81.f2;if(*((int*)_tmp84)
+ != 3)goto _LL44;_tmp85=((struct Cyc_SO_socklen_struct*)_tmp84)->f1;_LL43: return
+ setsockopt_int(fd,level,optname,(const int*)_tmp83,_tmp85);_LL44: _tmp86=_tmp81.f1;
+ if(*((int*)_tmp86)!= 1)goto _LL46;_tmp87=((struct Cyc_SO_timeval_struct*)_tmp86)->f1;
+ _tmp88=_tmp81.f2;if(*((int*)_tmp88)!= 3)goto _LL46;_tmp89=((struct Cyc_SO_socklen_struct*)
+ _tmp88)->f1;_LL45: return setsockopt_timeval(fd,level,optname,(const struct Cyc_timeval*)
+ _tmp87,_tmp89);_LL46:;_LL47:(int)_throw((void*)Cyc_SocketError);_LL41:;}}struct
+ Cyc_stat{unsigned long long st_dev;unsigned short __pad1;unsigned int st_ino;
+ unsigned int st_mode;unsigned int st_nlink;unsigned int st_uid;unsigned int st_gid;
+ unsigned long long st_rdev;unsigned short __pad2;int st_size;int st_blksize;int
+ st_blocks;int st_atime;unsigned int __unused1;int st_mtime;unsigned int __unused2;
+ int st_ctime;unsigned int __unused3;unsigned int __unused4;unsigned int __unused5;};
+ struct Cyc_timezone{int tz_minuteswest;int tz_dsttime;};enum Cyc___itimer_which{Cyc_ITIMER_REAL
+  = 0,Cyc_ITIMER_VIRTUAL  = 1,Cyc_ITIMER_PROF  = 2};struct Cyc_itimerval{struct Cyc_timeval
+ it_interval;struct Cyc_timeval it_value;};int Cyc_gettimeofday(struct Cyc_timeval*,
+ struct Cyc_timezone*);int select(int,Cyc_fd_set*,Cyc_fd_set*,Cyc_fd_set*,struct Cyc_timeval*);
+ void Cyc_FD_CLR(int,Cyc_fd_set*);int Cyc_FD_ISSET(int,Cyc_fd_set*);void Cyc_FD_SET(
+ int,Cyc_fd_set*);void Cyc_FD_ZERO(Cyc_fd_set*);int gettimeofday(struct Cyc_timeval*,
+ struct Cyc_timezone*);int Cyc_gettimeofday(struct Cyc_timeval*a,struct Cyc_timezone*
+ b){return gettimeofday(a,0);}struct Cyc_timeb{int time;unsigned short millitm;short
+ timezone;short dstflag;};struct Cyc_tms{int tms_utime;int tms_stime;int tms_cutime;
+ int tms_cstime;};struct Cyc_sockaddr_un{unsigned short sun_family;char sun_path[108];
+ };struct Cyc_utsname{char sysname[65];char nodename[65];char release[65];char version[
+ 65];char machine[65];char __domainname[65];};struct Cyc_tm{int tm_sec;int tm_min;int
+ tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;int
+ tm_gmtoff;const char*tm_zone;};struct Cyc_itimerspec{struct Cyc_timespec it_interval;
+ struct Cyc_timespec it_value;};unsigned int Cyc_strftime(struct _tagged_arr,
+ unsigned int,struct _tagged_arr,const struct Cyc_tm*);unsigned int strftime(char*,
+ unsigned int,const char*,const struct Cyc_tm*);static char _tmp8B[27]="fgets: buffer insufficient";
+ static struct Cyc_Core_Failure_struct Cyc___strftime_failure={Cyc_Core_Failure,{
+ _tmp8B,_tmp8B,_tmp8B + 27}};unsigned int Cyc_strftime(struct _tagged_arr s,
+ unsigned int maxsize,struct _tagged_arr fmt,const struct Cyc_tm*t){if(maxsize > 
+ _get_arr_size(s,sizeof(char)))(int)_throw((void*)& Cyc___strftime_failure);return
+ strftime((char*)_check_null(_untag_arr(s,sizeof(char),1)),maxsize,(const char*)
+ _check_null(_untag_arr(fmt,sizeof(char),1)),t);}enum Cyc___anonymous_enum_366__{
+ Cyc__PC_LINK_MAX  = 0,Cyc__PC_MAX_CANON  = 1,Cyc__PC_MAX_INPUT  = 2,Cyc__PC_NAME_MAX
+  = 3,Cyc__PC_PATH_MAX  = 4,Cyc__PC_PIPE_BUF  = 5,Cyc__PC_CHOWN_RESTRICTED  = 6,Cyc__PC_NO_TRUNC
+  = 7,Cyc__PC_VDISABLE  = 8,Cyc__PC_SYNC_IO  = 9,Cyc__PC_ASYNC_IO  = 10,Cyc__PC_PRIO_IO
+  = 11,Cyc__PC_SOCK_MAXBUF  = 12,Cyc__PC_FILESIZEBITS  = 13,Cyc__PC_REC_INCR_XFER_SIZE
+  = 14,Cyc__PC_REC_MAX_XFER_SIZE  = 15,Cyc__PC_REC_MIN_XFER_SIZE  = 16,Cyc__PC_REC_XFER_ALIGN
+  = 17,Cyc__PC_ALLOC_SIZE_MIN  = 18,Cyc__PC_SYMLINK_MAX  = 19};enum Cyc___anonymous_enum_368__{
+ Cyc__CS_PATH  = 0,Cyc__CS_V6_WIDTH_RESTRICTED_ENVS  = 1};struct Cyc_option{struct
+ _tagged_arr name;int has_arg;int*flag;int val;};int Cyc_execlp(const char*,const char*,
+ struct _tagged_arr);int execvp(const char*file,const char**argv);struct _tagged_arr
+ Cyc_getcwd(struct _tagged_arr buf,unsigned int size);int Cyc_gethostname(struct
+ _tagged_arr,unsigned int);int Cyc_read(int,struct _tagged_arr,unsigned int);int Cyc_write(
+ int,struct _tagged_arr,unsigned int);static char _tmp8D[36]="execlp arg list not NULL-terminated";
+ static struct Cyc_Core_Failure_struct Cyc___execlp_failure={Cyc_Core_Failure,{
+ _tmp8D,_tmp8D,_tmp8D + 36}};int Cyc_execlp(const char*path,const char*arg0,struct
+ _tagged_arr argv){if(*((const char**)_check_unknown_subscript(argv,sizeof(const
+ char*),(int)(_get_arr_size(argv,sizeof(const char*))- 1)))!= (const char*)0)(int)
+ _throw((void*)& Cyc___execlp_failure);{const char**newargs=(const char**)_untag_arr(({
+ unsigned int _tmp96=_get_arr_size(argv,sizeof(const char*));const char**_tmp97=(
+ const char**)_cycalloc(_check_times(sizeof(const char*),_tmp96 + 1));struct
+ _tagged_arr _tmp99=_tag_arr(_tmp97,sizeof(const char*),_tmp96 + 1);{unsigned int
+ _tmp98=_tmp96;unsigned int i;for(i=0;i < _tmp98;i ++){_tmp97[i]=(const char*)0;}
+ _tmp97[_tmp98]=(const char*)0;}_tmp99;}),sizeof(const char*),1);({struct
+ _tagged_arr _tmp8F=_tagged_arr_plus(({const char**_tmp8E=newargs;_tag_arr(_tmp8E,
+ sizeof(const char*),_get_zero_arr_size(_tmp8E,1));}),sizeof(const char*),0);const
+ char*_tmp90=*((const char**)_check_unknown_subscript(_tmp8F,sizeof(const char*),0));
+ const char*_tmp91=(const char*)arg0;if(_get_arr_size(_tmp8F,sizeof(const char*))== 
+ 1?_tmp90 == 0?_tmp91 != 0: 0: 0)_throw_arraybounds();*((const char**)_tmp8F.curr)=
+ _tmp91;});{int i=0;for(0;i < _get_arr_size(argv,sizeof(const char*))- 1;i ++){({
+ struct _tagged_arr _tmp93=_tagged_arr_plus(({const char**_tmp92=newargs;_tag_arr(
+ _tmp92,sizeof(const char*),_get_zero_arr_size(_tmp92,1));}),sizeof(const char*),i + 
+ 1);const char*_tmp94=*((const char**)_check_unknown_subscript(_tmp93,sizeof(const
+ char*),0));const char*_tmp95=*((const char**)_check_unknown_subscript(argv,sizeof(
+ const char*),i));if(_get_arr_size(_tmp93,sizeof(const char*))== 1?_tmp94 == 0?
+ _tmp95 != 0: 0: 0)_throw_arraybounds();*((const char**)_tmp93.curr)=_tmp95;});}}
+ return execvp(path,(const char**)newargs);}}char*getcwd(char*buf,unsigned int size);
+ static char _tmp9B[29]="getcwd: invalid buf argument";static struct Cyc_Core_Failure_struct
+ Cyc___getcwd_failure={Cyc_Core_Failure,{_tmp9B,_tmp9B,_tmp9B + 29}};struct
+ _tagged_arr Cyc_getcwd(struct _tagged_arr buf,unsigned int size){if(_get_arr_size(
+ buf,sizeof(char))< size)(int)_throw((void*)& Cyc___getcwd_failure);{char*_tmp9C=
+ getcwd((char*)_check_null(_untag_arr(buf,sizeof(char),1)),size);return(
+ unsigned int)_tmp9C?buf: _tag_arr(0,0,0);}}int gethostname(char*,unsigned int);
+ static char _tmp9E[34]="gethostname: called with NULL buf";static struct Cyc_Core_Failure_struct
+ Cyc___gethostname_failure_1={Cyc_Core_Failure,{_tmp9E,_tmp9E,_tmp9E + 34}};static
+ char _tmpA0[42]="gethostname: called with count > buf.size";static struct Cyc_Core_Failure_struct
+ Cyc___gethostname_failure_2={Cyc_Core_Failure,{_tmpA0,_tmpA0,_tmpA0 + 42}};int Cyc_gethostname(
+ struct _tagged_arr buf,unsigned int count){if(!((unsigned int)buf.curr))(int)_throw((
+ void*)& Cyc___gethostname_failure_1);else{if(count > _get_arr_size(buf,sizeof(char)))(
+ int)_throw((void*)& Cyc___gethostname_failure_2);return gethostname((char*)
+ _untag_arr(buf,sizeof(char),1),count);}}int read(int fd,char*buf,unsigned int count);
+ static char _tmpA2[35]="read: called with count > buf.size";static struct Cyc_Core_Failure_struct
+ Cyc___read_failure={Cyc_Core_Failure,{_tmpA2,_tmpA2,_tmpA2 + 35}};int Cyc_read(int
+ fd,struct _tagged_arr buf,unsigned int count){if(count > _get_arr_size(buf,sizeof(
+ char)))(int)_throw((void*)& Cyc___read_failure);return read(fd,(char*)_check_null(
+ _untag_arr(buf,sizeof(char),1)),count);}int write(int fd,const char*buf,
+ unsigned int count);static char _tmpA4[36]="write: called with count > buf.size";
+ static struct Cyc_Core_Failure_struct Cyc___write_failure={Cyc_Core_Failure,{_tmpA4,
+ _tmpA4,_tmpA4 + 36}};int Cyc_write(int fd,struct _tagged_arr buf,unsigned int count){
+ if(count > _get_arr_size(buf,sizeof(char)))(int)_throw((void*)& Cyc___write_failure);
+ return write(fd,(const char*)_untag_arr(buf,sizeof(char),1),count);}struct Cyc_utimbuf{
+ int actime;int modtime;};
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/cycstubs.c.rej powerpc-apple-rhapsody/lib/cycstubs.c.rej
*** i686-unknown-linux/lib/cycstubs.c.rej	Wed Dec 31 19:00:00 1969
--- powerpc-apple-rhapsody/lib/cycstubs.c.rej	Thu Jun 27 17:35:18 2002
***************
*** 0 ****
--- 1,528 ----
+ ***************
+ *** 704,774 ****
+   struct Cyc___cycFILE*Cyc_file_open(struct _tagged_arr fname,struct _tagged_arr mode){
+   struct Cyc___cycFILE*f=Cyc_fopen((const char*)_untag_arr(fname,sizeof(char),1),(
+   const char*)_untag_arr(mode,sizeof(char),1));if(f == 0){struct _tagged_arr fn=({
+ ! unsigned int _tmp3A=_get_arr_size(fname,sizeof(char));char*_tmp3B=(char*)
+ ! _cycalloc_atomic(_check_times(sizeof(char),_tmp3A + 1));struct _tagged_arr _tmp3D=
+ ! _tag_arr(_tmp3B,sizeof(char),_tmp3A + 1);{unsigned int _tmp3C=_tmp3A;unsigned int i;
+ ! for(i=0;i < _tmp3C;i ++){_tmp3B[i]=((const char*)fname.curr)[(int)i];}_tmp3B[_tmp3C]=(
+ ! char)0;}_tmp3D;});(int)_throw((void*)({struct Cyc_FileOpenError_struct*_tmp38=
+ ! _cycalloc(sizeof(*_tmp38));_tmp38[0]=({struct Cyc_FileOpenError_struct _tmp39;
+ ! _tmp39.tag=Cyc_FileOpenError;_tmp39.f1=fn;_tmp39;});_tmp38;}));}return(struct Cyc___cycFILE*)
+   _check_null(f);}void Cyc_file_close(struct Cyc___cycFILE*f){if(Cyc_fclose(f)!= 0)(
+   int)_throw((void*)Cyc_FileCloseError);}typedef struct{int quot;int rem;}Cyc_div_t;
+   typedef struct{int quot;int rem;}Cyc_ldiv_t;void*abort();void exit(int);void Cyc_free(
+   struct _tagged_arr);void Cyc_qsort(struct _tagged_arr,unsigned int,unsigned int,int(*)(
+   const void*,const void*));void Cyc_free(struct _tagged_arr ptr){;}void qsort(void*,
+ ! unsigned int,unsigned int,int(*)(const void*,const void*));static char _tmp3F[23]="qsort called with NULL";
+   static struct Cyc_Core_Failure_struct Cyc___qsort_failure_1={Cyc_Core_Failure,{
+ ! _tmp3F,_tmp3F,_tmp3F + 23}};static char _tmp41[42]="qsort called with insufficient array size";
+   static struct Cyc_Core_Failure_struct Cyc___qsort_failure_2={Cyc_Core_Failure,{
+ ! _tmp41,_tmp41,_tmp41 + 42}};void Cyc_qsort(struct _tagged_arr tab,unsigned int nmemb,
+   unsigned int szmemb,int(*compar)(const void*,const void*)){if(!((unsigned int)tab.curr))(
+   int)_throw((void*)& Cyc___qsort_failure_1);if(_get_arr_size(tab,sizeof(void))< 
+   nmemb)(int)_throw((void*)& Cyc___qsort_failure_2);qsort((void*)_untag_arr(tab,
+ ! sizeof(void),1),nmemb,(unsigned int)szmemb,compar);}struct Cyc_ipc_perm{int __key;
+ ! unsigned int uid;unsigned int gid;unsigned int cuid;unsigned int cgid;unsigned short
+ ! mode;unsigned short __pad1;unsigned short __seq;unsigned short __pad2;unsigned int
+ ! __unused1;unsigned int __unused2;};struct _tagged_arr Cyc_mmap(struct _tagged_arr,
+ ! unsigned int length,int prot,int flags,int fd,int offset);int Cyc_munmap(struct
+ ! _tagged_arr start,unsigned int length);char*__stub_mmap(char*start,unsigned int
+ ! length,int prot,int flags,int fd,int offset);int munmap(const char*start,unsigned int
+ ! length);static char _tmp43[42]="mmap called with illegal start/prot/flags";static
+ ! struct Cyc_Core_Failure_struct Cyc___mmap_failure={Cyc_Core_Failure,{_tmp43,_tmp43,
+ ! _tmp43 + 42}};struct _tagged_arr Cyc_mmap(struct _tagged_arr ignored,unsigned int
+ ! length,int prot,int flags,int fd,int offset){if((ignored.curr == (_tag_arr(0,0,0)).curr?
+ ! prot == 1: 0)?flags == 2?1: flags == 1: 0)return(struct _tagged_arr)
+ ! wrap_Cbuffer_as_buffer(__stub_mmap(0,length,prot,flags,fd,offset),length);else{(
+ ! int)_throw((void*)& Cyc___mmap_failure);}}int Cyc_munmap(struct _tagged_arr start,
+ ! unsigned int length){return munmap((const char*)_check_null(_untag_arr(start,
+ ! sizeof(char),1)),length);}struct Cyc_timeval{int tv_sec;int tv_usec;};struct Cyc_rlimit{
+ ! unsigned int rlim_cur;unsigned int rlim_max;};enum Cyc___rusage_who{Cyc_RUSAGE_SELF
+ !  = 0,Cyc_RUSAGE_CHILDREN  = -1,Cyc_RUSAGE_BOTH  = -2};struct Cyc_rusage{struct Cyc_timeval
+ ! ru_utime;struct Cyc_timeval ru_stime;int ru_maxrss;int ru_ixrss;int ru_idrss;int
+ ! ru_isrss;int ru_minflt;int ru_majflt;int ru_nswap;int ru_inblock;int ru_oublock;int
+ ! ru_msgsnd;int ru_msgrcv;int ru_nsignals;int ru_nvcsw;int ru_nivcsw;};enum Cyc___priority_which{
+ ! Cyc_PRIO_PROCESS  = 0,Cyc_PRIO_PGRP  = 1,Cyc_PRIO_USER  = 2};struct Cyc_timespec{int
+ ! tv_sec;int tv_nsec;};typedef struct{int __fds_bits[1024 / (8 * sizeof(int))];}Cyc_fd_set;
+ ! int select(int,Cyc_fd_set*,Cyc_fd_set*,Cyc_fd_set*,struct Cyc_timeval*);void Cyc_FD_CLR(
+ ! int,Cyc_fd_set*);int Cyc_FD_ISSET(int,Cyc_fd_set*);void Cyc_FD_SET(int,Cyc_fd_set*);
+ ! void Cyc_FD_ZERO(Cyc_fd_set*);void __stub_FD_CLR(int,Cyc_fd_set*);int
+ ! __stub_FD_ISSET(int,Cyc_fd_set*);void __stub_FD_SET(int,Cyc_fd_set*);void
+ ! __stub_FD_ZERO(Cyc_fd_set*);void Cyc_FD_CLR(int a,Cyc_fd_set*b){return
+ ! __stub_FD_CLR(a,b);}int Cyc_FD_ISSET(int a,Cyc_fd_set*b){return __stub_FD_ISSET(a,b);}
+ ! void Cyc_FD_SET(int a,Cyc_fd_set*b){return __stub_FD_SET(a,b);}void Cyc_FD_ZERO(Cyc_fd_set*
+ ! a){return __stub_FD_ZERO(a);}enum Cyc___socket_type{Cyc_SOCK_STREAM  = 1,Cyc_SOCK_DGRAM
+ !  = 2,Cyc_SOCK_RAW  = 3,Cyc_SOCK_RDM  = 4,Cyc_SOCK_SEQPACKET  = 5,Cyc_SOCK_PACKET  = 
+ ! 10};enum Cyc___anonymous_enum_270__{Cyc_MSG_OOB  = 1,Cyc_MSG_PEEK  = 2,Cyc_MSG_DONTROUTE
+ !  = 4,Cyc_MSG_CTRUNC  = 8,Cyc_MSG_PROXY  = 16,Cyc_MSG_TRUNC  = 32,Cyc_MSG_DONTWAIT
+ !  = 64,Cyc_MSG_EOR  = 128,Cyc_MSG_WAITALL  = 256,Cyc_MSG_FIN  = 512,Cyc_MSG_SYN  = 
+ ! 1024,Cyc_MSG_CONFIRM  = 2048,Cyc_MSG_RST  = 4096,Cyc_MSG_ERRQUEUE  = 8192,Cyc_MSG_NOSIGNAL
+ !  = 16384,Cyc_MSG_MORE  = 32768};struct Cyc_cmsghdr{unsigned int cmsg_len;int
+ ! cmsg_level;int cmsg_type;unsigned char __cmsg_data[0];};enum Cyc___anonymous_enum_271__{
+ ! Cyc_SCM_RIGHTS  = 1,Cyc_SCM_CREDENTIALS  = 2,Cyc___SCM_CONNECT  = 3};struct Cyc_linger{
+ ! int l_onoff;int l_linger;};enum Cyc___anonymous_enum_272__{Cyc_SHUT_RD  = 0,Cyc_SHUT_WR
+ !  = 1,Cyc_SHUT_RDWR  = 2};struct Cyc_SA_sockaddr_in_struct{int tag;struct Cyc_sockaddr_in*
+ ! f1;};struct Cyc_SA_socklenptr_struct{int tag;unsigned int*f1;};struct Cyc_SA_socklen_struct{
+ ! int tag;unsigned int f1;};struct Cyc_SO_int_struct{int tag;int*f1;};struct Cyc_SO_timeval_struct{
+ ! int tag;struct Cyc_timeval*f1;};struct Cyc_SO_socklenptr_struct{int tag;unsigned int*
+ ! f1;};struct Cyc_SO_socklen_struct{int tag;unsigned int f1;};int Cyc_accept(int fd,
+   struct _tagged_arr);int Cyc_bind(int fd,struct _tagged_arr);int Cyc_connect(int fd,
+   struct _tagged_arr);int Cyc_getpeername(int fd,struct _tagged_arr);int Cyc_getsockname(
+   int fd,struct _tagged_arr);int Cyc_getsockopt(int fd,int level,int optname,struct
+ --- 647,705 ----
+   struct Cyc___cycFILE*Cyc_file_open(struct _tagged_arr fname,struct _tagged_arr mode){
+   struct Cyc___cycFILE*f=Cyc_fopen((const char*)_untag_arr(fname,sizeof(char),1),(
+   const char*)_untag_arr(mode,sizeof(char),1));if(f == 0){struct _tagged_arr fn=({
+ ! unsigned int _tmp31=_get_arr_size(fname,sizeof(char));char*_tmp32=(char*)
+ ! _cycalloc_atomic(_check_times(sizeof(char),_tmp31 + 1));struct _tagged_arr _tmp34=
+ ! _tag_arr(_tmp32,sizeof(char),_tmp31 + 1);{unsigned int _tmp33=_tmp31;unsigned int i;
+ ! for(i=0;i < _tmp33;i ++){_tmp32[i]=((const char*)fname.curr)[(int)i];}_tmp32[_tmp33]=(
+ ! char)0;}_tmp34;});(int)_throw((void*)({struct Cyc_FileOpenError_struct*_tmp2F=
+ ! _cycalloc(sizeof(*_tmp2F));_tmp2F[0]=({struct Cyc_FileOpenError_struct _tmp30;
+ ! _tmp30.tag=Cyc_FileOpenError;_tmp30.f1=fn;_tmp30;});_tmp2F;}));}return(struct Cyc___cycFILE*)
+   _check_null(f);}void Cyc_file_close(struct Cyc___cycFILE*f){if(Cyc_fclose(f)!= 0)(
+   int)_throw((void*)Cyc_FileCloseError);}typedef struct{int quot;int rem;}Cyc_div_t;
+   typedef struct{int quot;int rem;}Cyc_ldiv_t;void*abort();void exit(int);void Cyc_free(
+   struct _tagged_arr);void Cyc_qsort(struct _tagged_arr,unsigned int,unsigned int,int(*)(
+   const void*,const void*));void Cyc_free(struct _tagged_arr ptr){;}void qsort(void*,
+ ! unsigned int,unsigned int,int(*)(const void*,const void*));static char _tmp36[23]="qsort called with NULL";
+   static struct Cyc_Core_Failure_struct Cyc___qsort_failure_1={Cyc_Core_Failure,{
+ ! _tmp36,_tmp36,_tmp36 + 23}};static char _tmp38[42]="qsort called with insufficient array size";
+   static struct Cyc_Core_Failure_struct Cyc___qsort_failure_2={Cyc_Core_Failure,{
+ ! _tmp38,_tmp38,_tmp38 + 42}};void Cyc_qsort(struct _tagged_arr tab,unsigned int nmemb,
+   unsigned int szmemb,int(*compar)(const void*,const void*)){if(!((unsigned int)tab.curr))(
+   int)_throw((void*)& Cyc___qsort_failure_1);if(_get_arr_size(tab,sizeof(void))< 
+   nmemb)(int)_throw((void*)& Cyc___qsort_failure_2);qsort((void*)_untag_arr(tab,
+ ! sizeof(void),1),nmemb,(unsigned int)szmemb,compar);}struct Cyc_ipc_perm{
+ ! unsigned short cuid;unsigned short cgid;unsigned short uid;unsigned short gid;
+ ! unsigned short mode;unsigned short seq;int key;};struct _tagged_arr Cyc_mmap(struct
+ ! _tagged_arr,unsigned int length,int prot,int flags,int fd,long long offset);int Cyc_munmap(
+ ! struct _tagged_arr start,unsigned int length);char*__stub_mmap(char*start,
+ ! unsigned int length,int prot,int flags,int fd,long long offset);int munmap(const char*
+ ! start,unsigned int length);static char _tmp3A[42]="mmap called with illegal start/prot/flags";
+ ! static struct Cyc_Core_Failure_struct Cyc___mmap_failure={Cyc_Core_Failure,{_tmp3A,
+ ! _tmp3A,_tmp3A + 42}};struct _tagged_arr Cyc_mmap(struct _tagged_arr ignored,
+ ! unsigned int length,int prot,int flags,int fd,long long offset){if((ignored.curr == (
+ ! _tag_arr(0,0,0)).curr?prot == 1: 0)?flags == 2?1: flags == 1: 0)return(struct
+ ! _tagged_arr)wrap_Cbuffer_as_buffer(__stub_mmap(0,length,prot,flags,fd,offset),
+ ! length);else{(int)_throw((void*)& Cyc___mmap_failure);}}int Cyc_munmap(struct
+ ! _tagged_arr start,unsigned int length){return munmap((const char*)_check_null(
+ ! _untag_arr(start,sizeof(char),1)),length);}struct Cyc_timeval{int tv_sec;int
+ ! tv_usec;};struct Cyc_rusage{struct Cyc_timeval ru_utime;struct Cyc_timeval ru_stime;
+ ! int ru_maxrss;int ru_ixrss;int ru_idrss;int ru_isrss;int ru_minflt;int ru_majflt;int
+ ! ru_nswap;int ru_inblock;int ru_oublock;int ru_msgsnd;int ru_msgrcv;int ru_nsignals;
+ ! int ru_nvcsw;int ru_nivcsw;};struct Cyc_rlimit{long long rlim_cur;long long rlim_max;
+ ! };struct Cyc_fd_set{int fds_bits[(1024 + (sizeof(int)* 8 - 1))/ (sizeof(int)* 8)];};
+ ! struct Cyc_timespec{int tv_sec;int tv_nsec;};void Cyc_FD_CLR(int,struct Cyc_fd_set*);
+ ! int Cyc_FD_ISSET(int,struct Cyc_fd_set*);void Cyc_FD_SET(int,struct Cyc_fd_set*);
+ ! void Cyc_FD_ZERO(struct Cyc_fd_set*);void __stub_FD_CLR(int,struct Cyc_fd_set*);int
+ ! __stub_FD_ISSET(int,struct Cyc_fd_set*);void __stub_FD_SET(int,struct Cyc_fd_set*);
+ ! void __stub_FD_ZERO(struct Cyc_fd_set*);void Cyc_FD_CLR(int a,struct Cyc_fd_set*b){
+ ! return __stub_FD_CLR(a,b);}int Cyc_FD_ISSET(int a,struct Cyc_fd_set*b){return
+ ! __stub_FD_ISSET(a,b);}void Cyc_FD_SET(int a,struct Cyc_fd_set*b){return
+ ! __stub_FD_SET(a,b);}void Cyc_FD_ZERO(struct Cyc_fd_set*a){return __stub_FD_ZERO(a);}
+ ! struct Cyc_cmsghdr;struct Cyc_linger{int l_onoff;int l_linger;};struct Cyc_SA_sockaddr_in_struct{
+ ! int tag;struct Cyc_sockaddr_in*f1;};struct Cyc_SA_socklenptr_struct{int tag;int*f1;}
+ ! ;struct Cyc_SA_socklen_struct{int tag;int f1;};struct Cyc_SO_int_struct{int tag;int*
+ ! f1;};struct Cyc_SO_timeval_struct{int tag;struct Cyc_timeval*f1;};struct Cyc_SO_socklenptr_struct{
+ ! int tag;int*f1;};struct Cyc_SO_socklen_struct{int tag;int f1;};int Cyc_accept(int fd,
+   struct _tagged_arr);int Cyc_bind(int fd,struct _tagged_arr);int Cyc_connect(int fd,
+   struct _tagged_arr);int Cyc_getpeername(int fd,struct _tagged_arr);int Cyc_getsockname(
+   int fd,struct _tagged_arr);int Cyc_getsockopt(int fd,int level,int optname,struct
+ ***************
+ *** 777,980 ****
+   int Cyc_send(int fd,struct _tagged_arr buf,unsigned int n,int flags);int Cyc_sendto(int
+   fd,struct _tagged_arr buf,unsigned int n,int flags,struct _tagged_arr);int Cyc_setsockopt(
+   int fd,int level,int optname,struct _tagged_arr);char Cyc_SocketError[16]="\000\000\000\000SocketError\000";
+ ! int accept_in(int,const struct Cyc_sockaddr_in*,unsigned int*);struct _tuple0{void*
+ ! f1;void*f2;};int Cyc_accept(int fd,struct _tagged_arr ap){if(_get_arr_size(ap,
+ ! sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp45=({
+ ! struct _tuple0 _tmp44;_tmp44.f1=*((void**)_check_unknown_subscript(ap,sizeof(void*),
+ ! 0));_tmp44.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),1));_tmp44;});
+ ! void*_tmp46;struct Cyc_sockaddr_in*_tmp47;void*_tmp48;unsigned int*_tmp49;_LL14:
+ ! _tmp46=_tmp45.f1;if(*((int*)_tmp46)!= 0)goto _LL16;_tmp47=((struct Cyc_SA_sockaddr_in_struct*)
+ ! _tmp46)->f1;_tmp48=_tmp45.f2;if(*((int*)_tmp48)!= 1)goto _LL16;_tmp49=((struct Cyc_SA_socklenptr_struct*)
+ ! _tmp48)->f1;_LL15: return accept_in(fd,(const struct Cyc_sockaddr_in*)_tmp47,_tmp49);
+ ! _LL16:;_LL17:(int)_throw((void*)Cyc_SocketError);_LL13:;}}int bind_in(int,const
+ ! struct Cyc_sockaddr_in*,unsigned int);int Cyc_bind(int fd,struct _tagged_arr ap){if(
+   _get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct
+ ! _tuple0 _tmp4B=({struct _tuple0 _tmp4A;_tmp4A.f1=*((void**)_check_unknown_subscript(
+ ! ap,sizeof(void*),0));_tmp4A.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),
+ ! 1));_tmp4A;});void*_tmp4C;struct Cyc_sockaddr_in*_tmp4D;void*_tmp4E;unsigned int
+ ! _tmp4F;_LL19: _tmp4C=_tmp4B.f1;if(*((int*)_tmp4C)!= 0)goto _LL1B;_tmp4D=((struct
+ ! Cyc_SA_sockaddr_in_struct*)_tmp4C)->f1;_tmp4E=_tmp4B.f2;if(*((int*)_tmp4E)!= 2)
+ ! goto _LL1B;_tmp4F=((struct Cyc_SA_socklen_struct*)_tmp4E)->f1;_LL1A: return bind_in(
+ ! fd,(const struct Cyc_sockaddr_in*)_tmp4D,_tmp4F);_LL1B:;_LL1C:(int)_throw((void*)
+ ! Cyc_SocketError);_LL18:;}}int connect_in(int,const struct Cyc_sockaddr_in*,
+ ! unsigned int);int Cyc_connect(int fd,struct _tagged_arr ap){if(_get_arr_size(ap,
+ ! sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp51=({
+ ! struct _tuple0 _tmp50;_tmp50.f1=*((void**)_check_unknown_subscript(ap,sizeof(void*),
+ ! 0));_tmp50.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),1));_tmp50;});
+ ! void*_tmp52;struct Cyc_sockaddr_in*_tmp53;void*_tmp54;unsigned int _tmp55;_LL1E:
+ ! _tmp52=_tmp51.f1;if(*((int*)_tmp52)!= 0)goto _LL20;_tmp53=((struct Cyc_SA_sockaddr_in_struct*)
+ ! _tmp52)->f1;_tmp54=_tmp51.f2;if(*((int*)_tmp54)!= 2)goto _LL20;_tmp55=((struct Cyc_SA_socklen_struct*)
+ ! _tmp54)->f1;_LL1F: return connect_in(fd,(const struct Cyc_sockaddr_in*)_tmp53,_tmp55);
+ ! _LL20:;_LL21:(int)_throw((void*)Cyc_SocketError);_LL1D:;}}int getpeername_in(int,
+ ! const struct Cyc_sockaddr_in*,unsigned int*);int Cyc_getpeername(int fd,struct
+ ! _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
+ ! struct _tuple0 _tmp57=({struct _tuple0 _tmp56;_tmp56.f1=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),0));_tmp56.f2=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),1));_tmp56;});void*_tmp58;struct Cyc_sockaddr_in*
+ ! _tmp59;void*_tmp5A;unsigned int*_tmp5B;_LL23: _tmp58=_tmp57.f1;if(*((int*)_tmp58)
+ ! != 0)goto _LL25;_tmp59=((struct Cyc_SA_sockaddr_in_struct*)_tmp58)->f1;_tmp5A=
+ ! _tmp57.f2;if(*((int*)_tmp5A)!= 1)goto _LL25;_tmp5B=((struct Cyc_SA_socklenptr_struct*)
+ ! _tmp5A)->f1;_LL24: return getpeername_in(fd,(const struct Cyc_sockaddr_in*)_tmp59,
+ ! _tmp5B);_LL25:;_LL26:(int)_throw((void*)Cyc_SocketError);_LL22:;}}int
+ ! getsockname_in(int,const struct Cyc_sockaddr_in*,unsigned int*);int Cyc_getsockname(
+ ! int fd,struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((
+ ! void*)Cyc_SocketError);{struct _tuple0 _tmp5D=({struct _tuple0 _tmp5C;_tmp5C.f1=*((
+ ! void**)_check_unknown_subscript(ap,sizeof(void*),0));_tmp5C.f2=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),1));_tmp5C;});void*_tmp5E;struct Cyc_sockaddr_in*
+ ! _tmp5F;void*_tmp60;unsigned int*_tmp61;_LL28: _tmp5E=_tmp5D.f1;if(*((int*)_tmp5E)
+ ! != 0)goto _LL2A;_tmp5F=((struct Cyc_SA_sockaddr_in_struct*)_tmp5E)->f1;_tmp60=
+ ! _tmp5D.f2;if(*((int*)_tmp60)!= 1)goto _LL2A;_tmp61=((struct Cyc_SA_socklenptr_struct*)
+ ! _tmp60)->f1;_LL29: return getsockname_in(fd,(const struct Cyc_sockaddr_in*)_tmp5F,
+ ! _tmp61);_LL2A:;_LL2B:(int)_throw((void*)Cyc_SocketError);_LL27:;}}int
+ ! getsockopt_int(int,int,int,int*,unsigned int*);int getsockopt_timeval(int,int,int,
+ ! struct Cyc_timeval*,unsigned int*);int Cyc_getsockopt(int fd,int level,int optname,
+ ! struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)
+ ! Cyc_SocketError);{struct _tuple0 _tmp63=({struct _tuple0 _tmp62;_tmp62.f1=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),0));_tmp62.f2=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),1));_tmp62;});void*_tmp64;int*_tmp65;
+ ! void*_tmp66;unsigned int*_tmp67;void*_tmp68;int*_tmp69;void*_tmp6A;int*_tmp6B;
+ ! void*_tmp6C;struct Cyc_timeval*_tmp6D;void*_tmp6E;unsigned int*_tmp6F;void*_tmp70;
+ ! struct Cyc_timeval*_tmp71;void*_tmp72;int*_tmp73;_LL2D: _tmp64=_tmp63.f1;if(*((int*)
+ ! _tmp64)!= 0)goto _LL2F;_tmp65=((struct Cyc_SO_int_struct*)_tmp64)->f1;_tmp66=
+ ! _tmp63.f2;if(*((int*)_tmp66)!= 2)goto _LL2F;_tmp67=((struct Cyc_SO_socklenptr_struct*)
+ ! _tmp66)->f1;_LL2E: return getsockopt_int(fd,level,optname,_tmp65,_tmp67);_LL2F:
+ ! _tmp68=_tmp63.f1;if(*((int*)_tmp68)!= 0)goto _LL31;_tmp69=((struct Cyc_SO_int_struct*)
+ ! _tmp68)->f1;_tmp6A=_tmp63.f2;if(*((int*)_tmp6A)!= 0)goto _LL31;_tmp6B=((struct Cyc_SO_int_struct*)
+ ! _tmp6A)->f1;_LL30: return getsockopt_int(fd,level,optname,_tmp69,(unsigned int*)
+ ! _tmp6B);_LL31: _tmp6C=_tmp63.f1;if(*((int*)_tmp6C)!= 1)goto _LL33;_tmp6D=((struct
+ ! Cyc_SO_timeval_struct*)_tmp6C)->f1;_tmp6E=_tmp63.f2;if(*((int*)_tmp6E)!= 2)goto
+ ! _LL33;_tmp6F=((struct Cyc_SO_socklenptr_struct*)_tmp6E)->f1;_LL32: return
+ ! getsockopt_timeval(fd,level,optname,_tmp6D,_tmp6F);_LL33: _tmp70=_tmp63.f1;if(*((
+ ! int*)_tmp70)!= 1)goto _LL35;_tmp71=((struct Cyc_SO_timeval_struct*)_tmp70)->f1;
+ ! _tmp72=_tmp63.f2;if(*((int*)_tmp72)!= 0)goto _LL35;_tmp73=((struct Cyc_SO_int_struct*)
+ ! _tmp72)->f1;_LL34: return getsockopt_timeval(fd,level,optname,_tmp71,(unsigned int*)
+ ! _tmp73);_LL35:;_LL36:(int)_throw((void*)Cyc_SocketError);_LL2C:;}}int
+ ! recv_wrapped(int,struct _tagged_arr,unsigned int,int);int Cyc_recv(int fd,struct
+ ! _tagged_arr buf,unsigned int n,int flags){return recv_wrapped(fd,buf,n,flags);}int
+ ! recvfrom_in(int,struct _tagged_arr,unsigned int,int,const struct Cyc_sockaddr_in*,
+ ! unsigned int*);int Cyc_recvfrom(int fd,struct _tagged_arr buf,unsigned int n,int flags,
+ ! struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)
+ ! Cyc_SocketError);{struct _tuple0 _tmp75=({struct _tuple0 _tmp74;_tmp74.f1=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),0));_tmp74.f2=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),1));_tmp74;});void*_tmp76;struct Cyc_sockaddr_in*
+ ! _tmp77;void*_tmp78;unsigned int*_tmp79;_LL38: _tmp76=_tmp75.f1;if(*((int*)_tmp76)
+ ! != 0)goto _LL3A;_tmp77=((struct Cyc_SA_sockaddr_in_struct*)_tmp76)->f1;_tmp78=
+ ! _tmp75.f2;if(*((int*)_tmp78)!= 1)goto _LL3A;_tmp79=((struct Cyc_SA_socklenptr_struct*)
+ ! _tmp78)->f1;_LL39: return recvfrom_in(fd,buf,n,flags,(const struct Cyc_sockaddr_in*)
+ ! _tmp77,_tmp79);_LL3A:;_LL3B:(int)_throw((void*)Cyc_SocketError);_LL37:;}}int
+   send_wrapped(int,struct _tagged_arr,unsigned int,int);int Cyc_send(int fd,struct
+   _tagged_arr buf,unsigned int n,int flags){return send_wrapped(fd,buf,n,flags);}int
+ ! sendto_in(int,struct _tagged_arr,unsigned int,int,const struct Cyc_sockaddr_in*,
+ ! unsigned int);int Cyc_sendto(int fd,struct _tagged_arr buf,unsigned int n,int flags,
+ ! struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)
+ ! Cyc_SocketError);{struct _tuple0 _tmp7B=({struct _tuple0 _tmp7A;_tmp7A.f1=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),0));_tmp7A.f2=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),1));_tmp7A;});void*_tmp7C;struct Cyc_sockaddr_in*
+ ! _tmp7D;void*_tmp7E;unsigned int _tmp7F;_LL3D: _tmp7C=_tmp7B.f1;if(*((int*)_tmp7C)
+ ! != 0)goto _LL3F;_tmp7D=((struct Cyc_SA_sockaddr_in_struct*)_tmp7C)->f1;_tmp7E=
+ ! _tmp7B.f2;if(*((int*)_tmp7E)!= 2)goto _LL3F;_tmp7F=((struct Cyc_SA_socklen_struct*)
+ ! _tmp7E)->f1;_LL3E: return sendto_in(fd,buf,n,flags,(const struct Cyc_sockaddr_in*)
+ ! _tmp7D,_tmp7F);_LL3F:;_LL40:(int)_throw((void*)Cyc_SocketError);_LL3C:;}}int
+ ! setsockopt_int(int,int,int,const int*,unsigned int);int setsockopt_timeval(int,int,
+ ! int,const struct Cyc_timeval*,unsigned int);int Cyc_setsockopt(int fd,int level,int
+ ! optname,struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((
+ ! void*)Cyc_SocketError);{struct _tuple0 _tmp81=({struct _tuple0 _tmp80;_tmp80.f1=*((
+ ! void**)_check_unknown_subscript(ap,sizeof(void*),0));_tmp80.f2=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),1));_tmp80;});void*_tmp82;int*_tmp83;
+ ! void*_tmp84;unsigned int _tmp85;void*_tmp86;struct Cyc_timeval*_tmp87;void*_tmp88;
+ ! unsigned int _tmp89;_LL42: _tmp82=_tmp81.f1;if(*((int*)_tmp82)!= 0)goto _LL44;
+ ! _tmp83=((struct Cyc_SO_int_struct*)_tmp82)->f1;_tmp84=_tmp81.f2;if(*((int*)_tmp84)
+ ! != 3)goto _LL44;_tmp85=((struct Cyc_SO_socklen_struct*)_tmp84)->f1;_LL43: return
+ ! setsockopt_int(fd,level,optname,(const int*)_tmp83,_tmp85);_LL44: _tmp86=_tmp81.f1;
+ ! if(*((int*)_tmp86)!= 1)goto _LL46;_tmp87=((struct Cyc_SO_timeval_struct*)_tmp86)->f1;
+ ! _tmp88=_tmp81.f2;if(*((int*)_tmp88)!= 3)goto _LL46;_tmp89=((struct Cyc_SO_socklen_struct*)
+ ! _tmp88)->f1;_LL45: return setsockopt_timeval(fd,level,optname,(const struct Cyc_timeval*)
+ ! _tmp87,_tmp89);_LL46:;_LL47:(int)_throw((void*)Cyc_SocketError);_LL41:;}}struct
+ ! Cyc_stat{unsigned long long st_dev;unsigned short __pad1;unsigned int st_ino;
+ ! unsigned int st_mode;unsigned int st_nlink;unsigned int st_uid;unsigned int st_gid;
+ ! unsigned long long st_rdev;unsigned short __pad2;int st_size;int st_blksize;int
+ ! st_blocks;int st_atime;unsigned int __unused1;int st_mtime;unsigned int __unused2;
+ ! int st_ctime;unsigned int __unused3;unsigned int __unused4;unsigned int __unused5;};
+ ! struct Cyc_timezone{int tz_minuteswest;int tz_dsttime;};enum Cyc___itimer_which{Cyc_ITIMER_REAL
+ !  = 0,Cyc_ITIMER_VIRTUAL  = 1,Cyc_ITIMER_PROF  = 2};struct Cyc_itimerval{struct Cyc_timeval
+ ! it_interval;struct Cyc_timeval it_value;};int Cyc_gettimeofday(struct Cyc_timeval*,
+ ! struct Cyc_timezone*);int select(int,Cyc_fd_set*,Cyc_fd_set*,Cyc_fd_set*,struct Cyc_timeval*);
+ ! void Cyc_FD_CLR(int,Cyc_fd_set*);int Cyc_FD_ISSET(int,Cyc_fd_set*);void Cyc_FD_SET(
+ ! int,Cyc_fd_set*);void Cyc_FD_ZERO(Cyc_fd_set*);int gettimeofday(struct Cyc_timeval*,
+ ! struct Cyc_timezone*);int Cyc_gettimeofday(struct Cyc_timeval*a,struct Cyc_timezone*
+ ! b){return gettimeofday(a,0);}struct Cyc_timeb{int time;unsigned short millitm;short
+ ! timezone;short dstflag;};struct Cyc_tms{int tms_utime;int tms_stime;int tms_cutime;
+ ! int tms_cstime;};struct Cyc_sockaddr_un{unsigned short sun_family;char sun_path[108];
+ ! };struct Cyc_utsname{char sysname[65];char nodename[65];char release[65];char version[
+ ! 65];char machine[65];char __domainname[65];};struct Cyc_tm{int tm_sec;int tm_min;int
+ ! tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int tm_isdst;int
+ ! tm_gmtoff;const char*tm_zone;};struct Cyc_itimerspec{struct Cyc_timespec it_interval;
+ ! struct Cyc_timespec it_value;};unsigned int Cyc_strftime(struct _tagged_arr,
+   unsigned int,struct _tagged_arr,const struct Cyc_tm*);unsigned int strftime(char*,
+ ! unsigned int,const char*,const struct Cyc_tm*);static char _tmp8B[27]="fgets: buffer insufficient";
+   static struct Cyc_Core_Failure_struct Cyc___strftime_failure={Cyc_Core_Failure,{
+ ! _tmp8B,_tmp8B,_tmp8B + 27}};unsigned int Cyc_strftime(struct _tagged_arr s,
+   unsigned int maxsize,struct _tagged_arr fmt,const struct Cyc_tm*t){if(maxsize > 
+   _get_arr_size(s,sizeof(char)))(int)_throw((void*)& Cyc___strftime_failure);return
+   strftime((char*)_check_null(_untag_arr(s,sizeof(char),1)),maxsize,(const char*)
+ ! _check_null(_untag_arr(fmt,sizeof(char),1)),t);}enum Cyc___anonymous_enum_366__{
+ ! Cyc__PC_LINK_MAX  = 0,Cyc__PC_MAX_CANON  = 1,Cyc__PC_MAX_INPUT  = 2,Cyc__PC_NAME_MAX
+ !  = 3,Cyc__PC_PATH_MAX  = 4,Cyc__PC_PIPE_BUF  = 5,Cyc__PC_CHOWN_RESTRICTED  = 6,Cyc__PC_NO_TRUNC
+ !  = 7,Cyc__PC_VDISABLE  = 8,Cyc__PC_SYNC_IO  = 9,Cyc__PC_ASYNC_IO  = 10,Cyc__PC_PRIO_IO
+ !  = 11,Cyc__PC_SOCK_MAXBUF  = 12,Cyc__PC_FILESIZEBITS  = 13,Cyc__PC_REC_INCR_XFER_SIZE
+ !  = 14,Cyc__PC_REC_MAX_XFER_SIZE  = 15,Cyc__PC_REC_MIN_XFER_SIZE  = 16,Cyc__PC_REC_XFER_ALIGN
+ !  = 17,Cyc__PC_ALLOC_SIZE_MIN  = 18,Cyc__PC_SYMLINK_MAX  = 19};enum Cyc___anonymous_enum_368__{
+ ! Cyc__CS_PATH  = 0,Cyc__CS_V6_WIDTH_RESTRICTED_ENVS  = 1};struct Cyc_option{struct
+   _tagged_arr name;int has_arg;int*flag;int val;};int Cyc_execlp(const char*,const char*,
+   struct _tagged_arr);int execvp(const char*file,const char**argv);struct _tagged_arr
+   Cyc_getcwd(struct _tagged_arr buf,unsigned int size);int Cyc_gethostname(struct
+   _tagged_arr,unsigned int);int Cyc_read(int,struct _tagged_arr,unsigned int);int Cyc_write(
+ ! int,struct _tagged_arr,unsigned int);static char _tmp8D[36]="execlp arg list not NULL-terminated";
+   static struct Cyc_Core_Failure_struct Cyc___execlp_failure={Cyc_Core_Failure,{
+ ! _tmp8D,_tmp8D,_tmp8D + 36}};int Cyc_execlp(const char*path,const char*arg0,struct
+   _tagged_arr argv){if(*((const char**)_check_unknown_subscript(argv,sizeof(const
+   char*),(int)(_get_arr_size(argv,sizeof(const char*))- 1)))!= (const char*)0)(int)
+   _throw((void*)& Cyc___execlp_failure);{const char**newargs=(const char**)_untag_arr(({
+ ! unsigned int _tmp96=_get_arr_size(argv,sizeof(const char*));const char**_tmp97=(
+ ! const char**)_cycalloc(_check_times(sizeof(const char*),_tmp96 + 1));struct
+ ! _tagged_arr _tmp99=_tag_arr(_tmp97,sizeof(const char*),_tmp96 + 1);{unsigned int
+ ! _tmp98=_tmp96;unsigned int i;for(i=0;i < _tmp98;i ++){_tmp97[i]=(const char*)0;}
+ ! _tmp97[_tmp98]=(const char*)0;}_tmp99;}),sizeof(const char*),1);({struct
+ ! _tagged_arr _tmp8F=_tagged_arr_plus(({const char**_tmp8E=newargs;_tag_arr(_tmp8E,
+ ! sizeof(const char*),_get_zero_arr_size(_tmp8E,1));}),sizeof(const char*),0);const
+ ! char*_tmp90=*((const char**)_check_unknown_subscript(_tmp8F,sizeof(const char*),0));
+ ! const char*_tmp91=(const char*)arg0;if(_get_arr_size(_tmp8F,sizeof(const char*))== 
+ ! 1?_tmp90 == 0?_tmp91 != 0: 0: 0)_throw_arraybounds();*((const char**)_tmp8F.curr)=
+ ! _tmp91;});{int i=0;for(0;i < _get_arr_size(argv,sizeof(const char*))- 1;i ++){({
+ ! struct _tagged_arr _tmp93=_tagged_arr_plus(({const char**_tmp92=newargs;_tag_arr(
+ ! _tmp92,sizeof(const char*),_get_zero_arr_size(_tmp92,1));}),sizeof(const char*),i + 
+ ! 1);const char*_tmp94=*((const char**)_check_unknown_subscript(_tmp93,sizeof(const
+ ! char*),0));const char*_tmp95=*((const char**)_check_unknown_subscript(argv,sizeof(
+ ! const char*),i));if(_get_arr_size(_tmp93,sizeof(const char*))== 1?_tmp94 == 0?
+ ! _tmp95 != 0: 0: 0)_throw_arraybounds();*((const char**)_tmp93.curr)=_tmp95;});}}
+   return execvp(path,(const char**)newargs);}}char*getcwd(char*buf,unsigned int size);
+ ! static char _tmp9B[29]="getcwd: invalid buf argument";static struct Cyc_Core_Failure_struct
+ ! Cyc___getcwd_failure={Cyc_Core_Failure,{_tmp9B,_tmp9B,_tmp9B + 29}};struct
+   _tagged_arr Cyc_getcwd(struct _tagged_arr buf,unsigned int size){if(_get_arr_size(
+ ! buf,sizeof(char))< size)(int)_throw((void*)& Cyc___getcwd_failure);{char*_tmp9C=
+   getcwd((char*)_check_null(_untag_arr(buf,sizeof(char),1)),size);return(
+ ! unsigned int)_tmp9C?buf: _tag_arr(0,0,0);}}int gethostname(char*,unsigned int);
+ ! static char _tmp9E[34]="gethostname: called with NULL buf";static struct Cyc_Core_Failure_struct
+ ! Cyc___gethostname_failure_1={Cyc_Core_Failure,{_tmp9E,_tmp9E,_tmp9E + 34}};static
+ ! char _tmpA0[42]="gethostname: called with count > buf.size";static struct Cyc_Core_Failure_struct
+ ! Cyc___gethostname_failure_2={Cyc_Core_Failure,{_tmpA0,_tmpA0,_tmpA0 + 42}};int Cyc_gethostname(
+   struct _tagged_arr buf,unsigned int count){if(!((unsigned int)buf.curr))(int)_throw((
+   void*)& Cyc___gethostname_failure_1);else{if(count > _get_arr_size(buf,sizeof(char)))(
+   int)_throw((void*)& Cyc___gethostname_failure_2);return gethostname((char*)
+   _untag_arr(buf,sizeof(char),1),count);}}int read(int fd,char*buf,unsigned int count);
+ ! static char _tmpA2[35]="read: called with count > buf.size";static struct Cyc_Core_Failure_struct
+ ! Cyc___read_failure={Cyc_Core_Failure,{_tmpA2,_tmpA2,_tmpA2 + 35}};int Cyc_read(int
+   fd,struct _tagged_arr buf,unsigned int count){if(count > _get_arr_size(buf,sizeof(
+   char)))(int)_throw((void*)& Cyc___read_failure);return read(fd,(char*)_check_null(
+   _untag_arr(buf,sizeof(char),1)),count);}int write(int fd,const char*buf,
+ ! unsigned int count);static char _tmpA4[36]="write: called with count > buf.size";
+ ! static struct Cyc_Core_Failure_struct Cyc___write_failure={Cyc_Core_Failure,{_tmpA4,
+ ! _tmpA4,_tmpA4 + 36}};int Cyc_write(int fd,struct _tagged_arr buf,unsigned int count){
+   if(count > _get_arr_size(buf,sizeof(char)))(int)_throw((void*)& Cyc___write_failure);
+   return write(fd,(const char*)_untag_arr(buf,sizeof(char),1),count);}struct Cyc_utimbuf{
+   int actime;int modtime;};
+ --- 708,895 ----
+   int Cyc_send(int fd,struct _tagged_arr buf,unsigned int n,int flags);int Cyc_sendto(int
+   fd,struct _tagged_arr buf,unsigned int n,int flags,struct _tagged_arr);int Cyc_setsockopt(
+   int fd,int level,int optname,struct _tagged_arr);char Cyc_SocketError[16]="\000\000\000\000SocketError\000";
+ ! int accept_in(int,const struct Cyc_sockaddr_in*,int*);struct _tuple0{void*f1;void*f2;
+ ! };int Cyc_accept(int fd,struct _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 
+ ! 2)(int)_throw((void*)Cyc_SocketError);{struct _tuple0 _tmp3C=({struct _tuple0 _tmp3B;
+ ! _tmp3B.f1=*((void**)_check_unknown_subscript(ap,sizeof(void*),0));_tmp3B.f2=*((
+ ! void**)_check_unknown_subscript(ap,sizeof(void*),1));_tmp3B;});void*_tmp3D;
+ ! struct Cyc_sockaddr_in*_tmp3E;void*_tmp3F;int*_tmp40;_LLF: _tmp3D=_tmp3C.f1;if(*((
+ ! int*)_tmp3D)!= 0)goto _LL11;_tmp3E=((struct Cyc_SA_sockaddr_in_struct*)_tmp3D)->f1;
+ ! _tmp3F=_tmp3C.f2;if(*((int*)_tmp3F)!= 1)goto _LL11;_tmp40=((struct Cyc_SA_socklenptr_struct*)
+ ! _tmp3F)->f1;_LL10: return accept_in(fd,(const struct Cyc_sockaddr_in*)_tmp3E,_tmp40);
+ ! _LL11:;_LL12:(int)_throw((void*)Cyc_SocketError);_LLE:;}}int bind_in(int,const
+ ! struct Cyc_sockaddr_in*,int);int Cyc_bind(int fd,struct _tagged_arr ap){if(
+   _get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct
+ ! _tuple0 _tmp42=({struct _tuple0 _tmp41;_tmp41.f1=*((void**)_check_unknown_subscript(
+ ! ap,sizeof(void*),0));_tmp41.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),
+ ! 1));_tmp41;});void*_tmp43;struct Cyc_sockaddr_in*_tmp44;void*_tmp45;int _tmp46;
+ ! _LL14: _tmp43=_tmp42.f1;if(*((int*)_tmp43)!= 0)goto _LL16;_tmp44=((struct Cyc_SA_sockaddr_in_struct*)
+ ! _tmp43)->f1;_tmp45=_tmp42.f2;if(*((int*)_tmp45)!= 2)goto _LL16;_tmp46=((struct Cyc_SA_socklen_struct*)
+ ! _tmp45)->f1;_LL15: return bind_in(fd,(const struct Cyc_sockaddr_in*)_tmp44,_tmp46);
+ ! _LL16:;_LL17:(int)_throw((void*)Cyc_SocketError);_LL13:;}}int connect_in(int,
+ ! const struct Cyc_sockaddr_in*,int);int Cyc_connect(int fd,struct _tagged_arr ap){if(
+ ! _get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct
+ ! _tuple0 _tmp48=({struct _tuple0 _tmp47;_tmp47.f1=*((void**)_check_unknown_subscript(
+ ! ap,sizeof(void*),0));_tmp47.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),
+ ! 1));_tmp47;});void*_tmp49;struct Cyc_sockaddr_in*_tmp4A;void*_tmp4B;int _tmp4C;
+ ! _LL19: _tmp49=_tmp48.f1;if(*((int*)_tmp49)!= 0)goto _LL1B;_tmp4A=((struct Cyc_SA_sockaddr_in_struct*)
+ ! _tmp49)->f1;_tmp4B=_tmp48.f2;if(*((int*)_tmp4B)!= 2)goto _LL1B;_tmp4C=((struct Cyc_SA_socklen_struct*)
+ ! _tmp4B)->f1;_LL1A: return connect_in(fd,(const struct Cyc_sockaddr_in*)_tmp4A,_tmp4C);
+ ! _LL1B:;_LL1C:(int)_throw((void*)Cyc_SocketError);_LL18:;}}int getpeername_in(int,
+ ! const struct Cyc_sockaddr_in*,int*);int Cyc_getpeername(int fd,struct _tagged_arr ap){
+ ! if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
+ ! struct _tuple0 _tmp4E=({struct _tuple0 _tmp4D;_tmp4D.f1=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),0));_tmp4D.f2=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),1));_tmp4D;});void*_tmp4F;struct Cyc_sockaddr_in*
+ ! _tmp50;void*_tmp51;int*_tmp52;_LL1E: _tmp4F=_tmp4E.f1;if(*((int*)_tmp4F)!= 0)goto
+ ! _LL20;_tmp50=((struct Cyc_SA_sockaddr_in_struct*)_tmp4F)->f1;_tmp51=_tmp4E.f2;if(*((
+ ! int*)_tmp51)!= 1)goto _LL20;_tmp52=((struct Cyc_SA_socklenptr_struct*)_tmp51)->f1;
+ ! _LL1F: return getpeername_in(fd,(const struct Cyc_sockaddr_in*)_tmp50,_tmp52);_LL20:;
+ ! _LL21:(int)_throw((void*)Cyc_SocketError);_LL1D:;}}int getsockname_in(int,const
+ ! struct Cyc_sockaddr_in*,int*);int Cyc_getsockname(int fd,struct _tagged_arr ap){if(
+ ! _get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct
+ ! _tuple0 _tmp54=({struct _tuple0 _tmp53;_tmp53.f1=*((void**)_check_unknown_subscript(
+ ! ap,sizeof(void*),0));_tmp53.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),
+ ! 1));_tmp53;});void*_tmp55;struct Cyc_sockaddr_in*_tmp56;void*_tmp57;int*_tmp58;
+ ! _LL23: _tmp55=_tmp54.f1;if(*((int*)_tmp55)!= 0)goto _LL25;_tmp56=((struct Cyc_SA_sockaddr_in_struct*)
+ ! _tmp55)->f1;_tmp57=_tmp54.f2;if(*((int*)_tmp57)!= 1)goto _LL25;_tmp58=((struct Cyc_SA_socklenptr_struct*)
+ ! _tmp57)->f1;_LL24: return getsockname_in(fd,(const struct Cyc_sockaddr_in*)_tmp56,
+ ! _tmp58);_LL25:;_LL26:(int)_throw((void*)Cyc_SocketError);_LL22:;}}int
+ ! getsockopt_int(int,int,int,int*,int*);int getsockopt_timeval(int,int,int,struct
+ ! Cyc_timeval*,int*);int Cyc_getsockopt(int fd,int level,int optname,struct _tagged_arr
+ ! ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
+ ! struct _tuple0 _tmp5A=({struct _tuple0 _tmp59;_tmp59.f1=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),0));_tmp59.f2=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),1));_tmp59;});void*_tmp5B;int*_tmp5C;
+ ! void*_tmp5D;int*_tmp5E;void*_tmp5F;int*_tmp60;void*_tmp61;int*_tmp62;void*_tmp63;
+ ! struct Cyc_timeval*_tmp64;void*_tmp65;int*_tmp66;void*_tmp67;struct Cyc_timeval*
+ ! _tmp68;void*_tmp69;int*_tmp6A;_LL28: _tmp5B=_tmp5A.f1;if(*((int*)_tmp5B)!= 0)goto
+ ! _LL2A;_tmp5C=((struct Cyc_SO_int_struct*)_tmp5B)->f1;_tmp5D=_tmp5A.f2;if(*((int*)
+ ! _tmp5D)!= 2)goto _LL2A;_tmp5E=((struct Cyc_SO_socklenptr_struct*)_tmp5D)->f1;_LL29:
+ ! return getsockopt_int(fd,level,optname,_tmp5C,_tmp5E);_LL2A: _tmp5F=_tmp5A.f1;if(*((
+ ! int*)_tmp5F)!= 0)goto _LL2C;_tmp60=((struct Cyc_SO_int_struct*)_tmp5F)->f1;_tmp61=
+ ! _tmp5A.f2;if(*((int*)_tmp61)!= 0)goto _LL2C;_tmp62=((struct Cyc_SO_int_struct*)
+ ! _tmp61)->f1;_LL2B: return getsockopt_int(fd,level,optname,_tmp60,(int*)_tmp62);
+ ! _LL2C: _tmp63=_tmp5A.f1;if(*((int*)_tmp63)!= 1)goto _LL2E;_tmp64=((struct Cyc_SO_timeval_struct*)
+ ! _tmp63)->f1;_tmp65=_tmp5A.f2;if(*((int*)_tmp65)!= 2)goto _LL2E;_tmp66=((struct Cyc_SO_socklenptr_struct*)
+ ! _tmp65)->f1;_LL2D: return getsockopt_timeval(fd,level,optname,_tmp64,_tmp66);_LL2E:
+ ! _tmp67=_tmp5A.f1;if(*((int*)_tmp67)!= 1)goto _LL30;_tmp68=((struct Cyc_SO_timeval_struct*)
+ ! _tmp67)->f1;_tmp69=_tmp5A.f2;if(*((int*)_tmp69)!= 0)goto _LL30;_tmp6A=((struct Cyc_SO_int_struct*)
+ ! _tmp69)->f1;_LL2F: return getsockopt_timeval(fd,level,optname,_tmp68,(int*)_tmp6A);
+ ! _LL30:;_LL31:(int)_throw((void*)Cyc_SocketError);_LL27:;}}int recv_wrapped(int,
+ ! struct _tagged_arr,unsigned int,int);int Cyc_recv(int fd,struct _tagged_arr buf,
+ ! unsigned int n,int flags){return recv_wrapped(fd,buf,n,flags);}int recvfrom_in(int,
+ ! struct _tagged_arr,unsigned int,int,const struct Cyc_sockaddr_in*,int*);int Cyc_recvfrom(
+ ! int fd,struct _tagged_arr buf,unsigned int n,int flags,struct _tagged_arr ap){if(
+ ! _get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct
+ ! _tuple0 _tmp6C=({struct _tuple0 _tmp6B;_tmp6B.f1=*((void**)_check_unknown_subscript(
+ ! ap,sizeof(void*),0));_tmp6B.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),
+ ! 1));_tmp6B;});void*_tmp6D;struct Cyc_sockaddr_in*_tmp6E;void*_tmp6F;int*_tmp70;
+ ! _LL33: _tmp6D=_tmp6C.f1;if(*((int*)_tmp6D)!= 0)goto _LL35;_tmp6E=((struct Cyc_SA_sockaddr_in_struct*)
+ ! _tmp6D)->f1;_tmp6F=_tmp6C.f2;if(*((int*)_tmp6F)!= 1)goto _LL35;_tmp70=((struct Cyc_SA_socklenptr_struct*)
+ ! _tmp6F)->f1;_LL34: return recvfrom_in(fd,buf,n,flags,(const struct Cyc_sockaddr_in*)
+ ! _tmp6E,_tmp70);_LL35:;_LL36:(int)_throw((void*)Cyc_SocketError);_LL32:;}}int
+   send_wrapped(int,struct _tagged_arr,unsigned int,int);int Cyc_send(int fd,struct
+   _tagged_arr buf,unsigned int n,int flags){return send_wrapped(fd,buf,n,flags);}int
+ ! sendto_in(int,struct _tagged_arr,unsigned int,int,const struct Cyc_sockaddr_in*,int);
+ ! int Cyc_sendto(int fd,struct _tagged_arr buf,unsigned int n,int flags,struct
+ ! _tagged_arr ap){if(_get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{
+ ! struct _tuple0 _tmp72=({struct _tuple0 _tmp71;_tmp71.f1=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),0));_tmp71.f2=*((void**)
+ ! _check_unknown_subscript(ap,sizeof(void*),1));_tmp71;});void*_tmp73;struct Cyc_sockaddr_in*
+ ! _tmp74;void*_tmp75;int _tmp76;_LL38: _tmp73=_tmp72.f1;if(*((int*)_tmp73)!= 0)goto
+ ! _LL3A;_tmp74=((struct Cyc_SA_sockaddr_in_struct*)_tmp73)->f1;_tmp75=_tmp72.f2;if(*((
+ ! int*)_tmp75)!= 2)goto _LL3A;_tmp76=((struct Cyc_SA_socklen_struct*)_tmp75)->f1;
+ ! _LL39: return sendto_in(fd,buf,n,flags,(const struct Cyc_sockaddr_in*)_tmp74,_tmp76);
+ ! _LL3A:;_LL3B:(int)_throw((void*)Cyc_SocketError);_LL37:;}}int setsockopt_int(int,
+ ! int,int,const int*,int);int setsockopt_timeval(int,int,int,const struct Cyc_timeval*,
+ ! int);int Cyc_setsockopt(int fd,int level,int optname,struct _tagged_arr ap){if(
+ ! _get_arr_size(ap,sizeof(void*))!= 2)(int)_throw((void*)Cyc_SocketError);{struct
+ ! _tuple0 _tmp78=({struct _tuple0 _tmp77;_tmp77.f1=*((void**)_check_unknown_subscript(
+ ! ap,sizeof(void*),0));_tmp77.f2=*((void**)_check_unknown_subscript(ap,sizeof(void*),
+ ! 1));_tmp77;});void*_tmp79;int*_tmp7A;void*_tmp7B;int _tmp7C;void*_tmp7D;struct Cyc_timeval*
+ ! _tmp7E;void*_tmp7F;int _tmp80;_LL3D: _tmp79=_tmp78.f1;if(*((int*)_tmp79)!= 0)goto
+ ! _LL3F;_tmp7A=((struct Cyc_SO_int_struct*)_tmp79)->f1;_tmp7B=_tmp78.f2;if(*((int*)
+ ! _tmp7B)!= 3)goto _LL3F;_tmp7C=((struct Cyc_SO_socklen_struct*)_tmp7B)->f1;_LL3E:
+ ! return setsockopt_int(fd,level,optname,(const int*)_tmp7A,_tmp7C);_LL3F: _tmp7D=
+ ! _tmp78.f1;if(*((int*)_tmp7D)!= 1)goto _LL41;_tmp7E=((struct Cyc_SO_timeval_struct*)
+ ! _tmp7D)->f1;_tmp7F=_tmp78.f2;if(*((int*)_tmp7F)!= 3)goto _LL41;_tmp80=((struct Cyc_SO_socklen_struct*)
+ ! _tmp7F)->f1;_LL40: return setsockopt_timeval(fd,level,optname,(const struct Cyc_timeval*)
+ ! _tmp7E,_tmp80);_LL41:;_LL42:(int)_throw((void*)Cyc_SocketError);_LL3C:;}}struct
+ ! Cyc_stat{int st_dev;unsigned int st_ino;unsigned short st_mode;unsigned short
+ ! st_nlink;unsigned int st_uid;unsigned int st_gid;int st_rdev;struct Cyc_timespec
+ ! st_atimespec;struct Cyc_timespec st_mtimespec;struct Cyc_timespec st_ctimespec;
+ ! long long st_size;long long st_blocks;unsigned int st_blksize;unsigned int st_flags;
+ ! unsigned int st_gen;int st_lspare;long long st_qspare[2];};struct Cyc_timezone{int
+ ! tz_minuteswest;int tz_dsttime;};struct Cyc_itimerval{struct Cyc_timeval it_interval;
+ ! struct Cyc_timeval it_value;};int Cyc_gettimeofday(struct Cyc_timeval*,struct Cyc_timezone*);
+ ! int gettimeofday(struct Cyc_timeval*,struct Cyc_timezone*);int Cyc_gettimeofday(
+ ! struct Cyc_timeval*a,struct Cyc_timezone*b){return gettimeofday(a,0);}struct Cyc_timeb{
+ ! int time;unsigned short millitm;short timezone;short dstflag;};struct Cyc_tms{
+ ! unsigned int tms_utime;unsigned int tms_stime;unsigned int tms_cutime;unsigned int
+ ! tms_cstime;};struct Cyc_sockaddr_un{unsigned char sun_len;unsigned char sun_family;
+ ! char sun_path[104];};struct Cyc_utsname{char sysname[256];char nodename[256];char
+ ! release[256];char version[256];char machine[256];};struct Cyc_tm{int tm_sec;int
+ ! tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int
+ ! tm_isdst;int tm_gmtoff;char*tm_zone;};unsigned int Cyc_strftime(struct _tagged_arr,
+   unsigned int,struct _tagged_arr,const struct Cyc_tm*);unsigned int strftime(char*,
+ ! unsigned int,const char*,const struct Cyc_tm*);static char _tmp82[27]="fgets: buffer insufficient";
+   static struct Cyc_Core_Failure_struct Cyc___strftime_failure={Cyc_Core_Failure,{
+ ! _tmp82,_tmp82,_tmp82 + 27}};unsigned int Cyc_strftime(struct _tagged_arr s,
+   unsigned int maxsize,struct _tagged_arr fmt,const struct Cyc_tm*t){if(maxsize > 
+   _get_arr_size(s,sizeof(char)))(int)_throw((void*)& Cyc___strftime_failure);return
+   strftime((char*)_check_null(_untag_arr(s,sizeof(char),1)),maxsize,(const char*)
+ ! _check_null(_untag_arr(fmt,sizeof(char),1)),t);}struct Cyc_option{struct
+   _tagged_arr name;int has_arg;int*flag;int val;};int Cyc_execlp(const char*,const char*,
+   struct _tagged_arr);int execvp(const char*file,const char**argv);struct _tagged_arr
+   Cyc_getcwd(struct _tagged_arr buf,unsigned int size);int Cyc_gethostname(struct
+   _tagged_arr,unsigned int);int Cyc_read(int,struct _tagged_arr,unsigned int);int Cyc_write(
+ ! int,struct _tagged_arr,unsigned int);static char _tmp84[36]="execlp arg list not NULL-terminated";
+   static struct Cyc_Core_Failure_struct Cyc___execlp_failure={Cyc_Core_Failure,{
+ ! _tmp84,_tmp84,_tmp84 + 36}};int Cyc_execlp(const char*path,const char*arg0,struct
+   _tagged_arr argv){if(*((const char**)_check_unknown_subscript(argv,sizeof(const
+   char*),(int)(_get_arr_size(argv,sizeof(const char*))- 1)))!= (const char*)0)(int)
+   _throw((void*)& Cyc___execlp_failure);{const char**newargs=(const char**)_untag_arr(({
+ ! unsigned int _tmp8D=_get_arr_size(argv,sizeof(const char*));const char**_tmp8E=(
+ ! const char**)_cycalloc(_check_times(sizeof(const char*),_tmp8D + 1));struct
+ ! _tagged_arr _tmp90=_tag_arr(_tmp8E,sizeof(const char*),_tmp8D + 1);{unsigned int
+ ! _tmp8F=_tmp8D;unsigned int i;for(i=0;i < _tmp8F;i ++){_tmp8E[i]=(const char*)0;}
+ ! _tmp8E[_tmp8F]=(const char*)0;}_tmp90;}),sizeof(const char*),1);({struct
+ ! _tagged_arr _tmp86=_tagged_arr_plus(({const char**_tmp85=newargs;_tag_arr(_tmp85,
+ ! sizeof(const char*),_get_zero_arr_size(_tmp85,1));}),sizeof(const char*),0);const
+ ! char*_tmp87=*((const char**)_check_unknown_subscript(_tmp86,sizeof(const char*),0));
+ ! const char*_tmp88=(const char*)arg0;if(_get_arr_size(_tmp86,sizeof(const char*))== 
+ ! 1?_tmp87 == 0?_tmp88 != 0: 0: 0)_throw_arraybounds();*((const char**)_tmp86.curr)=
+ ! _tmp88;});{int i=0;for(0;i < _get_arr_size(argv,sizeof(const char*))- 1;i ++){({
+ ! struct _tagged_arr _tmp8A=_tagged_arr_plus(({const char**_tmp89=newargs;_tag_arr(
+ ! _tmp89,sizeof(const char*),_get_zero_arr_size(_tmp89,1));}),sizeof(const char*),i + 
+ ! 1);const char*_tmp8B=*((const char**)_check_unknown_subscript(_tmp8A,sizeof(const
+ ! char*),0));const char*_tmp8C=*((const char**)_check_unknown_subscript(argv,sizeof(
+ ! const char*),i));if(_get_arr_size(_tmp8A,sizeof(const char*))== 1?_tmp8B == 0?
+ ! _tmp8C != 0: 0: 0)_throw_arraybounds();*((const char**)_tmp8A.curr)=_tmp8C;});}}
+   return execvp(path,(const char**)newargs);}}char*getcwd(char*buf,unsigned int size);
+ ! static char _tmp92[29]="getcwd: invalid buf argument";static struct Cyc_Core_Failure_struct
+ ! Cyc___getcwd_failure={Cyc_Core_Failure,{_tmp92,_tmp92,_tmp92 + 29}};struct
+   _tagged_arr Cyc_getcwd(struct _tagged_arr buf,unsigned int size){if(_get_arr_size(
+ ! buf,sizeof(char))< size)(int)_throw((void*)& Cyc___getcwd_failure);{char*_tmp93=
+   getcwd((char*)_check_null(_untag_arr(buf,sizeof(char),1)),size);return(
+ ! unsigned int)_tmp93?buf: _tag_arr(0,0,0);}}int gethostname(char*,unsigned int);
+ ! static char _tmp95[34]="gethostname: called with NULL buf";static struct Cyc_Core_Failure_struct
+ ! Cyc___gethostname_failure_1={Cyc_Core_Failure,{_tmp95,_tmp95,_tmp95 + 34}};static
+ ! char _tmp97[42]="gethostname: called with count > buf.size";static struct Cyc_Core_Failure_struct
+ ! Cyc___gethostname_failure_2={Cyc_Core_Failure,{_tmp97,_tmp97,_tmp97 + 42}};int Cyc_gethostname(
+   struct _tagged_arr buf,unsigned int count){if(!((unsigned int)buf.curr))(int)_throw((
+   void*)& Cyc___gethostname_failure_1);else{if(count > _get_arr_size(buf,sizeof(char)))(
+   int)_throw((void*)& Cyc___gethostname_failure_2);return gethostname((char*)
+   _untag_arr(buf,sizeof(char),1),count);}}int read(int fd,char*buf,unsigned int count);
+ ! static char _tmp99[35]="read: called with count > buf.size";static struct Cyc_Core_Failure_struct
+ ! Cyc___read_failure={Cyc_Core_Failure,{_tmp99,_tmp99,_tmp99 + 35}};int Cyc_read(int
+   fd,struct _tagged_arr buf,unsigned int count){if(count > _get_arr_size(buf,sizeof(
+   char)))(int)_throw((void*)& Cyc___read_failure);return read(fd,(char*)_check_null(
+   _untag_arr(buf,sizeof(char),1)),count);}int write(int fd,const char*buf,
+ ! unsigned int count);static char _tmp9B[36]="write: called with count > buf.size";
+ ! static struct Cyc_Core_Failure_struct Cyc___write_failure={Cyc_Core_Failure,{_tmp9B,
+ ! _tmp9B,_tmp9B + 36}};int Cyc_write(int fd,struct _tagged_arr buf,unsigned int count){
+   if(count > _get_arr_size(buf,sizeof(char)))(int)_throw((void*)& Cyc___write_failure);
+   return write(fd,(const char*)_untag_arr(buf,sizeof(char),1),count);}struct Cyc_utimbuf{
+   int actime;int modtime;};
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/dict.c powerpc-apple-rhapsody/lib/dict.c
*** i686-unknown-linux/lib/dict.c	Thu Jun 27 17:34:24 2002
--- powerpc-apple-rhapsody/lib/dict.c	Thu Jun 27 17:35:22 2002
***************
*** 662,672 ****
  void*hd;struct Cyc_List_List*tl;};int Cyc_List_length(struct Cyc_List_List*x);
  extern char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];struct Cyc_Iter_Iter{
  void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,
! void*);typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}
! Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
--- 662,670 ----
  void*hd;struct Cyc_List_List*tl;};int Cyc_List_length(struct Cyc_List_List*x);
  extern char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];struct Cyc_Iter_Iter{
  void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,
! void*);struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/execinfo.c powerpc-apple-rhapsody/lib/execinfo.c
*** i686-unknown-linux/lib/execinfo.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/execinfo.c	Thu Jun 27 17:35:18 2002
***************
*** 653,751 ****
  #define _cycalloc_atomic(n) _profile_GC_malloc_atomic(n,__FILE__ ":" __FUNCTION__,__LINE__)
  #endif
  #endif
!  void exit(int);struct Cyc_Core_Opt{void*v;};extern char Cyc_Core_Invalid_argument[21];
! struct Cyc_Core_Invalid_argument_struct{char*tag;struct _dynforward_ptr f1;};extern
! char Cyc_Core_Failure[12];struct Cyc_Core_Failure_struct{char*tag;struct
! _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};int Cyc_Execinfo_backtrace(struct _dynforward_ptr,int);int Cyc_Execinfo_bt();
! typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
! int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
! struct _dynforward_ptr);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{
! int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{
! int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct
! _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;};struct Cyc_FloatPtr_sa_struct{
! int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int tag;struct _dynforward_ptr f1;};
! void perror(const char*);int Cyc_printf(struct _dynforward_ptr,struct _dynforward_ptr);
! int putchar(int);int Cyc_sprintf(struct _dynforward_ptr,struct _dynforward_ptr,
! struct _dynforward_ptr);extern char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[
! 18];struct Cyc_FileOpenError_struct{char*tag;struct _dynforward_ptr f1;};struct Cyc_timeval{
! long tv_sec;long tv_usec;};struct Cyc_rusage{struct Cyc_timeval ru_utime;struct Cyc_timeval
! ru_stime;long ru_maxrss;long ru_ixrss;long ru_idrss;long ru_isrss;long ru_minflt;long
! ru_majflt;long ru_nswap;long ru_inblock;long ru_oublock;long ru_msgsnd;long ru_msgrcv;
! long ru_nsignals;long ru_nvcsw;long ru_nivcsw;};typedef enum {Cyc_P_ALL  = 0,Cyc_P_PID
!  = 1,Cyc_P_PGID  = 2 }Cyc_idtype_t;int waitpid(int,int*,int);typedef struct{
! unsigned long __val[1024 / (8 * sizeof(unsigned long))];}Cyc___sigset_t;typedef Cyc___sigset_t
! Cyc_sigset_t;enum Cyc___anonymous_enum_182__{Cyc_SIGEV_SIGNAL  = 0,Cyc_SIGEV_NONE
!  = 1,Cyc_SIGEV_THREAD  = 2};int kill(int,int);struct Cyc___SIG_BUILTIN_struct{int
! tag;void*f1;};struct Cyc___SIG_HANDLER_struct{int tag;void(*f1)(int);};enum Cyc___anonymous_enum_368__{
! Cyc__PC_LINK_MAX  = 0,Cyc__PC_MAX_CANON  = 1,Cyc__PC_MAX_INPUT  = 2,Cyc__PC_NAME_MAX
!  = 3,Cyc__PC_PATH_MAX  = 4,Cyc__PC_PIPE_BUF  = 5,Cyc__PC_CHOWN_RESTRICTED  = 6,Cyc__PC_NO_TRUNC
!  = 7,Cyc__PC_VDISABLE  = 8,Cyc__PC_SYNC_IO  = 9,Cyc__PC_ASYNC_IO  = 10,Cyc__PC_PRIO_IO
!  = 11,Cyc__PC_SOCK_MAXBUF  = 12,Cyc__PC_FILESIZEBITS  = 13,Cyc__PC_REC_INCR_XFER_SIZE
!  = 14,Cyc__PC_REC_MAX_XFER_SIZE  = 15,Cyc__PC_REC_MIN_XFER_SIZE  = 16,Cyc__PC_REC_XFER_ALIGN
!  = 17,Cyc__PC_ALLOC_SIZE_MIN  = 18,Cyc__PC_SYMLINK_MAX  = 19};enum Cyc___anonymous_enum_370__{
! Cyc__CS_PATH  = 0,Cyc__CS_V6_WIDTH_RESTRICTED_ENVS  = 1};struct Cyc_option{struct
! _dynforward_ptr name;int has_arg;int*flag;int val;};int close(int);int dup2(int,int);
! int execvp(const char*file,const char**argv);int fork();int getpid();int pipe(int*);
! int Cyc_read(int,struct _dynforward_ptr,unsigned int);int Cyc_write(int,struct
! _dynforward_ptr,unsigned int);int backtrace(int*,int);int Cyc_Execinfo_backtrace(
! struct _dynforward_ptr array,int size){if(size > _get_dynforward_size(array,sizeof(
! int)))(int)_throw((void*)({struct Cyc_Core_Failure_struct*_tmp0=_cycalloc(sizeof(*
  _tmp0));_tmp0[0]=({struct Cyc_Core_Failure_struct _tmp1;_tmp1.tag=Cyc_Core_Failure;
! _tmp1.f1=({const char*_tmp2="backtrace: size > array.size";_tag_dynforward(_tmp2,
! sizeof(char),_get_zero_arr_size(_tmp2,29));});_tmp1;});_tmp0;}));return backtrace((
! int*)_check_null(_untag_dynforward_ptr(array,sizeof(int),1)),size);}int Cyc_Execinfo_bt(){
! int bt[20];{unsigned int _tmp19=20;unsigned int i;for(i=0;i < _tmp19;i ++){bt[i]=0;}}{
! int pid;int self_pid;int tochild[2]={0,0};int fromchild[2]={0,0};if(pipe(tochild)
!  || pipe(fromchild))return 1;self_pid=getpid();if((pid=fork())== 0){if(dup2(
! tochild[0],0)< 0){perror((const char*)"dup failed in backtrace");exit(1);}close(
! tochild[1]);if(dup2(fromchild[1],1)< 0){perror((const char*)"dup failed in backtrace");
! exit(1);}close(fromchild[0]);{const char*args[5]={(const char*)"addr2line",(const
! char*)"--functions",(const char*)"-e",(const char*)"",(const char*)0};({struct
! _dyneither_ptr _tmp4=_dyneither_ptr_plus(({const char**_tmp3=args;_tag_dyneither(
! _tmp3,sizeof(const char*),_get_zero_arr_size(_tmp3,5));}),sizeof(const char*),3);
! const char*_tmp5=*((const char**)_check_dyneither_subscript(_tmp4,sizeof(const char*),
! 0));const char*_tmp9=(const char*)_check_null(_untag_dynforward_ptr(({struct Cyc_Int_pa_struct
! _tmp8;_tmp8.tag=1;_tmp8.f1=(unsigned long)self_pid;{void*_tmp6[1]={& _tmp8};Cyc_aprintf(({
! const char*_tmp7="/proc/%d/exe";_tag_dynforward(_tmp7,sizeof(char),
! _get_zero_arr_size(_tmp7,13));}),_tag_dynforward(_tmp6,sizeof(void*),1));}}),
! sizeof(char),1));if(_get_dyneither_size(_tmp4,sizeof(const char*))== 1  && (_tmp5
! == 0  && _tmp9 != 0))_throw_arraybounds();*((const char**)_tmp4.curr)=_tmp9;});if(
! execvp((const char*)"addr2line",(const char**)args)== - 1)perror((const char*)"execlp failed during backtrace");
! exit(1);}}else{if(pid < 0){close(tochild[0]);close(tochild[1]);close(fromchild[0]);
! close(fromchild[1]);return 1;}}close(tochild[0]);close(fromchild[1]);{int infd=
! fromchild[0];int outfd=tochild[1];int n=Cyc_Execinfo_backtrace(_tag_dynforward(bt,
! sizeof(int),20),(int)20);{int c=0;for(0;c < n;c ++){char buf[100];int len=({struct Cyc_Int_pa_struct
! _tmpC;_tmpC.tag=1;_tmpC.f1=(unsigned int)bt[_check_known_subscript_notnull(20,c)];{
! void*_tmpA[1]={& _tmpC};Cyc_sprintf(_tag_dynforward(buf,sizeof(char),100),({const
! char*_tmpB="%#x\n";_tag_dynforward(_tmpB,sizeof(char),_get_zero_arr_size(_tmpB,5));}),
! _tag_dynforward(_tmpA,sizeof(void*),1));}});Cyc_write(outfd,_tag_dynforward(buf,
! sizeof(char),100),(unsigned int)len);}}({void*_tmpD[0]={};Cyc_printf(({const char*
! _tmpE="Backtrace:\n  Function          Location\n  ----------------  --------------------------------\n";
! _tag_dynforward(_tmpE,sizeof(char),_get_zero_arr_size(_tmpE,94));}),
! _tag_dynforward(_tmpD,sizeof(void*),0));});{int c=0;for(0;c < n;c ++){int unknown=1;
! char d;int ret;int pos=0;({void*_tmpF[0]={};Cyc_printf(({const char*_tmp10="  ";
! _tag_dynforward(_tmp10,sizeof(char),_get_zero_arr_size(_tmp10,3));}),
! _tag_dynforward(_tmpF,sizeof(void*),0));});do{ret=Cyc_read(infd,_tag_dynforward(&
! d,sizeof(char),1),1);if(d == '\n')break;if(d != '?')unknown=0;pos ++;putchar((int)d);}while(
! 1);if(unknown){char buf[100];int len=({struct Cyc_Int_pa_struct _tmp16;_tmp16.tag=1;
! _tmp16.f1=(unsigned int)bt[_check_known_subscript_notnull(20,c)];{void*_tmp14[1]={&
! _tmp16};Cyc_sprintf(_tag_dynforward(buf,sizeof(char),100),({const char*_tmp15="(%#x)";
! _tag_dynforward(_tmp15,sizeof(char),_get_zero_arr_size(_tmp15,6));}),
! _tag_dynforward(_tmp14,sizeof(void*),1));}});({struct Cyc_String_pa_struct _tmp13;
! _tmp13.tag=0;_tmp13.f1=(struct _dynforward_ptr)_tag_dynforward(buf,sizeof(char),
! 100);{void*_tmp11[1]={& _tmp13};Cyc_printf(({const char*_tmp12="%s";
! _tag_dynforward(_tmp12,sizeof(char),_get_zero_arr_size(_tmp12,3));}),
! _tag_dynforward(_tmp11,sizeof(void*),1));}});pos +=len;}while(pos ++ < 16){putchar((
! int)' ');}({void*_tmp17[0]={};Cyc_printf(({const char*_tmp18="  ";_tag_dynforward(
! _tmp18,sizeof(char),_get_zero_arr_size(_tmp18,3));}),_tag_dynforward(_tmp17,
! sizeof(void*),0));});do{ret=Cyc_read(infd,_tag_dynforward(& d,sizeof(char),1),1);
! if(d == '\n')break;putchar((int)d);}while(1);putchar((int)'\n');}}close(infd);if(
! infd != outfd)close(outfd);kill(pid,15);waitpid(pid,0,0);return 0;}}}
--- 653,679 ----
  #define _cycalloc_atomic(n) _profile_GC_malloc_atomic(n,__FILE__ ":" __FUNCTION__,__LINE__)
  #endif
  #endif
!  struct Cyc_Core_Opt{void*v;};extern char Cyc_Core_Invalid_argument[21];struct Cyc_Core_Invalid_argument_struct{
! char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Failure[12];struct Cyc_Core_Failure_struct{
! char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};int Cyc_Execinfo_backtrace(struct _dynforward_ptr,int);int Cyc_Execinfo_bt();
! struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
! int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
! Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
! int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;
! };struct Cyc_FloatPtr_sa_struct{int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int
! tag;struct _dynforward_ptr f1;};extern char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[
! 18];struct Cyc_FileOpenError_struct{char*tag;struct _dynforward_ptr f1;};struct Cyc_rusage;
! struct Cyc___SIG_BUILTIN_struct{int tag;void*f1;};struct Cyc___SIG_HANDLER_struct{
! int tag;void(*f1)(int);};int Cyc_Execinfo_backtrace(struct _dynforward_ptr array,int
! size){(int)_throw((void*)({struct Cyc_Core_Failure_struct*_tmp0=_cycalloc(sizeof(*
  _tmp0));_tmp0[0]=({struct Cyc_Core_Failure_struct _tmp1;_tmp1.tag=Cyc_Core_Failure;
! _tmp1.f1=({const char*_tmp2="backtrace: unsupported except under Linux";
! _tag_dynforward(_tmp2,sizeof(char),_get_zero_arr_size(_tmp2,42));});_tmp1;});
! _tmp0;}));return 0;}int Cyc_Execinfo_bt(){return 1;}
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/filename.c powerpc-apple-rhapsody/lib/filename.c
*** i686-unknown-linux/lib/filename.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/filename.c	Thu Jun 27 17:35:18 2002
***************
*** 668,674 ****
  struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern char Cyc_List_List_mismatch[
  18];extern char Cyc_List_Nth[8];struct _dynforward_ptr Cyc_strconcat(struct
  _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_substring(struct
! _dynforward_ptr,int ofs,unsigned int n);struct _dynforward_ptr Cyc_Filename_concat(
  struct _dynforward_ptr s1,struct _dynforward_ptr s2){return Cyc_strconcat((struct
  _dynforward_ptr)s1,(struct _dynforward_ptr)Cyc_strconcat(({const char*_tmp0="/";
  _tag_dynforward(_tmp0,sizeof(char),_get_zero_arr_size(_tmp0,2));}),(struct
--- 668,674 ----
  struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern char Cyc_List_List_mismatch[
  18];extern char Cyc_List_Nth[8];struct _dynforward_ptr Cyc_strconcat(struct
  _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_substring(struct
! _dynforward_ptr,int ofs,unsigned long n);struct _dynforward_ptr Cyc_Filename_concat(
  struct _dynforward_ptr s1,struct _dynforward_ptr s2){return Cyc_strconcat((struct
  _dynforward_ptr)s1,(struct _dynforward_ptr)Cyc_strconcat(({const char*_tmp0="/";
  _tag_dynforward(_tmp0,sizeof(char),_get_zero_arr_size(_tmp0,2));}),(struct
***************
*** 679,690 ****
  _tmp1=_cycalloc(sizeof(*_tmp1));_tmp1[0]=({struct Cyc_Core_Invalid_argument_struct
  _tmp2;_tmp2.tag=Cyc_Core_Invalid_argument;_tmp2.f1=({const char*_tmp3="chop_extension";
  _tag_dynforward(_tmp3,sizeof(char),_get_zero_arr_size(_tmp3,15));});_tmp2;});
! _tmp1;}));return Cyc_substring((struct _dynforward_ptr)filename,0,(unsigned int)i);}
  struct _dynforward_ptr Cyc_Filename_dirname(struct _dynforward_ptr filename){int i=(
  int)(_get_dynforward_size(filename,sizeof(char))- 1);while(i >= 0  && *((const char*)
  _check_dynforward_subscript(filename,sizeof(char),i))!= '/'){-- i;}if(i < 0)return
  Cyc_Core_new_string(0);return Cyc_substring((struct _dynforward_ptr)filename,0,(
! unsigned int)i);}struct _dynforward_ptr Cyc_Filename_basename(struct
  _dynforward_ptr filename){int i=(int)(_get_dynforward_size(filename,sizeof(char))- 
  1);while(i >= 0  && *((const char*)_check_dynforward_subscript(filename,sizeof(char),
  i))!= '/'){-- i;}return Cyc_substring((struct _dynforward_ptr)filename,i + 1,
--- 679,690 ----
  _tmp1=_cycalloc(sizeof(*_tmp1));_tmp1[0]=({struct Cyc_Core_Invalid_argument_struct
  _tmp2;_tmp2.tag=Cyc_Core_Invalid_argument;_tmp2.f1=({const char*_tmp3="chop_extension";
  _tag_dynforward(_tmp3,sizeof(char),_get_zero_arr_size(_tmp3,15));});_tmp2;});
! _tmp1;}));return Cyc_substring((struct _dynforward_ptr)filename,0,(unsigned long)i);}
  struct _dynforward_ptr Cyc_Filename_dirname(struct _dynforward_ptr filename){int i=(
  int)(_get_dynforward_size(filename,sizeof(char))- 1);while(i >= 0  && *((const char*)
  _check_dynforward_subscript(filename,sizeof(char),i))!= '/'){-- i;}if(i < 0)return
  Cyc_Core_new_string(0);return Cyc_substring((struct _dynforward_ptr)filename,0,(
! unsigned long)i);}struct _dynforward_ptr Cyc_Filename_basename(struct
  _dynforward_ptr filename){int i=(int)(_get_dynforward_size(filename,sizeof(char))- 
  1);while(i >= 0  && *((const char*)_check_dynforward_subscript(filename,sizeof(char),
  i))!= '/'){-- i;}return Cyc_substring((struct _dynforward_ptr)filename,i + 1,
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/getopt.c powerpc-apple-rhapsody/lib/getopt.c
*** i686-unknown-linux/lib/getopt.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/getopt.c	Thu Jun 27 17:35:18 2002
***************
*** 659,667 ****
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;
  struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
  int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
--- 659,665 ----
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;
  struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
  int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
***************
*** 675,729 ****
  extern char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{
  char*tag;struct _dynforward_ptr f1;};typedef struct{int quot;int rem;}Cyc_div_t;
  typedef struct{long quot;long rem;}Cyc_ldiv_t;void*abort();void exit(int);char*
! getenv(const char*);enum Cyc___anonymous_enum_368__{Cyc__PC_LINK_MAX  = 0,Cyc__PC_MAX_CANON
!  = 1,Cyc__PC_MAX_INPUT  = 2,Cyc__PC_NAME_MAX  = 3,Cyc__PC_PATH_MAX  = 4,Cyc__PC_PIPE_BUF
!  = 5,Cyc__PC_CHOWN_RESTRICTED  = 6,Cyc__PC_NO_TRUNC  = 7,Cyc__PC_VDISABLE  = 8,Cyc__PC_SYNC_IO
!  = 9,Cyc__PC_ASYNC_IO  = 10,Cyc__PC_PRIO_IO  = 11,Cyc__PC_SOCK_MAXBUF  = 12,Cyc__PC_FILESIZEBITS
!  = 13,Cyc__PC_REC_INCR_XFER_SIZE  = 14,Cyc__PC_REC_MAX_XFER_SIZE  = 15,Cyc__PC_REC_MIN_XFER_SIZE
!  = 16,Cyc__PC_REC_XFER_ALIGN  = 17,Cyc__PC_ALLOC_SIZE_MIN  = 18,Cyc__PC_SYMLINK_MAX
!  = 19};enum Cyc___anonymous_enum_370__{Cyc__CS_PATH  = 0,Cyc__CS_V6_WIDTH_RESTRICTED_ENVS
!  = 1};extern struct _dynforward_ptr Cyc_optarg;extern int Cyc_optind;extern int Cyc_opterr;
! extern int Cyc_optopt;struct Cyc_option{struct _dynforward_ptr name;int has_arg;int*
! flag;int val;};int Cyc_getopt(int __argc,struct _dynforward_ptr __argv,struct
! _dynforward_ptr __shortopts);int Cyc__getopt_internal(int __argc,struct
! _dynforward_ptr __argv,struct _dynforward_ptr __shortopts,struct _dynforward_ptr
! __longopts,int*__longind,int __long_only);struct Cyc_List_List{void*hd;struct Cyc_List_List*
! tl;};extern char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];unsigned int
! Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(struct _dynforward_ptr s1,struct
! _dynforward_ptr s2);int Cyc_strncmp(struct _dynforward_ptr s1,struct _dynforward_ptr
! s2,unsigned int len);struct _dynforward_ptr Cyc_strchr(struct _dynforward_ptr s,char c);
! struct _dynforward_ptr Cyc_optarg;int Cyc_optind=1;int Cyc___getopt_initialized;
! static struct _dynforward_ptr Cyc_nextchar;int Cyc_opterr=1;int Cyc_optopt=(int)'?';
! enum Cyc_ordering_tag{Cyc_REQUIRE_ORDER  = 0,Cyc_PERMUTE  = 1,Cyc_RETURN_IN_ORDER
!  = 2};static enum Cyc_ordering_tag Cyc_ordering;static struct _dynforward_ptr Cyc_posixly_correct;
! static int Cyc_first_nonopt;static int Cyc_last_nonopt;static int Cyc_nonoption_flags_max_len;
! static int Cyc_nonoption_flags_len;static int Cyc_original_argc;static int Cyc_original_argv;
! static void  __attribute__((unused )) Cyc_store_args_and_env(int argc,struct
! _dynforward_ptr argv){Cyc_original_argc=argc;Cyc_original_argv=(int)((struct
! _dynforward_ptr*)_check_null(_untag_dynforward_ptr(argv,sizeof(struct
! _dynforward_ptr),1)));}static void Cyc_exchange(struct _dynforward_ptr argv){int
! bottom=Cyc_first_nonopt;int middle=Cyc_last_nonopt;int top=Cyc_optind;struct
! _dynforward_ptr tem;while(top > middle  && middle > bottom){if(top - middle > middle - 
! bottom){int len=middle - bottom;register int i;for(i=0;i < len;i ++){tem=*((struct
! _dynforward_ptr*)_check_dynforward_subscript(argv,sizeof(struct _dynforward_ptr),
! bottom + i));*((struct _dynforward_ptr*)_check_dynforward_subscript(argv,sizeof(
! struct _dynforward_ptr),bottom + i))=*((struct _dynforward_ptr*)
! _check_dynforward_subscript(argv,sizeof(struct _dynforward_ptr),(top - (middle - 
! bottom))+ i));*((struct _dynforward_ptr*)_check_dynforward_subscript(argv,sizeof(
! struct _dynforward_ptr),(top - (middle - bottom))+ i))=tem;}top -=len;}else{int len=
! top - middle;register int i;for(i=0;i < len;i ++){tem=*((struct _dynforward_ptr*)
! _check_dynforward_subscript(argv,sizeof(struct _dynforward_ptr),bottom + i));*((
  struct _dynforward_ptr*)_check_dynforward_subscript(argv,sizeof(struct
! _dynforward_ptr),bottom + i))=*((struct _dynforward_ptr*)
! _check_dynforward_subscript(argv,sizeof(struct _dynforward_ptr),middle + i));*((
  struct _dynforward_ptr*)_check_dynforward_subscript(argv,sizeof(struct
! _dynforward_ptr),middle + i))=tem;}bottom +=len;}}Cyc_first_nonopt +=Cyc_optind - 
! Cyc_last_nonopt;Cyc_last_nonopt=Cyc_optind;}static struct _dynforward_ptr Cyc__getopt_initialize(
! int argc,struct _dynforward_ptr argv,struct _dynforward_ptr optstring){Cyc_first_nonopt=(
! Cyc_last_nonopt=Cyc_optind);Cyc_nextchar=_tag_dynforward(0,0,0);Cyc_posixly_correct=({
! char*_tmp0=getenv((const char*)"POSIXLY_CORRECT");_tag_dynforward(_tmp0,sizeof(
! char),_get_zero_arr_size(_tmp0,1));});if(*((const char*)
! _check_dynforward_subscript(optstring,sizeof(char),0))== '-'){Cyc_ordering=Cyc_RETURN_IN_ORDER;
  _dynforward_ptr_inplace_plus(& optstring,sizeof(char),1);}else{if(*((const char*)
  _check_dynforward_subscript(optstring,sizeof(char),0))== '+'){Cyc_ordering=Cyc_REQUIRE_ORDER;
  _dynforward_ptr_inplace_plus(& optstring,sizeof(char),1);}else{if(Cyc_posixly_correct.curr
--- 673,721 ----
  extern char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{
  char*tag;struct _dynforward_ptr f1;};typedef struct{int quot;int rem;}Cyc_div_t;
  typedef struct{long quot;long rem;}Cyc_ldiv_t;void*abort();void exit(int);char*
! getenv(const char*);extern struct _dynforward_ptr Cyc_optarg;extern int Cyc_optind;
! extern int Cyc_opterr;extern int Cyc_optopt;struct Cyc_option{struct _dynforward_ptr
! name;int has_arg;int*flag;int val;};int Cyc_getopt(int __argc,struct _dynforward_ptr
! __argv,struct _dynforward_ptr __shortopts);int Cyc__getopt_internal(int __argc,
! struct _dynforward_ptr __argv,struct _dynforward_ptr __shortopts,struct
! _dynforward_ptr __longopts,int*__longind,int __long_only);struct Cyc_List_List{void*
! hd;struct Cyc_List_List*tl;};extern char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[
! 8];unsigned long Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(struct
! _dynforward_ptr s1,struct _dynforward_ptr s2);int Cyc_strncmp(struct _dynforward_ptr
! s1,struct _dynforward_ptr s2,unsigned long len);struct _dynforward_ptr Cyc_strchr(
! struct _dynforward_ptr s,char c);struct _dynforward_ptr Cyc_optarg;int Cyc_optind=1;
! int Cyc___getopt_initialized;static struct _dynforward_ptr Cyc_nextchar;int Cyc_opterr=
! 1;int Cyc_optopt=(int)'?';enum Cyc_ordering_tag{Cyc_REQUIRE_ORDER  = 0,Cyc_PERMUTE
!  = 1,Cyc_RETURN_IN_ORDER  = 2};static enum Cyc_ordering_tag Cyc_ordering;static
! struct _dynforward_ptr Cyc_posixly_correct;static int Cyc_first_nonopt;static int Cyc_last_nonopt;
! static int Cyc_nonoption_flags_max_len;static int Cyc_nonoption_flags_len;static int
! Cyc_original_argc;static int Cyc_original_argv;static void  __attribute__((unused )) 
! Cyc_store_args_and_env(int argc,struct _dynforward_ptr argv){Cyc_original_argc=argc;
! Cyc_original_argv=(int)((struct _dynforward_ptr*)_check_null(
! _untag_dynforward_ptr(argv,sizeof(struct _dynforward_ptr),1)));}static void Cyc_exchange(
! struct _dynforward_ptr argv){int bottom=Cyc_first_nonopt;int middle=Cyc_last_nonopt;
! int top=Cyc_optind;struct _dynforward_ptr tem;while(top > middle  && middle > bottom){
! if(top - middle > middle - bottom){int len=middle - bottom;register int i;for(i=0;i < 
! len;i ++){tem=*((struct _dynforward_ptr*)_check_dynforward_subscript(argv,sizeof(
! struct _dynforward_ptr),bottom + i));*((struct _dynforward_ptr*)
! _check_dynforward_subscript(argv,sizeof(struct _dynforward_ptr),bottom + i))=*((
  struct _dynforward_ptr*)_check_dynforward_subscript(argv,sizeof(struct
! _dynforward_ptr),(top - (middle - bottom))+ i));*((struct _dynforward_ptr*)
! _check_dynforward_subscript(argv,sizeof(struct _dynforward_ptr),(top - (middle - 
! bottom))+ i))=tem;}top -=len;}else{int len=top - middle;register int i;for(i=0;i < len;
! i ++){tem=*((struct _dynforward_ptr*)_check_dynforward_subscript(argv,sizeof(
! struct _dynforward_ptr),bottom + i));*((struct _dynforward_ptr*)
! _check_dynforward_subscript(argv,sizeof(struct _dynforward_ptr),bottom + i))=*((
  struct _dynforward_ptr*)_check_dynforward_subscript(argv,sizeof(struct
! _dynforward_ptr),middle + i));*((struct _dynforward_ptr*)
! _check_dynforward_subscript(argv,sizeof(struct _dynforward_ptr),middle + i))=tem;}
! bottom +=len;}}Cyc_first_nonopt +=Cyc_optind - Cyc_last_nonopt;Cyc_last_nonopt=Cyc_optind;}
! static struct _dynforward_ptr Cyc__getopt_initialize(int argc,struct _dynforward_ptr
! argv,struct _dynforward_ptr optstring){Cyc_first_nonopt=(Cyc_last_nonopt=Cyc_optind);
! Cyc_nextchar=_tag_dynforward(0,0,0);Cyc_posixly_correct=({char*_tmp0=getenv((
! const char*)"POSIXLY_CORRECT");_tag_dynforward(_tmp0,sizeof(char),
! _get_zero_arr_size(_tmp0,1));});if(*((const char*)_check_dynforward_subscript(
! optstring,sizeof(char),0))== '-'){Cyc_ordering=Cyc_RETURN_IN_ORDER;
  _dynforward_ptr_inplace_plus(& optstring,sizeof(char),1);}else{if(*((const char*)
  _check_dynforward_subscript(optstring,sizeof(char),0))== '+'){Cyc_ordering=Cyc_REQUIRE_ORDER;
  _dynforward_ptr_inplace_plus(& optstring,sizeof(char),1);}else{if(Cyc_posixly_correct.curr
***************
*** 784,790 ****
  _dynforward_ptr_inplace_plus_post(& p,sizeof(struct Cyc_option),1),option_index ++)){
  if(!Cyc_strncmp((struct _dynforward_ptr)((const struct Cyc_option*)
  _check_dynforward_subscript(p,sizeof(struct Cyc_option),0))->name,(struct
! _dynforward_ptr)Cyc_nextchar,(unsigned int)((nameend.curr - Cyc_nextchar.curr)/ 
  sizeof(char)))){if((unsigned int)((nameend.curr - Cyc_nextchar.curr)/ sizeof(char))
  == (unsigned int)Cyc_strlen((struct _dynforward_ptr)((const struct Cyc_option*)
  _check_dynforward_subscript(p,sizeof(struct Cyc_option),0))->name)){pfound=p;
--- 776,782 ----
  _dynforward_ptr_inplace_plus_post(& p,sizeof(struct Cyc_option),1),option_index ++)){
  if(!Cyc_strncmp((struct _dynforward_ptr)((const struct Cyc_option*)
  _check_dynforward_subscript(p,sizeof(struct Cyc_option),0))->name,(struct
! _dynforward_ptr)Cyc_nextchar,(unsigned long)((nameend.curr - Cyc_nextchar.curr)/ 
  sizeof(char)))){if((unsigned int)((nameend.curr - Cyc_nextchar.curr)/ sizeof(char))
  == (unsigned int)Cyc_strlen((struct _dynforward_ptr)((const struct Cyc_option*)
  _check_dynforward_subscript(p,sizeof(struct Cyc_option),0))->name)){pfound=p;
***************
*** 933,939 ****
  _dynforward_ptr_inplace_plus_post(& p,sizeof(struct Cyc_option),1),option_index ++)){
  if(!Cyc_strncmp((struct _dynforward_ptr)((const struct Cyc_option*)
  _check_dynforward_subscript(p,sizeof(struct Cyc_option),0))->name,(struct
! _dynforward_ptr)Cyc_nextchar,(unsigned int)((nameend.curr - Cyc_nextchar.curr)/ 
  sizeof(char)))){if((unsigned int)((nameend.curr - Cyc_nextchar.curr)/ sizeof(char))
  == Cyc_strlen((struct _dynforward_ptr)((const struct Cyc_option*)
  _check_dynforward_subscript(p,sizeof(struct Cyc_option),0))->name)){pfound=
--- 925,931 ----
  _dynforward_ptr_inplace_plus_post(& p,sizeof(struct Cyc_option),1),option_index ++)){
  if(!Cyc_strncmp((struct _dynforward_ptr)((const struct Cyc_option*)
  _check_dynforward_subscript(p,sizeof(struct Cyc_option),0))->name,(struct
! _dynforward_ptr)Cyc_nextchar,(unsigned long)((nameend.curr - Cyc_nextchar.curr)/ 
  sizeof(char)))){if((unsigned int)((nameend.curr - Cyc_nextchar.curr)/ sizeof(char))
  == Cyc_strlen((struct _dynforward_ptr)((const struct Cyc_option*)
  _check_dynforward_subscript(p,sizeof(struct Cyc_option),0))->name)){pfound=
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/grp.c powerpc-apple-rhapsody/lib/grp.c
*** i686-unknown-linux/lib/grp.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/grp.c	Thu Jun 27 17:35:18 2002
***************
*** 667,673 ****
  _dynforward_ptr groups);struct Cyc_Cgrp_Cgroup{char*gr_name;char*gr_passwd;
  unsigned int gr_gid;char**gr_mem;};struct Cyc_Cgrp_Cgroup*getgrnam(char*const name);
  struct Cyc_Cgrp_Cgroup*getgrgid(unsigned int gid);int initgroups(char*user,
! unsigned int group);int setgroups(unsigned int n,const unsigned int*groups);struct
  Cyc_group*Cyc_getgrnam(struct _dynforward_ptr name){struct Cyc_Cgrp_Cgroup*src=
  getgrnam(string_to_Cstring(name));return(unsigned int)src?({struct Cyc_group*
  _tmp0=_cycalloc(sizeof(*_tmp0));_tmp0->gr_name=(struct _dynforward_ptr)
--- 667,673 ----
  _dynforward_ptr groups);struct Cyc_Cgrp_Cgroup{char*gr_name;char*gr_passwd;
  unsigned int gr_gid;char**gr_mem;};struct Cyc_Cgrp_Cgroup*getgrnam(char*const name);
  struct Cyc_Cgrp_Cgroup*getgrgid(unsigned int gid);int initgroups(char*user,
! unsigned int group);int setgroups(unsigned long n,const unsigned int*groups);struct
  Cyc_group*Cyc_getgrnam(struct _dynforward_ptr name){struct Cyc_Cgrp_Cgroup*src=
  getgrnam(string_to_Cstring(name));return(unsigned int)src?({struct Cyc_group*
  _tmp0=_cycalloc(sizeof(*_tmp0));_tmp0->gr_name=(struct _dynforward_ptr)
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/hashtable.c powerpc-apple-rhapsody/lib/hashtable.c
*** i686-unknown-linux/lib/hashtable.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/hashtable.c	Thu Jun 27 17:35:18 2002
***************
*** 669,681 ****
  _dynforward_ptr s);int Cyc_Hashtable_hash_stringptr(struct _dynforward_ptr*p);void
  Cyc_Hashtable_iter(void(*f)(void*,void*),struct Cyc_Hashtable_Table*t);void Cyc_Hashtable_iter_c(
  void(*f)(void*,void*,void*),struct Cyc_Hashtable_Table*t,void*env);void Cyc_Hashtable_print_table_map(
! struct Cyc_Hashtable_Table*t,void(*prn_key)(void*),void(*prn_val)(void*));typedef
! struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
! int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
  int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{
--- 669,679 ----
  _dynforward_ptr s);int Cyc_Hashtable_hash_stringptr(struct _dynforward_ptr*p);void
  Cyc_Hashtable_iter(void(*f)(void*,void*),struct Cyc_Hashtable_Table*t);void Cyc_Hashtable_iter_c(
  void(*f)(void*,void*,void*),struct Cyc_Hashtable_Table*t,void*env);void Cyc_Hashtable_print_table_map(
! struct Cyc_Hashtable_Table*t,void(*prn_key)(void*),void(*prn_val)(void*));struct
! Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;
! struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};
! struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{int
! tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
  int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/lexing.c powerpc-apple-rhapsody/lib/lexing.c
*** i686-unknown-linux/lib/lexing.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/lexing.c	Thu Jun 27 17:35:18 2002
***************
*** 659,668 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
--- 659,666 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct
! Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
***************
*** 689,695 ****
  struct Cyc_Lexing_lexbuf*);int Cyc_Lexing_lexeme_end(struct Cyc_Lexing_lexbuf*);
  struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern char Cyc_List_List_mismatch[
  18];extern char Cyc_List_Nth[8];struct _dynforward_ptr Cyc_zstrncpy(struct
! _dynforward_ptr,struct _dynforward_ptr,unsigned int);struct _dynforward_ptr Cyc_strdup(
  struct _dynforward_ptr src);char Cyc_Lexing_Error[10]="\000\000\000\000Error\000";
  struct Cyc_Lexing_lexbuf;struct Cyc_Lexing_function_lexbuf_state;struct Cyc_Lexing_lex_tables;
  static char Cyc_Lexing_aux_buffer_v[1]={'\000'};static struct _dynforward_ptr Cyc_Lexing_aux_buffer={(
--- 687,693 ----
  struct Cyc_Lexing_lexbuf*);int Cyc_Lexing_lexeme_end(struct Cyc_Lexing_lexbuf*);
  struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern char Cyc_List_List_mismatch[
  18];extern char Cyc_List_Nth[8];struct _dynforward_ptr Cyc_zstrncpy(struct
! _dynforward_ptr,struct _dynforward_ptr,unsigned long);struct _dynforward_ptr Cyc_strdup(
  struct _dynforward_ptr src);char Cyc_Lexing_Error[10]="\000\000\000\000Error\000";
  struct Cyc_Lexing_lexbuf;struct Cyc_Lexing_function_lexbuf_state;struct Cyc_Lexing_lex_tables;
  static char Cyc_Lexing_aux_buffer_v[1]={'\000'};static struct _dynforward_ptr Cyc_Lexing_aux_buffer={(
***************
*** 704,718 ****
  oldlen * 2;struct _dynforward_ptr newbuf=Cyc_Core_new_string((unsigned int)(newlen + 
  1));Cyc_zstrncpy(_dynforward_ptr_plus(_dynforward_ptr_decrease_size(newbuf,
  sizeof(char),1),sizeof(char),oldlen),(struct _dynforward_ptr)lexbuf->lex_buffer,(
! unsigned int)oldlen);lexbuf->lex_buffer=newbuf;lexbuf->lex_buffer_len=newlen;
  lexbuf->lex_abs_pos=lexbuf->lex_abs_pos - oldlen;lexbuf->lex_curr_pos=lexbuf->lex_curr_pos
  + oldlen;lexbuf->lex_start_pos=lexbuf->lex_start_pos + oldlen;lexbuf->lex_last_pos=
  lexbuf->lex_last_pos + oldlen;}Cyc_zstrncpy(_dynforward_ptr_decrease_size(lexbuf->lex_buffer,
  sizeof(char),1),(struct _dynforward_ptr)_dynforward_ptr_plus(lexbuf->lex_buffer,
! sizeof(char),n),(unsigned int)(lexbuf->lex_buffer_len - n));Cyc_zstrncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(lexbuf->lex_buffer,sizeof(
  char),lexbuf->lex_buffer_len - n),sizeof(char),1),(struct _dynforward_ptr)Cyc_Lexing_aux_buffer,(
! unsigned int)n);lexbuf->lex_abs_pos=lexbuf->lex_abs_pos + n;lexbuf->lex_curr_pos=
  lexbuf->lex_curr_pos - n;lexbuf->lex_start_pos=lexbuf->lex_start_pos - n;lexbuf->lex_last_pos=
  lexbuf->lex_last_pos - n;}}struct Cyc_Lexing_lexbuf*Cyc_Lexing_from_function(int(*
  read_fun)(struct _dynforward_ptr,int,void*),void*read_fun_state){return({struct
--- 702,716 ----
  oldlen * 2;struct _dynforward_ptr newbuf=Cyc_Core_new_string((unsigned int)(newlen + 
  1));Cyc_zstrncpy(_dynforward_ptr_plus(_dynforward_ptr_decrease_size(newbuf,
  sizeof(char),1),sizeof(char),oldlen),(struct _dynforward_ptr)lexbuf->lex_buffer,(
! unsigned long)oldlen);lexbuf->lex_buffer=newbuf;lexbuf->lex_buffer_len=newlen;
  lexbuf->lex_abs_pos=lexbuf->lex_abs_pos - oldlen;lexbuf->lex_curr_pos=lexbuf->lex_curr_pos
  + oldlen;lexbuf->lex_start_pos=lexbuf->lex_start_pos + oldlen;lexbuf->lex_last_pos=
  lexbuf->lex_last_pos + oldlen;}Cyc_zstrncpy(_dynforward_ptr_decrease_size(lexbuf->lex_buffer,
  sizeof(char),1),(struct _dynforward_ptr)_dynforward_ptr_plus(lexbuf->lex_buffer,
! sizeof(char),n),(unsigned long)(lexbuf->lex_buffer_len - n));Cyc_zstrncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(lexbuf->lex_buffer,sizeof(
  char),lexbuf->lex_buffer_len - n),sizeof(char),1),(struct _dynforward_ptr)Cyc_Lexing_aux_buffer,(
! unsigned long)n);lexbuf->lex_abs_pos=lexbuf->lex_abs_pos + n;lexbuf->lex_curr_pos=
  lexbuf->lex_curr_pos - n;lexbuf->lex_start_pos=lexbuf->lex_start_pos - n;lexbuf->lex_last_pos=
  lexbuf->lex_last_pos - n;}}struct Cyc_Lexing_lexbuf*Cyc_Lexing_from_function(int(*
  read_fun)(struct _dynforward_ptr,int,void*),void*read_fun_state){return({struct
***************
*** 738,744 ****
  struct _dynforward_ptr s=Cyc_Core_new_string((unsigned int)(len + 1));Cyc_zstrncpy(
  _dynforward_ptr_decrease_size(s,sizeof(char),1),(struct _dynforward_ptr)
  _dynforward_ptr_plus(lbuf->lex_buffer,sizeof(char),lbuf->lex_start_pos),(
! unsigned int)len);({struct _dynforward_ptr _tmp3=_dynforward_ptr_plus(s,sizeof(
  char),len);char _tmp4=*((char*)_check_dynforward_subscript(_tmp3,sizeof(char),0));
  char _tmp5='\000';if(_get_dynforward_size(_tmp3,sizeof(char))== 1  && (_tmp4 == '\000'
   && _tmp5 != '\000'))_throw_arraybounds();*((char*)_tmp3.curr)=_tmp5;});return s;}
--- 736,742 ----
  struct _dynforward_ptr s=Cyc_Core_new_string((unsigned int)(len + 1));Cyc_zstrncpy(
  _dynforward_ptr_decrease_size(s,sizeof(char),1),(struct _dynforward_ptr)
  _dynforward_ptr_plus(lbuf->lex_buffer,sizeof(char),lbuf->lex_start_pos),(
! unsigned long)len);({struct _dynforward_ptr _tmp3=_dynforward_ptr_plus(s,sizeof(
  char),len);char _tmp4=*((char*)_check_dynforward_subscript(_tmp3,sizeof(char),0));
  char _tmp5='\000';if(_get_dynforward_size(_tmp3,sizeof(char))== 1  && (_tmp4 == '\000'
   && _tmp5 != '\000'))_throw_arraybounds();*((char*)_tmp3.curr)=_tmp5;});return s;}
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/lineno.c powerpc-apple-rhapsody/lib/lineno.c
*** i686-unknown-linux/lib/lineno.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/lineno.c	Thu Jun 27 17:35:18 2002
***************
*** 660,669 ****
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
--- 660,667 ----
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct
! Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
***************
*** 687,697 ****
  struct _dynforward_ptr Cyc_Lexing_lexeme(struct Cyc_Lexing_lexbuf*);int Cyc_Lexing_lexeme_end(
  struct Cyc_Lexing_lexbuf*);struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};
  extern char Cyc_List_List_mismatch[18];struct Cyc_List_List*Cyc_List_merge_sort(int(*
! cmp)(void*,void*),struct Cyc_List_List*x);extern char Cyc_List_Nth[8];unsigned int
  Cyc_strlen(struct _dynforward_ptr s);struct _dynforward_ptr Cyc_strdup(struct
  _dynforward_ptr src);struct _dynforward_ptr Cyc_substring(struct _dynforward_ptr,int
! ofs,unsigned int n);struct Cyc_Lineno_Pos{struct _dynforward_ptr logical_file;struct
! _dynforward_ptr line;int line_no;int col;};struct Cyc_Lineno_Pos*Cyc_Lineno_pos_of_abs(
  struct _dynforward_ptr,int);void Cyc_Lineno_poss_of_abss(struct _dynforward_ptr
  filename,struct Cyc_List_List*places);const int Cyc_Lineno_lex_base[8]=(const int[8]){
  0,1,- 2,2,5,- 3,- 1,6};const int Cyc_Lineno_lex_backtrk[8]=(const int[8]){- 1,- 1,- 1,1,-
--- 685,695 ----
  struct _dynforward_ptr Cyc_Lexing_lexeme(struct Cyc_Lexing_lexbuf*);int Cyc_Lexing_lexeme_end(
  struct Cyc_Lexing_lexbuf*);struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};
  extern char Cyc_List_List_mismatch[18];struct Cyc_List_List*Cyc_List_merge_sort(int(*
! cmp)(void*,void*),struct Cyc_List_List*x);extern char Cyc_List_Nth[8];unsigned long
  Cyc_strlen(struct _dynforward_ptr s);struct _dynforward_ptr Cyc_strdup(struct
  _dynforward_ptr src);struct _dynforward_ptr Cyc_substring(struct _dynforward_ptr,int
! ofs,unsigned long n);struct Cyc_Lineno_Pos{struct _dynforward_ptr logical_file;
! struct _dynforward_ptr line;int line_no;int col;};struct Cyc_Lineno_Pos*Cyc_Lineno_pos_of_abs(
  struct _dynforward_ptr,int);void Cyc_Lineno_poss_of_abss(struct _dynforward_ptr
  filename,struct Cyc_List_List*places);const int Cyc_Lineno_lex_base[8]=(const int[8]){
  0,1,- 2,2,5,- 3,- 1,6};const int Cyc_Lineno_lex_backtrk[8]=(const int[8]){- 1,- 1,- 1,1,-
***************
*** 749,755 ****
  struct Cyc_Core_Opt*_tmp9=0;_npop_handler(0);return _tmp9;}{int number=0;if(({
  struct Cyc_IntPtr_sa_struct _tmpC;_tmpC.tag=2;_tmpC.f1=& number;{void*_tmpA[1]={&
  _tmpC};Cyc_sscanf((struct _dynforward_ptr)Cyc_substring((struct _dynforward_ptr)
! line,i,(unsigned int)(j - i)),({const char*_tmpB="%d";_tag_dynforward(_tmpB,
  sizeof(char),_get_zero_arr_size(_tmpB,3));}),_tag_dynforward(_tmpA,sizeof(void*),
  1));}})!= 1){struct Cyc_Core_Opt*_tmpD=0;_npop_handler(0);return _tmpD;}while(j < 
  _get_dynforward_size(line,sizeof(char)) && ((char*)line.curr)[j]!= '"'){++ j;}{
--- 747,753 ----
  struct Cyc_Core_Opt*_tmp9=0;_npop_handler(0);return _tmp9;}{int number=0;if(({
  struct Cyc_IntPtr_sa_struct _tmpC;_tmpC.tag=2;_tmpC.f1=& number;{void*_tmpA[1]={&
  _tmpC};Cyc_sscanf((struct _dynforward_ptr)Cyc_substring((struct _dynforward_ptr)
! line,i,(unsigned long)(j - i)),({const char*_tmpB="%d";_tag_dynforward(_tmpB,
  sizeof(char),_get_zero_arr_size(_tmpB,3));}),_tag_dynforward(_tmpA,sizeof(void*),
  1));}})!= 1){struct Cyc_Core_Opt*_tmpD=0;_npop_handler(0);return _tmpD;}while(j < 
  _get_dynforward_size(line,sizeof(char)) && ((char*)line.curr)[j]!= '"'){++ j;}{
***************
*** 757,763 ****
  k]!= '"'){++ k;}if(j == _get_dynforward_size(line,sizeof(char)) || k == 
  _get_dynforward_size(line,sizeof(char))){struct Cyc_Core_Opt*_tmpE=0;
  _npop_handler(0);return _tmpE;}{struct _dynforward_ptr fname=Cyc_substring((struct
! _dynforward_ptr)line,j,(unsigned int)(k - j));struct Cyc_Core_Opt*_tmp11=({struct
  Cyc_Core_Opt*_tmpF=_cycalloc(sizeof(*_tmpF));_tmpF->v=({struct _tuple0*_tmp10=
  _cycalloc(sizeof(*_tmp10));_tmp10->f1=fname;_tmp10->f2=number;_tmp10;});_tmpF;});
  _npop_handler(0);return _tmp11;}}}}};_pop_handler();}else{void*_tmp7=(void*)
--- 755,761 ----
  k]!= '"'){++ k;}if(j == _get_dynforward_size(line,sizeof(char)) || k == 
  _get_dynforward_size(line,sizeof(char))){struct Cyc_Core_Opt*_tmpE=0;
  _npop_handler(0);return _tmpE;}{struct _dynforward_ptr fname=Cyc_substring((struct
! _dynforward_ptr)line,j,(unsigned long)(k - j));struct Cyc_Core_Opt*_tmp11=({struct
  Cyc_Core_Opt*_tmpF=_cycalloc(sizeof(*_tmpF));_tmpF->v=({struct _tuple0*_tmp10=
  _cycalloc(sizeof(*_tmp10));_tmp10->f1=fname;_tmp10->f2=number;_tmp10;});_tmpF;});
  _npop_handler(0);return _tmp11;}}}}};_pop_handler();}else{void*_tmp7=(void*)
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/marshal.c powerpc-apple-rhapsody/lib/marshal.c
*** i686-unknown-linux/lib/marshal.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/marshal.c	Thu Jun 27 17:35:18 2002
***************
*** 684,702 ****
  struct _dynforward_ptr l);struct _dynforward_ptr Cyc_Typerep_get_tagname2(
  unsigned int tag,struct _dynforward_ptr l);struct _tuple4 Cyc_Typerep_get_xtunionbranch(
  struct _dynforward_ptr tag,struct _dynforward_ptr l);unsigned int Cyc_Typerep_size_type(
! void*rep);typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}
! __value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdout;
! extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};int Cyc_fgetc(struct Cyc___cycFILE*);int Cyc_fprintf(
  struct Cyc___cycFILE*,struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_fputc(
! int,struct Cyc___cycFILE*);unsigned int Cyc_fread(struct _dynforward_ptr,
! unsigned int,unsigned int,struct Cyc___cycFILE*);struct Cyc_ShortPtr_sa_struct{int
! tag;short*f1;};struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct
! Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;
  unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct _dynforward_ptr f1;}
  ;struct Cyc_DoublePtr_sa_struct{int tag;double*f1;};struct Cyc_FloatPtr_sa_struct{
  int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int tag;struct _dynforward_ptr f1;};
--- 684,700 ----
  struct _dynforward_ptr l);struct _dynforward_ptr Cyc_Typerep_get_tagname2(
  unsigned int tag,struct _dynforward_ptr l);struct _tuple4 Cyc_Typerep_get_xtunionbranch(
  struct _dynforward_ptr tag,struct _dynforward_ptr l);unsigned int Cyc_Typerep_size_type(
! void*rep);struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdout;extern struct
! Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};int Cyc_fgetc(struct Cyc___cycFILE*);int Cyc_fprintf(
  struct Cyc___cycFILE*,struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_fputc(
! int,struct Cyc___cycFILE*);unsigned long Cyc_fread(struct _dynforward_ptr,
! unsigned long,unsigned long,struct Cyc___cycFILE*);struct Cyc_ShortPtr_sa_struct{
! int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};
! struct Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;
  unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct _dynforward_ptr f1;}
  ;struct Cyc_DoublePtr_sa_struct{int tag;double*f1;};struct Cyc_FloatPtr_sa_struct{
  int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int tag;struct _dynforward_ptr f1;};
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/position.c powerpc-apple-rhapsody/lib/position.c
*** i686-unknown-linux/lib/position.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/position.c	Thu Jun 27 17:35:18 2002
***************
*** 661,672 ****
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern
  char Cyc_List_List_mismatch[18];struct Cyc_List_List*Cyc_List_imp_rev(struct Cyc_List_List*
! x);extern char Cyc_List_Nth[8];typedef struct{int __count;union{unsigned int __wch;
! char __wchb[4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t
! __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;extern
! struct Cyc___cycFILE*Cyc_stdout;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fflush(struct Cyc___cycFILE*);int Cyc_fprintf(struct
--- 661,670 ----
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern
  char Cyc_List_List_mismatch[18];struct Cyc_List_List*Cyc_List_imp_rev(struct Cyc_List_List*
! x);extern char Cyc_List_Nth[8];struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdout;
! extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fflush(struct Cyc___cycFILE*);int Cyc_fprintf(struct
***************
*** 697,708 ****
  14];extern int Cyc_Position_use_gcc_style_location;extern int Cyc_Position_print_context;
  extern int Cyc_Position_num_errors;extern int Cyc_Position_max_errors;void Cyc_Position_post_error(
  struct Cyc_Position_Error*);int Cyc_Position_error_p();struct _dynforward_ptr Cyc_Position_get_line_directive(
! struct Cyc_Position_Segment*loc);unsigned int Cyc_strlen(struct _dynforward_ptr s);
  int Cyc_strcmp(struct _dynforward_ptr s1,struct _dynforward_ptr s2);struct
  _dynforward_ptr Cyc_strncpy(struct _dynforward_ptr,struct _dynforward_ptr,
! unsigned int);struct _dynforward_ptr Cyc_substring(struct _dynforward_ptr,int ofs,
! unsigned int n);struct Cyc_Typerep_Int_struct{int tag;int f1;unsigned int f2;};struct
! Cyc_Typerep_ThinPtr_struct{int tag;unsigned int f1;void*f2;};struct Cyc_Typerep_FatPtr_struct{
  int tag;void*f1;};struct _tuple0{unsigned int f1;struct _dynforward_ptr f2;void*f3;};
  struct Cyc_Typerep_Struct_struct{int tag;struct _dynforward_ptr*f1;unsigned int f2;
  struct _dynforward_ptr f3;};struct _tuple1{unsigned int f1;void*f2;};struct Cyc_Typerep_Tuple_struct{
--- 695,706 ----
  14];extern int Cyc_Position_use_gcc_style_location;extern int Cyc_Position_print_context;
  extern int Cyc_Position_num_errors;extern int Cyc_Position_max_errors;void Cyc_Position_post_error(
  struct Cyc_Position_Error*);int Cyc_Position_error_p();struct _dynforward_ptr Cyc_Position_get_line_directive(
! struct Cyc_Position_Segment*loc);unsigned long Cyc_strlen(struct _dynforward_ptr s);
  int Cyc_strcmp(struct _dynforward_ptr s1,struct _dynforward_ptr s2);struct
  _dynforward_ptr Cyc_strncpy(struct _dynforward_ptr,struct _dynforward_ptr,
! unsigned long);struct _dynforward_ptr Cyc_substring(struct _dynforward_ptr,int ofs,
! unsigned long n);struct Cyc_Typerep_Int_struct{int tag;int f1;unsigned int f2;};
! struct Cyc_Typerep_ThinPtr_struct{int tag;unsigned int f1;void*f2;};struct Cyc_Typerep_FatPtr_struct{
  int tag;void*f1;};struct _tuple0{unsigned int f1;struct _dynforward_ptr f2;void*f3;};
  struct Cyc_Typerep_Struct_struct{int tag;struct _dynforward_ptr*f1;unsigned int f2;
  struct _dynforward_ptr f3;};struct _tuple1{unsigned int f1;void*f2;};struct Cyc_Typerep_Tuple_struct{
***************
*** 817,827 ****
  if(len < n)return s;{int len_one=(n - 3)/ 2;int len_two=(n - 3)- len_one;struct
  _dynforward_ptr mans=Cyc_Core_new_string((unsigned int)(n + 1));struct
  _dynforward_ptr ans=_dynforward_ptr_decrease_size(mans,sizeof(char),1);Cyc_strncpy(
! ans,(struct _dynforward_ptr)s,(unsigned int)len_one);Cyc_strncpy(
  _dynforward_ptr_plus(ans,sizeof(char),len_one),({const char*_tmp33="...";
  _tag_dynforward(_tmp33,sizeof(char),_get_zero_arr_size(_tmp33,4));}),3);Cyc_strncpy(
  _dynforward_ptr_plus(ans,sizeof(char),len_one + 3),(struct _dynforward_ptr)
! _dynforward_ptr_plus(s,sizeof(char),len - len_two),(unsigned int)len_two);return
  mans;}}static int Cyc_Position_line_length=76;struct _tuple5{struct _dynforward_ptr
  f1;int f2;int f3;};static struct _tuple5*Cyc_Position_get_context(struct Cyc_Position_Segment*
  seg){if(seg == 0)(int)_throw((void*)Cyc_Position_Nocontext);{struct Cyc_Lineno_Pos*
--- 815,825 ----
  if(len < n)return s;{int len_one=(n - 3)/ 2;int len_two=(n - 3)- len_one;struct
  _dynforward_ptr mans=Cyc_Core_new_string((unsigned int)(n + 1));struct
  _dynforward_ptr ans=_dynforward_ptr_decrease_size(mans,sizeof(char),1);Cyc_strncpy(
! ans,(struct _dynforward_ptr)s,(unsigned long)len_one);Cyc_strncpy(
  _dynforward_ptr_plus(ans,sizeof(char),len_one),({const char*_tmp33="...";
  _tag_dynforward(_tmp33,sizeof(char),_get_zero_arr_size(_tmp33,4));}),3);Cyc_strncpy(
  _dynforward_ptr_plus(ans,sizeof(char),len_one + 3),(struct _dynforward_ptr)
! _dynforward_ptr_plus(s,sizeof(char),len - len_two),(unsigned long)len_two);return
  mans;}}static int Cyc_Position_line_length=76;struct _tuple5{struct _dynforward_ptr
  f1;int f2;int f3;};static struct _tuple5*Cyc_Position_get_context(struct Cyc_Position_Segment*
  seg){if(seg == 0)(int)_throw((void*)Cyc_Position_Nocontext);{struct Cyc_Lineno_Pos*
***************
*** 837,844 ****
  pos_e;_tmp3F=*_tmp3E;_tmp40=_tmp3F.line;_tmp41=_tmp3F.line_no;_tmp42=_tmp3F.col;
  if(_tmp3C == _tmp41){int n=Cyc_Position_line_length / 3;struct _dynforward_ptr
  sec_one=Cyc_Position_trunc(n,Cyc_substring((struct _dynforward_ptr)_tmp3B,0,(
! unsigned int)_tmp3D));struct _dynforward_ptr sec_two=Cyc_Position_trunc(n,Cyc_substring((
! struct _dynforward_ptr)_tmp3B,_tmp3D,(unsigned int)(_tmp42 - _tmp3D)));struct
  _dynforward_ptr sec_three=Cyc_Position_trunc(n,Cyc_substring((struct
  _dynforward_ptr)_tmp3B,_tmp3D,Cyc_strlen((struct _dynforward_ptr)_tmp3B)- _tmp42));
  return({struct _tuple5*_tmp43=_cycalloc(sizeof(*_tmp43));_tmp43->f1=({struct Cyc_String_pa_struct
--- 835,842 ----
  pos_e;_tmp3F=*_tmp3E;_tmp40=_tmp3F.line;_tmp41=_tmp3F.line_no;_tmp42=_tmp3F.col;
  if(_tmp3C == _tmp41){int n=Cyc_Position_line_length / 3;struct _dynforward_ptr
  sec_one=Cyc_Position_trunc(n,Cyc_substring((struct _dynforward_ptr)_tmp3B,0,(
! unsigned long)_tmp3D));struct _dynforward_ptr sec_two=Cyc_Position_trunc(n,Cyc_substring((
! struct _dynforward_ptr)_tmp3B,_tmp3D,(unsigned long)(_tmp42 - _tmp3D)));struct
  _dynforward_ptr sec_three=Cyc_Position_trunc(n,Cyc_substring((struct
  _dynforward_ptr)_tmp3B,_tmp3D,Cyc_strlen((struct _dynforward_ptr)_tmp3B)- _tmp42));
  return({struct _tuple5*_tmp43=_cycalloc(sizeof(*_tmp43));_tmp43->f1=({struct Cyc_String_pa_struct
***************
*** 852,862 ****
  struct _dynforward_ptr)sec_one);_tmp43->f3=(int)(Cyc_strlen((struct
  _dynforward_ptr)sec_one)+ Cyc_strlen((struct _dynforward_ptr)sec_two));_tmp43;});}
  else{int n=(Cyc_Position_line_length - 3)/ 4;struct _dynforward_ptr sec_one=Cyc_Position_trunc(
! n,Cyc_substring((struct _dynforward_ptr)_tmp3B,0,(unsigned int)_tmp3D));struct
  _dynforward_ptr sec_two=Cyc_Position_trunc(n,Cyc_substring((struct _dynforward_ptr)
  _tmp3B,_tmp3D,Cyc_strlen((struct _dynforward_ptr)_tmp3B)- _tmp3D));struct
  _dynforward_ptr sec_three=Cyc_Position_trunc(n,Cyc_substring((struct
! _dynforward_ptr)_tmp40,0,(unsigned int)_tmp42));struct _dynforward_ptr sec_four=
  Cyc_Position_trunc(n,Cyc_substring((struct _dynforward_ptr)_tmp40,_tmp42,Cyc_strlen((
  struct _dynforward_ptr)_tmp40)- _tmp42));return({struct _tuple5*_tmp49=_cycalloc(
  sizeof(*_tmp49));_tmp49->f1=({struct Cyc_String_pa_struct _tmp4F;_tmp4F.tag=0;
--- 850,860 ----
  struct _dynforward_ptr)sec_one);_tmp43->f3=(int)(Cyc_strlen((struct
  _dynforward_ptr)sec_one)+ Cyc_strlen((struct _dynforward_ptr)sec_two));_tmp43;});}
  else{int n=(Cyc_Position_line_length - 3)/ 4;struct _dynforward_ptr sec_one=Cyc_Position_trunc(
! n,Cyc_substring((struct _dynforward_ptr)_tmp3B,0,(unsigned long)_tmp3D));struct
  _dynforward_ptr sec_two=Cyc_Position_trunc(n,Cyc_substring((struct _dynforward_ptr)
  _tmp3B,_tmp3D,Cyc_strlen((struct _dynforward_ptr)_tmp3B)- _tmp3D));struct
  _dynforward_ptr sec_three=Cyc_Position_trunc(n,Cyc_substring((struct
! _dynforward_ptr)_tmp40,0,(unsigned long)_tmp42));struct _dynforward_ptr sec_four=
  Cyc_Position_trunc(n,Cyc_substring((struct _dynforward_ptr)_tmp40,_tmp42,Cyc_strlen((
  struct _dynforward_ptr)_tmp40)- _tmp42));return({struct _tuple5*_tmp49=_cycalloc(
  sizeof(*_tmp49));_tmp49->f1=({struct Cyc_String_pa_struct _tmp4F;_tmp4F.tag=0;
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/pp.c powerpc-apple-rhapsody/lib/pp.c
*** i686-unknown-linux/lib/pp.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/pp.c	Thu Jun 27 17:35:18 2002
***************
*** 660,669 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};int Cyc_fprintf(struct Cyc___cycFILE*,struct
--- 660,667 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct
! Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};int Cyc_fprintf(struct Cyc___cycFILE*,struct
***************
*** 675,681 ****
  tag;struct _dynforward_ptr f1;};extern char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[
  18];struct Cyc_FileOpenError_struct{char*tag;struct _dynforward_ptr f1;};struct Cyc_List_List{
  void*hd;struct Cyc_List_List*tl;};int Cyc_List_length(struct Cyc_List_List*x);
! extern char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];unsigned int Cyc_strlen(
  struct _dynforward_ptr s);int Cyc_zstrptrcmp(struct _dynforward_ptr*,struct
  _dynforward_ptr*);struct _dynforward_ptr Cyc_str_sepstr(struct Cyc_List_List*,
  struct _dynforward_ptr);struct Cyc_Hashtable_Table;struct Cyc_Hashtable_Table*Cyc_Hashtable_create(
--- 673,679 ----
  tag;struct _dynforward_ptr f1;};extern char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[
  18];struct Cyc_FileOpenError_struct{char*tag;struct _dynforward_ptr f1;};struct Cyc_List_List{
  void*hd;struct Cyc_List_List*tl;};int Cyc_List_length(struct Cyc_List_List*x);
! extern char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];unsigned long Cyc_strlen(
  struct _dynforward_ptr s);int Cyc_zstrptrcmp(struct _dynforward_ptr*,struct
  _dynforward_ptr*);struct _dynforward_ptr Cyc_str_sepstr(struct Cyc_List_List*,
  struct _dynforward_ptr);struct Cyc_Hashtable_Table;struct Cyc_Hashtable_Table*Cyc_Hashtable_create(
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/printf.c powerpc-apple-rhapsody/lib/printf.c
*** i686-unknown-linux/lib/printf.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/printf.c	Thu Jun 27 17:35:18 2002
***************
*** 659,670 ****
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;typedef struct{
! int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdout;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fprintf(struct Cyc___cycFILE*,struct _dynforward_ptr,
--- 659,668 ----
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;struct Cyc___cycFILE;
! extern struct Cyc___cycFILE*Cyc_stdout;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fprintf(struct Cyc___cycFILE*,struct _dynforward_ptr,
***************
*** 676,706 ****
  int Cyc_printf(struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_putc(int,
  struct Cyc___cycFILE*);struct _dynforward_ptr Cyc_rprintf(struct _RegionHandle*,
  struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_snprintf(struct
! _dynforward_ptr,unsigned int,struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_sprintf(
! struct _dynforward_ptr,struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_vfprintf(
! struct Cyc___cycFILE*,struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_vprintf(
! struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_vrprintf(
! struct _RegionHandle*,struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_vsnprintf(
! struct _dynforward_ptr,unsigned int,struct _dynforward_ptr,struct _dynforward_ptr);
! int Cyc_vsprintf(struct _dynforward_ptr,struct _dynforward_ptr,struct
! _dynforward_ptr);extern char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[18];
! struct Cyc_FileOpenError_struct{char*tag;struct _dynforward_ptr f1;};struct Cyc_List_List{
! void*hd;struct Cyc_List_List*tl;};extern char Cyc_List_List_mismatch[18];extern char
! Cyc_List_Nth[8];typedef struct{int quot;int rem;}Cyc_div_t;typedef struct{long quot;
! long rem;}Cyc_ldiv_t;void*abort();void exit(int);double modf(double,double*);static
! struct _dynforward_ptr Cyc_parg2string(void*x){void*_tmp0=x;_LL1: if(*((int*)_tmp0)
! != 0)goto _LL3;_LL2: return({const char*_tmp1="string";_tag_dynforward(_tmp1,
! sizeof(char),_get_zero_arr_size(_tmp1,7));});_LL3: if(*((int*)_tmp0)!= 1)goto _LL5;
! _LL4: return({const char*_tmp2="int";_tag_dynforward(_tmp2,sizeof(char),
! _get_zero_arr_size(_tmp2,4));});_LL5: if(*((int*)_tmp0)!= 2)goto _LL7;_LL6: return({
! const char*_tmp3="double";_tag_dynforward(_tmp3,sizeof(char),_get_zero_arr_size(
! _tmp3,7));});_LL7: if(*((int*)_tmp0)!= 3)goto _LL9;_LL8: return({const char*_tmp4="long double";
! _tag_dynforward(_tmp4,sizeof(char),_get_zero_arr_size(_tmp4,12));});_LL9: if(*((
! int*)_tmp0)!= 4)goto _LLB;_LLA: return({const char*_tmp5="short *";_tag_dynforward(
! _tmp5,sizeof(char),_get_zero_arr_size(_tmp5,8));});_LLB: if(*((int*)_tmp0)!= 5)
! goto _LL0;_LLC: return({const char*_tmp6="unsigned long *";_tag_dynforward(_tmp6,
! sizeof(char),_get_zero_arr_size(_tmp6,16));});_LL0:;}static void*Cyc_badarg(
! struct _dynforward_ptr s){return(void*)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*
  _tmp7=_cycalloc(sizeof(*_tmp7));_tmp7[0]=({struct Cyc_Core_Invalid_argument_struct
  _tmp8;_tmp8.tag=Cyc_Core_Invalid_argument;_tmp8.f1=s;_tmp8;});_tmp7;}));}static
  int Cyc_va_arg_int(struct _dynforward_ptr ap){void*_tmp9=*((void**)
--- 674,705 ----
  int Cyc_printf(struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_putc(int,
  struct Cyc___cycFILE*);struct _dynforward_ptr Cyc_rprintf(struct _RegionHandle*,
  struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_snprintf(struct
! _dynforward_ptr,unsigned long,struct _dynforward_ptr,struct _dynforward_ptr);int
! Cyc_sprintf(struct _dynforward_ptr,struct _dynforward_ptr,struct _dynforward_ptr);
! int Cyc_vfprintf(struct Cyc___cycFILE*,struct _dynforward_ptr,struct _dynforward_ptr);
! int Cyc_vprintf(struct _dynforward_ptr,struct _dynforward_ptr);struct
! _dynforward_ptr Cyc_vrprintf(struct _RegionHandle*,struct _dynforward_ptr,struct
! _dynforward_ptr);int Cyc_vsnprintf(struct _dynforward_ptr,unsigned long,struct
! _dynforward_ptr,struct _dynforward_ptr);int Cyc_vsprintf(struct _dynforward_ptr,
! struct _dynforward_ptr,struct _dynforward_ptr);extern char Cyc_FileCloseError[19];
! extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern
! char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];typedef struct{int quot;
! int rem;}Cyc_div_t;typedef struct{long quot;long rem;}Cyc_ldiv_t;void*abort();void
! exit(int);double modf(double,double*);static struct _dynforward_ptr Cyc_parg2string(
! void*x){void*_tmp0=x;_LL1: if(*((int*)_tmp0)!= 0)goto _LL3;_LL2: return({const char*
! _tmp1="string";_tag_dynforward(_tmp1,sizeof(char),_get_zero_arr_size(_tmp1,7));});
! _LL3: if(*((int*)_tmp0)!= 1)goto _LL5;_LL4: return({const char*_tmp2="int";
! _tag_dynforward(_tmp2,sizeof(char),_get_zero_arr_size(_tmp2,4));});_LL5: if(*((
! int*)_tmp0)!= 2)goto _LL7;_LL6: return({const char*_tmp3="double";_tag_dynforward(
! _tmp3,sizeof(char),_get_zero_arr_size(_tmp3,7));});_LL7: if(*((int*)_tmp0)!= 3)
! goto _LL9;_LL8: return({const char*_tmp4="long double";_tag_dynforward(_tmp4,
! sizeof(char),_get_zero_arr_size(_tmp4,12));});_LL9: if(*((int*)_tmp0)!= 4)goto
! _LLB;_LLA: return({const char*_tmp5="short *";_tag_dynforward(_tmp5,sizeof(char),
! _get_zero_arr_size(_tmp5,8));});_LLB: if(*((int*)_tmp0)!= 5)goto _LL0;_LLC: return({
! const char*_tmp6="unsigned long *";_tag_dynforward(_tmp6,sizeof(char),
! _get_zero_arr_size(_tmp6,16));});_LL0:;}static void*Cyc_badarg(struct
! _dynforward_ptr s){return(void*)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*
  _tmp7=_cycalloc(sizeof(*_tmp7));_tmp7[0]=({struct Cyc_Core_Invalid_argument_struct
  _tmp8;_tmp8.tag=Cyc_Core_Invalid_argument;_tmp8.f1=s;_tmp8;});_tmp7;}));}static
  int Cyc_va_arg_int(struct _dynforward_ptr ap){void*_tmp9=*((void**)
***************
*** 774,780 ****
  struct _dynforward_ptr s,char c,int n){int sz=(int)_get_dynforward_size(s,sizeof(char));
  n=n < sz?n: sz;for(0;n != 0;(n --,_dynforward_ptr_inplace_plus_post(& s,sizeof(char),
  1))){if(*((const char*)_check_dynforward_subscript(s,sizeof(char),0))== c)return s;}
! return(struct _dynforward_ptr)_tag_dynforward(0,0,0);}static unsigned int Cyc_my_strlen(
  struct _dynforward_ptr s){unsigned int sz=_get_dynforward_size(s,sizeof(char));
  unsigned int i=0;while(i < sz  && ((const char*)s.curr)[(int)i]!= 0){i ++;}return i;}
  int Cyc__IO_vfprintf(int(*ioputc)(int,void*),void*ioputc_env,struct
--- 773,779 ----
  struct _dynforward_ptr s,char c,int n){int sz=(int)_get_dynforward_size(s,sizeof(char));
  n=n < sz?n: sz;for(0;n != 0;(n --,_dynforward_ptr_inplace_plus_post(& s,sizeof(char),
  1))){if(*((const char*)_check_dynforward_subscript(s,sizeof(char),0))== c)return s;}
! return(struct _dynforward_ptr)_tag_dynforward(0,0,0);}static unsigned long Cyc_my_strlen(
  struct _dynforward_ptr s){unsigned int sz=_get_dynforward_size(s,sizeof(char));
  unsigned int i=0;while(i < sz  && ((const char*)s.curr)[(int)i]!= 0){i ++;}return i;}
  int Cyc__IO_vfprintf(int(*ioputc)(int,void*),void*ioputc_env,struct
***************
*** 1125,1144 ****
  struct _dynforward_ptr fmt0,struct _dynforward_ptr ap))Cyc__IO_vfprintf)(Cyc_putc,
  Cyc_stdout,fmt,ap);return ans;}int Cyc_printf(struct _dynforward_ptr fmt,struct
  _dynforward_ptr ap){int ans;ans=Cyc_vprintf(fmt,ap);return ans;}struct _tuple0{
! struct _dynforward_ptr*f1;unsigned int*f2;};static int Cyc_putc_string(int c,struct
! _tuple0*sptr_n){struct _tuple0 _tmpB3;struct _dynforward_ptr*_tmpB4;unsigned int*
  _tmpB5;struct _tuple0*_tmpB2=sptr_n;_tmpB3=*_tmpB2;_tmpB4=_tmpB3.f1;_tmpB5=_tmpB3.f2;{
! struct _dynforward_ptr s=*_tmpB4;unsigned int n=*_tmpB5;if(_get_dynforward_size(s,
  sizeof(char))== 0  || n == 0)return - 1;*((char*)_check_dynforward_subscript(s,
  sizeof(char),0))=(char)c;*_tmpB4=_dynforward_ptr_plus(s,sizeof(char),1);*_tmpB5=
! n - 1;return 1;}}int Cyc_vsnprintf(struct _dynforward_ptr s,unsigned int n,struct
  _dynforward_ptr fmt,struct _dynforward_ptr ap){int ans;struct _dynforward_ptr _tmpB6=s;
! unsigned int _tmpB7=n;struct _tuple0 _tmpB8=({struct _tuple0 _tmpB9;_tmpB9.f1=& _tmpB6;
! _tmpB9.f2=& _tmpB7;_tmpB9;});ans=((int(*)(int(*ioputc)(int,struct _tuple0*),struct
! _tuple0*ioputc_env,struct _dynforward_ptr fmt0,struct _dynforward_ptr ap))Cyc__IO_vfprintf)(
  Cyc_putc_string,& _tmpB8,fmt,ap);if(0 <= ans)*((char*)_check_dynforward_subscript(
  s,sizeof(char),ans))='\000';return ans;}int Cyc_snprintf(struct _dynforward_ptr s,
! unsigned int n,struct _dynforward_ptr fmt,struct _dynforward_ptr ap){return Cyc_vsnprintf(
  s,n,fmt,ap);}int Cyc_vsprintf(struct _dynforward_ptr s,struct _dynforward_ptr fmt,
  struct _dynforward_ptr ap){return Cyc_vsnprintf(s,_get_dynforward_size(s,sizeof(
  char)),fmt,ap);}int Cyc_sprintf(struct _dynforward_ptr s,struct _dynforward_ptr fmt,
--- 1124,1143 ----
  struct _dynforward_ptr fmt0,struct _dynforward_ptr ap))Cyc__IO_vfprintf)(Cyc_putc,
  Cyc_stdout,fmt,ap);return ans;}int Cyc_printf(struct _dynforward_ptr fmt,struct
  _dynforward_ptr ap){int ans;ans=Cyc_vprintf(fmt,ap);return ans;}struct _tuple0{
! struct _dynforward_ptr*f1;unsigned long*f2;};static int Cyc_putc_string(int c,struct
! _tuple0*sptr_n){struct _tuple0 _tmpB3;struct _dynforward_ptr*_tmpB4;unsigned long*
  _tmpB5;struct _tuple0*_tmpB2=sptr_n;_tmpB3=*_tmpB2;_tmpB4=_tmpB3.f1;_tmpB5=_tmpB3.f2;{
! struct _dynforward_ptr s=*_tmpB4;unsigned long n=*_tmpB5;if(_get_dynforward_size(s,
  sizeof(char))== 0  || n == 0)return - 1;*((char*)_check_dynforward_subscript(s,
  sizeof(char),0))=(char)c;*_tmpB4=_dynforward_ptr_plus(s,sizeof(char),1);*_tmpB5=
! n - 1;return 1;}}int Cyc_vsnprintf(struct _dynforward_ptr s,unsigned long n,struct
  _dynforward_ptr fmt,struct _dynforward_ptr ap){int ans;struct _dynforward_ptr _tmpB6=s;
! unsigned long _tmpB7=n;struct _tuple0 _tmpB8=({struct _tuple0 _tmpB9;_tmpB9.f1=&
! _tmpB6;_tmpB9.f2=& _tmpB7;_tmpB9;});ans=((int(*)(int(*ioputc)(int,struct _tuple0*),
! struct _tuple0*ioputc_env,struct _dynforward_ptr fmt0,struct _dynforward_ptr ap))Cyc__IO_vfprintf)(
  Cyc_putc_string,& _tmpB8,fmt,ap);if(0 <= ans)*((char*)_check_dynforward_subscript(
  s,sizeof(char),ans))='\000';return ans;}int Cyc_snprintf(struct _dynforward_ptr s,
! unsigned long n,struct _dynforward_ptr fmt,struct _dynforward_ptr ap){return Cyc_vsnprintf(
  s,n,fmt,ap);}int Cyc_vsprintf(struct _dynforward_ptr s,struct _dynforward_ptr fmt,
  struct _dynforward_ptr ap){return Cyc_vsnprintf(s,_get_dynforward_size(s,sizeof(
  char)),fmt,ap);}int Cyc_sprintf(struct _dynforward_ptr s,struct _dynforward_ptr fmt,
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/rope.c powerpc-apple-rhapsody/lib/rope.c
*** i686-unknown-linux/lib/rope.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/rope.c	Thu Jun 27 17:35:18 2002
***************
*** 667,675 ****
  struct Cyc_Rope_Rope_node*Cyc_Rope_concata(struct _dynforward_ptr);struct Cyc_Rope_Rope_node*
  Cyc_Rope_concatl(struct Cyc_List_List*);unsigned int Cyc_Rope_length(struct Cyc_Rope_Rope_node*);
  int Cyc_Rope_cmp(struct Cyc_Rope_Rope_node*,struct Cyc_Rope_Rope_node*);
! unsigned int Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(struct
  _dynforward_ptr s1,struct _dynforward_ptr s2);struct _dynforward_ptr Cyc_strncpy(
! struct _dynforward_ptr,struct _dynforward_ptr,unsigned int);struct Cyc_Rope_String_rope_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Rope_Array_rope_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_Rope_Rope_node{void*v;};struct Cyc_Rope_Rope_node*
  Cyc_Rope_from_string(struct _dynforward_ptr s){return({struct Cyc_Rope_Rope_node*
--- 667,675 ----
  struct Cyc_Rope_Rope_node*Cyc_Rope_concata(struct _dynforward_ptr);struct Cyc_Rope_Rope_node*
  Cyc_Rope_concatl(struct Cyc_List_List*);unsigned int Cyc_Rope_length(struct Cyc_Rope_Rope_node*);
  int Cyc_Rope_cmp(struct Cyc_Rope_Rope_node*,struct Cyc_Rope_Rope_node*);
! unsigned long Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(struct
  _dynforward_ptr s1,struct _dynforward_ptr s2);struct _dynforward_ptr Cyc_strncpy(
! struct _dynforward_ptr,struct _dynforward_ptr,unsigned long);struct Cyc_Rope_String_rope_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Rope_Array_rope_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_Rope_Rope_node{void*v;};struct Cyc_Rope_Rope_node*
  Cyc_Rope_from_string(struct _dynforward_ptr s){return({struct Cyc_Rope_Rope_node*
***************
*** 708,714 ****
  unsigned int i,struct Cyc_Rope_Rope_node*r){void*_tmp14=(void*)r->v;struct
  _dynforward_ptr _tmp15;struct _dynforward_ptr _tmp16;_LL6: if(*((int*)_tmp14)!= 0)
  goto _LL8;_tmp15=((struct Cyc_Rope_String_rope_struct*)_tmp14)->f1;_LL7: {
! unsigned int _tmp17=Cyc_strlen((struct _dynforward_ptr)_tmp15);Cyc_strncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(s,sizeof(char),(int)i),
  sizeof(char),1),(struct _dynforward_ptr)_tmp15,_tmp17);return i + _tmp17;}_LL8: if(*((
  int*)_tmp14)!= 1)goto _LL5;_tmp16=((struct Cyc_Rope_Array_rope_struct*)_tmp14)->f1;
--- 708,714 ----
  unsigned int i,struct Cyc_Rope_Rope_node*r){void*_tmp14=(void*)r->v;struct
  _dynforward_ptr _tmp15;struct _dynforward_ptr _tmp16;_LL6: if(*((int*)_tmp14)!= 0)
  goto _LL8;_tmp15=((struct Cyc_Rope_String_rope_struct*)_tmp14)->f1;_LL7: {
! unsigned long _tmp17=Cyc_strlen((struct _dynforward_ptr)_tmp15);Cyc_strncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(s,sizeof(char),(int)i),
  sizeof(char),1),(struct _dynforward_ptr)_tmp15,_tmp17);return i + _tmp17;}_LL8: if(*((
  int*)_tmp14)!= 1)goto _LL5;_tmp16=((struct Cyc_Rope_Array_rope_struct*)_tmp14)->f1;
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/scanf.c powerpc-apple-rhapsody/lib/scanf.c
*** i686-unknown-linux/lib/scanf.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/scanf.c	Thu Jun 27 17:35:18 2002
***************
*** 662,675 ****
  _dynforward_ptr f1;};int isspace(int);int isupper(int);typedef struct{int quot;int rem;}
  Cyc_div_t;typedef struct{long quot;long rem;}Cyc_ldiv_t;void*abort();double atof(
  const char*);void exit(int);long strtol(char*,char**,int);unsigned long strtoul(char*,
! char**,int);typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}
! __value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdin;
! struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
! _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
! int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
! Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{int tag;
! unsigned long*f1;};int Cyc_fgetc(struct Cyc___cycFILE*);struct Cyc_ShortPtr_sa_struct{
  int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};
  struct Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;
  unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct _dynforward_ptr f1;}
--- 662,672 ----
  _dynforward_ptr f1;};int isspace(int);int isupper(int);typedef struct{int quot;int rem;}
  Cyc_div_t;typedef struct{long quot;long rem;}Cyc_ldiv_t;void*abort();double atof(
  const char*);void exit(int);long strtol(char*,char**,int);unsigned long strtoul(char*,
! char**,int);struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdin;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
! int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
! int tag;unsigned long*f1;};int Cyc_fgetc(struct Cyc___cycFILE*);struct Cyc_ShortPtr_sa_struct{
  int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};
  struct Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;
  unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct _dynforward_ptr f1;}
***************
*** 678,684 ****
  int Cyc_fscanf(struct Cyc___cycFILE*,struct _dynforward_ptr,struct _dynforward_ptr);
  int Cyc_getc(struct Cyc___cycFILE*);int Cyc_scanf(struct _dynforward_ptr,struct
  _dynforward_ptr);int Cyc_sscanf(struct _dynforward_ptr,struct _dynforward_ptr,
! struct _dynforward_ptr);int Cyc_ungetc(int,struct Cyc___cycFILE*);extern char Cyc_FileCloseError[
  19];extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{char*tag;
  struct _dynforward_ptr f1;};static struct _dyneither_ptr Cyc___sccl(char*tab,struct
  _dyneither_ptr fmt);static short*Cyc_va_arg_short_ptr(void*a){void*_tmp0=a;short*
--- 675,682 ----
  int Cyc_fscanf(struct Cyc___cycFILE*,struct _dynforward_ptr,struct _dynforward_ptr);
  int Cyc_getc(struct Cyc___cycFILE*);int Cyc_scanf(struct _dynforward_ptr,struct
  _dynforward_ptr);int Cyc_sscanf(struct _dynforward_ptr,struct _dynforward_ptr,
! struct _dynforward_ptr);int Cyc_ungetc(int,struct Cyc___cycFILE*);int Cyc_vsscanf(
! struct _dynforward_ptr,struct _dynforward_ptr,struct _dynforward_ptr);extern char Cyc_FileCloseError[
  19];extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{char*tag;
  struct _dynforward_ptr f1;};static struct _dyneither_ptr Cyc___sccl(char*tab,struct
  _dyneither_ptr fmt);static short*Cyc_va_arg_short_ptr(void*a){void*_tmp0=a;short*
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/string.c powerpc-apple-rhapsody/lib/string.c
*** i686-unknown-linux/lib/string.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/string.c	Thu Jun 27 17:35:18 2002
***************
*** 661,679 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;struct
! _dynforward_ptr wrap_Cbuffer_as_buffer(char*,unsigned int);struct Cyc_List_List{
  void*hd;struct Cyc_List_List*tl;};int Cyc_List_length(struct Cyc_List_List*x);
  extern char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];int toupper(int);
! char*strerror(int errnum);unsigned int Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(
  struct _dynforward_ptr s1,struct _dynforward_ptr s2);int Cyc_strptrcmp(struct
  _dynforward_ptr*s1,struct _dynforward_ptr*s2);int Cyc_strncmp(struct
! _dynforward_ptr s1,struct _dynforward_ptr s2,unsigned int len);int Cyc_zstrcmp(struct
! _dynforward_ptr,struct _dynforward_ptr);int Cyc_zstrncmp(struct _dynforward_ptr s1,
! struct _dynforward_ptr s2,unsigned int n);int Cyc_zstrptrcmp(struct _dynforward_ptr*,
! struct _dynforward_ptr*);int Cyc_strcasecmp(struct _dynforward_ptr,struct
! _dynforward_ptr);int Cyc_strncasecmp(struct _dynforward_ptr s1,struct
! _dynforward_ptr s2,unsigned int len);struct _dynforward_ptr Cyc_strcat(struct
! _dynforward_ptr dest,struct _dynforward_ptr src);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_rstrconcat(
  struct _RegionHandle*,struct _dynforward_ptr,struct _dynforward_ptr);struct
  _dynforward_ptr Cyc_strconcat_l(struct Cyc_List_List*);struct _dynforward_ptr Cyc_rstrconcat_l(
--- 661,679 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;struct
! _dynforward_ptr wrap_Cbuffer_as_buffer(char*,unsigned long);struct Cyc_List_List{
  void*hd;struct Cyc_List_List*tl;};int Cyc_List_length(struct Cyc_List_List*x);
  extern char Cyc_List_List_mismatch[18];extern char Cyc_List_Nth[8];int toupper(int);
! char*strerror(int errnum);unsigned long Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(
  struct _dynforward_ptr s1,struct _dynforward_ptr s2);int Cyc_strptrcmp(struct
  _dynforward_ptr*s1,struct _dynforward_ptr*s2);int Cyc_strncmp(struct
! _dynforward_ptr s1,struct _dynforward_ptr s2,unsigned long len);int Cyc_zstrcmp(
! struct _dynforward_ptr,struct _dynforward_ptr);int Cyc_zstrncmp(struct
! _dynforward_ptr s1,struct _dynforward_ptr s2,unsigned long n);int Cyc_zstrptrcmp(
! struct _dynforward_ptr*,struct _dynforward_ptr*);int Cyc_strcasecmp(struct
! _dynforward_ptr,struct _dynforward_ptr);int Cyc_strncasecmp(struct _dynforward_ptr
! s1,struct _dynforward_ptr s2,unsigned long len);struct _dynforward_ptr Cyc_strcat(
! struct _dynforward_ptr dest,struct _dynforward_ptr src);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_rstrconcat(
  struct _RegionHandle*,struct _dynforward_ptr,struct _dynforward_ptr);struct
  _dynforward_ptr Cyc_strconcat_l(struct Cyc_List_List*);struct _dynforward_ptr Cyc_rstrconcat_l(
***************
*** 682,707 ****
  struct _RegionHandle*,struct Cyc_List_List*,struct _dynforward_ptr);struct
  _dynforward_ptr Cyc_strcpy(struct _dynforward_ptr dest,struct _dynforward_ptr src);
  struct _dynforward_ptr Cyc_strncpy(struct _dynforward_ptr,struct _dynforward_ptr,
! unsigned int);struct _dynforward_ptr Cyc_zstrncpy(struct _dynforward_ptr,struct
! _dynforward_ptr,unsigned int);struct _dynforward_ptr Cyc_realloc(struct
! _dynforward_ptr,unsigned int);struct _dynforward_ptr Cyc__memcpy(struct
! _dynforward_ptr d,struct _dynforward_ptr s,unsigned int,unsigned int);struct
  _dynforward_ptr Cyc__memmove(struct _dynforward_ptr d,struct _dynforward_ptr s,
! unsigned int,unsigned int);int Cyc_memcmp(struct _dynforward_ptr s1,struct
! _dynforward_ptr s2,unsigned int n);struct _dynforward_ptr Cyc_memchr(struct
! _dynforward_ptr s,char c,unsigned int n);struct _dynforward_ptr Cyc_mmemchr(struct
! _dynforward_ptr s,char c,unsigned int n);struct _dynforward_ptr Cyc_memset(struct
! _dynforward_ptr s,char c,unsigned int n);void Cyc_bzero(struct _dynforward_ptr s,
! unsigned int n);void Cyc__bcopy(struct _dynforward_ptr src,struct _dynforward_ptr dst,
! unsigned int n,unsigned int sz);struct _dynforward_ptr Cyc_expand(struct
! _dynforward_ptr s,unsigned int sz);struct _dynforward_ptr Cyc_rexpand(struct
! _RegionHandle*,struct _dynforward_ptr s,unsigned int sz);struct _dynforward_ptr Cyc_realloc_str(
! struct _dynforward_ptr str,unsigned int sz);struct _dynforward_ptr Cyc_rrealloc_str(
! struct _RegionHandle*r,struct _dynforward_ptr str,unsigned int sz);struct
  _dynforward_ptr Cyc_strdup(struct _dynforward_ptr src);struct _dynforward_ptr Cyc_rstrdup(
  struct _RegionHandle*,struct _dynforward_ptr src);struct _dynforward_ptr Cyc_substring(
! struct _dynforward_ptr,int ofs,unsigned int n);struct _dynforward_ptr Cyc_rsubstring(
! struct _RegionHandle*,struct _dynforward_ptr,int ofs,unsigned int n);struct
  _dynforward_ptr Cyc_replace_suffix(struct _dynforward_ptr,struct _dynforward_ptr,
  struct _dynforward_ptr);struct _dynforward_ptr Cyc_rreplace_suffix(struct
  _RegionHandle*r,struct _dynforward_ptr src,struct _dynforward_ptr curr_suffix,struct
--- 682,707 ----
  struct _RegionHandle*,struct Cyc_List_List*,struct _dynforward_ptr);struct
  _dynforward_ptr Cyc_strcpy(struct _dynforward_ptr dest,struct _dynforward_ptr src);
  struct _dynforward_ptr Cyc_strncpy(struct _dynforward_ptr,struct _dynforward_ptr,
! unsigned long);struct _dynforward_ptr Cyc_zstrncpy(struct _dynforward_ptr,struct
! _dynforward_ptr,unsigned long);struct _dynforward_ptr Cyc_realloc(struct
! _dynforward_ptr,unsigned long);struct _dynforward_ptr Cyc__memcpy(struct
! _dynforward_ptr d,struct _dynforward_ptr s,unsigned long,unsigned int);struct
  _dynforward_ptr Cyc__memmove(struct _dynforward_ptr d,struct _dynforward_ptr s,
! unsigned long,unsigned int);int Cyc_memcmp(struct _dynforward_ptr s1,struct
! _dynforward_ptr s2,unsigned long n);struct _dynforward_ptr Cyc_memchr(struct
! _dynforward_ptr s,char c,unsigned long n);struct _dynforward_ptr Cyc_mmemchr(struct
! _dynforward_ptr s,char c,unsigned long n);struct _dynforward_ptr Cyc_memset(struct
! _dynforward_ptr s,char c,unsigned long n);void Cyc_bzero(struct _dynforward_ptr s,
! unsigned long n);void Cyc__bcopy(struct _dynforward_ptr src,struct _dynforward_ptr dst,
! unsigned long n,unsigned int sz);struct _dynforward_ptr Cyc_expand(struct
! _dynforward_ptr s,unsigned long sz);struct _dynforward_ptr Cyc_rexpand(struct
! _RegionHandle*,struct _dynforward_ptr s,unsigned long sz);struct _dynforward_ptr Cyc_realloc_str(
! struct _dynforward_ptr str,unsigned long sz);struct _dynforward_ptr Cyc_rrealloc_str(
! struct _RegionHandle*r,struct _dynforward_ptr str,unsigned long sz);struct
  _dynforward_ptr Cyc_strdup(struct _dynforward_ptr src);struct _dynforward_ptr Cyc_rstrdup(
  struct _RegionHandle*,struct _dynforward_ptr src);struct _dynforward_ptr Cyc_substring(
! struct _dynforward_ptr,int ofs,unsigned long n);struct _dynforward_ptr Cyc_rsubstring(
! struct _RegionHandle*,struct _dynforward_ptr,int ofs,unsigned long n);struct
  _dynforward_ptr Cyc_replace_suffix(struct _dynforward_ptr,struct _dynforward_ptr,
  struct _dynforward_ptr);struct _dynforward_ptr Cyc_rreplace_suffix(struct
  _RegionHandle*r,struct _dynforward_ptr src,struct _dynforward_ptr curr_suffix,struct
***************
*** 713,732 ****
  Cyc_strstr(struct _dynforward_ptr haystack,struct _dynforward_ptr needle);struct
  _dynforward_ptr Cyc_strpbrk(struct _dynforward_ptr s,struct _dynforward_ptr accept);
  struct _dynforward_ptr Cyc_mstrpbrk(struct _dynforward_ptr s,struct _dynforward_ptr
! accept);unsigned int Cyc_strspn(struct _dynforward_ptr s,struct _dynforward_ptr
! accept);unsigned int Cyc_strcspn(struct _dynforward_ptr s,struct _dynforward_ptr
  accept);struct _dynforward_ptr Cyc_strtok(struct _dynforward_ptr s,struct
  _dynforward_ptr delim);struct Cyc_List_List*Cyc_explode(struct _dynforward_ptr s);
  struct Cyc_List_List*Cyc_rexplode(struct _RegionHandle*,struct _dynforward_ptr s);
  struct _dynforward_ptr Cyc_implode(struct Cyc_List_List*c);int Cyc_strcasecmp(struct
  _dynforward_ptr,struct _dynforward_ptr);int Cyc_strncasecmp(struct _dynforward_ptr
! s1,struct _dynforward_ptr s2,unsigned int len);void*Cyc___assert_fail(struct
  _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line);char*
! strerror(int errnum);unsigned int Cyc_strlen(struct _dynforward_ptr s){unsigned int i;
! unsigned int sz=_get_dynforward_size(s,sizeof(char));for(i=0;i < sz;i ++){if(((
! const char*)s.curr)[(int)i]== '\000')return i;}return i;}int Cyc_strcmp(struct
! _dynforward_ptr s1,struct _dynforward_ptr s2){if(s1.curr == s2.curr)return 0;{int i=0;
! unsigned int sz1=_get_dynforward_size(s1,sizeof(char));unsigned int sz2=
  _get_dynforward_size(s2,sizeof(char));unsigned int minsz=sz1 < sz2?sz1: sz2;minsz <= 
  _get_dynforward_size(s1,sizeof(char)) && minsz <= _get_dynforward_size(s2,sizeof(
  char))?0:((int(*)(struct _dynforward_ptr assertion,struct _dynforward_ptr file,
--- 713,732 ----
  Cyc_strstr(struct _dynforward_ptr haystack,struct _dynforward_ptr needle);struct
  _dynforward_ptr Cyc_strpbrk(struct _dynforward_ptr s,struct _dynforward_ptr accept);
  struct _dynforward_ptr Cyc_mstrpbrk(struct _dynforward_ptr s,struct _dynforward_ptr
! accept);unsigned long Cyc_strspn(struct _dynforward_ptr s,struct _dynforward_ptr
! accept);unsigned long Cyc_strcspn(struct _dynforward_ptr s,struct _dynforward_ptr
  accept);struct _dynforward_ptr Cyc_strtok(struct _dynforward_ptr s,struct
  _dynforward_ptr delim);struct Cyc_List_List*Cyc_explode(struct _dynforward_ptr s);
  struct Cyc_List_List*Cyc_rexplode(struct _RegionHandle*,struct _dynforward_ptr s);
  struct _dynforward_ptr Cyc_implode(struct Cyc_List_List*c);int Cyc_strcasecmp(struct
  _dynforward_ptr,struct _dynforward_ptr);int Cyc_strncasecmp(struct _dynforward_ptr
! s1,struct _dynforward_ptr s2,unsigned long len);void*Cyc___assert_fail(struct
  _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line);char*
! strerror(int errnum);unsigned long Cyc_strlen(struct _dynforward_ptr s){
! unsigned long i;unsigned int sz=_get_dynforward_size(s,sizeof(char));for(i=0;i < sz;
! i ++){if(((const char*)s.curr)[(int)i]== '\000')return i;}return i;}int Cyc_strcmp(
! struct _dynforward_ptr s1,struct _dynforward_ptr s2){if(s1.curr == s2.curr)return 0;{
! int i=0;unsigned int sz1=_get_dynforward_size(s1,sizeof(char));unsigned int sz2=
  _get_dynforward_size(s2,sizeof(char));unsigned int minsz=sz1 < sz2?sz1: sz2;minsz <= 
  _get_dynforward_size(s1,sizeof(char)) && minsz <= _get_dynforward_size(s2,sizeof(
  char))?0:((int(*)(struct _dynforward_ptr assertion,struct _dynforward_ptr file,
***************
*** 741,749 ****
  _check_dynforward_subscript(s1,sizeof(char),i))== '\000')return 0;else{return 1;}}}}
  int Cyc_strptrcmp(struct _dynforward_ptr*s1,struct _dynforward_ptr*s2){return Cyc_strcmp((
  struct _dynforward_ptr)*s1,(struct _dynforward_ptr)*s2);}inline static int Cyc_ncmp(
! struct _dynforward_ptr s1,unsigned int len1,struct _dynforward_ptr s2,unsigned int
! len2,unsigned int n){if(n <= 0)return 0;{unsigned int min_len=len1 > len2?len2: len1;
! unsigned int bound=min_len > n?n: min_len;bound <= _get_dynforward_size(s1,sizeof(
  char)) && bound <= _get_dynforward_size(s2,sizeof(char))?0:((int(*)(struct
  _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
  const char*_tmp2="bound <= s1.size && bound <= s2.size";_tag_dynforward(_tmp2,
--- 741,749 ----
  _check_dynforward_subscript(s1,sizeof(char),i))== '\000')return 0;else{return 1;}}}}
  int Cyc_strptrcmp(struct _dynforward_ptr*s1,struct _dynforward_ptr*s2){return Cyc_strcmp((
  struct _dynforward_ptr)*s1,(struct _dynforward_ptr)*s2);}inline static int Cyc_ncmp(
! struct _dynforward_ptr s1,unsigned long len1,struct _dynforward_ptr s2,unsigned long
! len2,unsigned long n){if(n <= 0)return 0;{unsigned long min_len=len1 > len2?len2: len1;
! unsigned long bound=min_len > n?n: min_len;bound <= _get_dynforward_size(s1,sizeof(
  char)) && bound <= _get_dynforward_size(s2,sizeof(char))?0:((int(*)(struct
  _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
  const char*_tmp2="bound <= s1.size && bound <= s2.size";_tag_dynforward(_tmp2,
***************
*** 751,761 ****
  _tag_dynforward(_tmp3,sizeof(char),_get_zero_arr_size(_tmp3,11));}),96);{int i=0;
  for(0;i < bound;i ++){int retc;if((retc=((const char*)s1.curr)[i]- ((const char*)s2.curr)[
  i])!= 0)return retc;}}if(len1 < n  || len2 < n)return(int)len1 - (int)len2;return 0;}}
! int Cyc_strncmp(struct _dynforward_ptr s1,struct _dynforward_ptr s2,unsigned int n){
! unsigned int len1=Cyc_strlen(s1);unsigned int len2=Cyc_strlen(s2);return Cyc_ncmp(
  s1,len1,s2,len2,n);}int Cyc_zstrcmp(struct _dynforward_ptr a,struct _dynforward_ptr b){
! if(a.curr == b.curr)return 0;{unsigned int as=_get_dynforward_size(a,sizeof(char));
! unsigned int bs=_get_dynforward_size(b,sizeof(char));unsigned int min_length=as < 
  bs?as: bs;int i=- 1;min_length <= _get_dynforward_size(a,sizeof(char)) && min_length
  <= _get_dynforward_size(b,sizeof(char))?0:((int(*)(struct _dynforward_ptr
  assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const
--- 751,761 ----
  _tag_dynforward(_tmp3,sizeof(char),_get_zero_arr_size(_tmp3,11));}),96);{int i=0;
  for(0;i < bound;i ++){int retc;if((retc=((const char*)s1.curr)[i]- ((const char*)s2.curr)[
  i])!= 0)return retc;}}if(len1 < n  || len2 < n)return(int)len1 - (int)len2;return 0;}}
! int Cyc_strncmp(struct _dynforward_ptr s1,struct _dynforward_ptr s2,unsigned long n){
! unsigned long len1=Cyc_strlen(s1);unsigned long len2=Cyc_strlen(s2);return Cyc_ncmp(
  s1,len1,s2,len2,n);}int Cyc_zstrcmp(struct _dynforward_ptr a,struct _dynforward_ptr b){
! if(a.curr == b.curr)return 0;{unsigned long as=_get_dynforward_size(a,sizeof(char));
! unsigned long bs=_get_dynforward_size(b,sizeof(char));unsigned long min_length=as < 
  bs?as: bs;int i=- 1;min_length <= _get_dynforward_size(a,sizeof(char)) && min_length
  <= _get_dynforward_size(b,sizeof(char))?0:((int(*)(struct _dynforward_ptr
  assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const
***************
*** 764,842 ****
  _tag_dynforward(_tmp5,sizeof(char),_get_zero_arr_size(_tmp5,11));}),128);while((
  ++ i,i < min_length)){int diff=(int)((const char*)a.curr)[i]- (int)((const char*)b.curr)[
  i];if(diff != 0)return diff;}return(int)as - (int)bs;}}int Cyc_zstrncmp(struct
! _dynforward_ptr s1,struct _dynforward_ptr s2,unsigned int n){if(n <= 0)return 0;{
! unsigned int s1size=_get_dynforward_size(s1,sizeof(char));unsigned int s2size=
! _get_dynforward_size(s2,sizeof(char));unsigned int min_size=s1size > s2size?s2size:
! s1size;unsigned int bound=min_size > n?n: min_size;bound <= _get_dynforward_size(s1,
! sizeof(char)) && bound <= _get_dynforward_size(s2,sizeof(char))?0:((int(*)(struct
  _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
! const char*_tmp6="bound <= s1.size && bound <= s2.size";_tag_dynforward(_tmp6,
! sizeof(char),_get_zero_arr_size(_tmp6,37));}),({const char*_tmp7="string.cyc";
! _tag_dynforward(_tmp7,sizeof(char),_get_zero_arr_size(_tmp7,11));}),146);{int i=0;
! for(0;i < bound;i ++){if(((const char*)s1.curr)[i]< ((const char*)s2.curr)[i])return
! - 1;else{if(((const char*)s2.curr)[i]< ((const char*)s1.curr)[i])return 1;}}}if(
! min_size <= bound)return 0;if(s1size < s2size)return - 1;else{return 1;}}}int Cyc_zstrptrcmp(
! struct _dynforward_ptr*a,struct _dynforward_ptr*b){if((int)a == (int)b)return 0;
! return Cyc_zstrcmp((struct _dynforward_ptr)*a,(struct _dynforward_ptr)*b);}inline
! static struct _dynforward_ptr Cyc_int_strcato(struct _dynforward_ptr dest,struct
! _dynforward_ptr src){int i;unsigned int dsize;unsigned int slen;unsigned int dlen;
! dsize=_get_dynforward_size(dest,sizeof(char));dlen=Cyc_strlen((struct
! _dynforward_ptr)dest);slen=Cyc_strlen(src);if(slen + dlen <= dsize){slen <= 
! _get_dynforward_size(src,sizeof(char))?0:((int(*)(struct _dynforward_ptr assertion,
! struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const char*_tmp8="slen <= src.size";
! _tag_dynforward(_tmp8,sizeof(char),_get_zero_arr_size(_tmp8,17));}),({const char*
! _tmp9="string.cyc";_tag_dynforward(_tmp9,sizeof(char),_get_zero_arr_size(_tmp9,
! 11));}),182);for(i=0;i < slen;i ++){({struct _dynforward_ptr _tmpA=
! _dynforward_ptr_plus(dest,sizeof(char),(int)(i + dlen));char _tmpB=*((char*)
! _check_dynforward_subscript(_tmpA,sizeof(char),0));char _tmpC=((const char*)src.curr)[
! i];if(_get_dynforward_size(_tmpA,sizeof(char))== 1  && (_tmpB == '\000'  && _tmpC != '\000'))
! _throw_arraybounds();*((char*)_tmpA.curr)=_tmpC;});}if(i != dsize)({struct
! _dynforward_ptr _tmpD=_dynforward_ptr_plus(dest,sizeof(char),(int)(i + dlen));char
! _tmpE=*((char*)_check_dynforward_subscript(_tmpD,sizeof(char),0));char _tmpF='\000';
! if(_get_dynforward_size(_tmpD,sizeof(char))== 1  && (_tmpE == '\000'  && _tmpF != '\000'))
! _throw_arraybounds();*((char*)_tmpD.curr)=_tmpF;});}else{(int)_throw((void*)({
! struct Cyc_Core_Invalid_argument_struct*_tmp10=_cycalloc(sizeof(*_tmp10));_tmp10[
! 0]=({struct Cyc_Core_Invalid_argument_struct _tmp11;_tmp11.tag=Cyc_Core_Invalid_argument;
! _tmp11.f1=({const char*_tmp12="strcat";_tag_dynforward(_tmp12,sizeof(char),
! _get_zero_arr_size(_tmp12,7));});_tmp11;});_tmp10;}));}return dest;}struct
! _dynforward_ptr Cyc_strcat(struct _dynforward_ptr dest,struct _dynforward_ptr src){
! return Cyc_int_strcato(dest,src);}struct _dynforward_ptr Cyc_rstrconcat(struct
! _RegionHandle*r,struct _dynforward_ptr a,struct _dynforward_ptr b){unsigned int
! _tmp13=Cyc_strlen(a);unsigned int _tmp14=Cyc_strlen(b);struct _dynforward_ptr ans=
! Cyc_Core_rnew_string(r,(_tmp13 + _tmp14)+ 1);int i;int j;_tmp13 <= 
! _get_dynforward_size(ans,sizeof(char)) && _tmp13 <= _get_dynforward_size(a,
! sizeof(char))?0:((int(*)(struct _dynforward_ptr assertion,struct _dynforward_ptr
! file,unsigned int line))Cyc___assert_fail)(({const char*_tmp15="alen <= ans.size && alen <= a.size";
! _tag_dynforward(_tmp15,sizeof(char),_get_zero_arr_size(_tmp15,35));}),({const
! char*_tmp16="string.cyc";_tag_dynforward(_tmp16,sizeof(char),_get_zero_arr_size(
! _tmp16,11));}),206);for(i=0;i < _tmp13;++ i){({struct _dynforward_ptr _tmp17=
! _dynforward_ptr_plus(ans,sizeof(char),i);char _tmp18=*((char*)
! _check_dynforward_subscript(_tmp17,sizeof(char),0));char _tmp19=((const char*)a.curr)[
! i];if(_get_dynforward_size(_tmp17,sizeof(char))== 1  && (_tmp18 == '\000'  && 
! _tmp19 != '\000'))_throw_arraybounds();*((char*)_tmp17.curr)=_tmp19;});}_tmp14 <= 
! _get_dynforward_size(b,sizeof(char))?0:((int(*)(struct _dynforward_ptr assertion,
  struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const char*
! _tmp1A="blen <= b.size";_tag_dynforward(_tmp1A,sizeof(char),_get_zero_arr_size(
! _tmp1A,15));}),({const char*_tmp1B="string.cyc";_tag_dynforward(_tmp1B,sizeof(
! char),_get_zero_arr_size(_tmp1B,11));}),208);for(j=0;j < _tmp14;++ j){({struct
! _dynforward_ptr _tmp1C=_dynforward_ptr_plus(ans,sizeof(char),i + j);char _tmp1D=*((
! char*)_check_dynforward_subscript(_tmp1C,sizeof(char),0));char _tmp1E=((const char*)
! b.curr)[j];if(_get_dynforward_size(_tmp1C,sizeof(char))== 1  && (_tmp1D == '\000'
!  && _tmp1E != '\000'))_throw_arraybounds();*((char*)_tmp1C.curr)=_tmp1E;});}
! return ans;}struct _dynforward_ptr Cyc_strconcat(struct _dynforward_ptr a,struct
! _dynforward_ptr b){return Cyc_rstrconcat(Cyc_Core_heap_region,a,b);}struct
! _dynforward_ptr Cyc_rstrconcat_l(struct _RegionHandle*r,struct Cyc_List_List*strs){
! unsigned int len;unsigned int total_len=0;struct _dynforward_ptr ans;{struct
  _RegionHandle _tmp1F=_new_region("temp");struct _RegionHandle*temp=& _tmp1F;
  _push_region(temp);{struct Cyc_List_List*lens=({struct Cyc_List_List*_tmp22=
! _region_malloc(temp,sizeof(*_tmp22));_tmp22->hd=(void*)((unsigned int)0);_tmp22->tl=
  0;_tmp22;});struct Cyc_List_List*end=lens;{struct Cyc_List_List*p=strs;for(0;p != 0;
  p=p->tl){len=Cyc_strlen((struct _dynforward_ptr)*((struct _dynforward_ptr*)p->hd));
  total_len +=len;((struct Cyc_List_List*)_check_null(end))->tl=({struct Cyc_List_List*
  _tmp20=_region_malloc(temp,sizeof(*_tmp20));_tmp20->hd=(void*)len;_tmp20->tl=0;
  _tmp20;});end=((struct Cyc_List_List*)_check_null(end))->tl;}}lens=lens->tl;ans=
! Cyc_Core_rnew_string(r,total_len + 1);{unsigned int i=0;while(strs != 0){struct
! _dynforward_ptr _tmp21=*((struct _dynforward_ptr*)strs->hd);len=(unsigned int)((
  struct Cyc_List_List*)_check_null(lens))->hd;Cyc_strncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(ans,sizeof(char),(int)i),
  sizeof(char),1),(struct _dynforward_ptr)_tmp21,len);i +=len;strs=strs->tl;lens=
--- 764,842 ----
  _tag_dynforward(_tmp5,sizeof(char),_get_zero_arr_size(_tmp5,11));}),128);while((
  ++ i,i < min_length)){int diff=(int)((const char*)a.curr)[i]- (int)((const char*)b.curr)[
  i];if(diff != 0)return diff;}return(int)as - (int)bs;}}int Cyc_zstrncmp(struct
! _dynforward_ptr s1,struct _dynforward_ptr s2,unsigned long n){if(n <= 0)return 0;{
! unsigned long s1size=_get_dynforward_size(s1,sizeof(char));unsigned long s2size=
! _get_dynforward_size(s2,sizeof(char));unsigned long min_size=s1size > s2size?
! s2size: s1size;unsigned long bound=min_size > n?n: min_size;bound <= 
! _get_dynforward_size(s1,sizeof(char)) && bound <= _get_dynforward_size(s2,sizeof(
! char))?0:((int(*)(struct _dynforward_ptr assertion,struct _dynforward_ptr file,
! unsigned int line))Cyc___assert_fail)(({const char*_tmp6="bound <= s1.size && bound <= s2.size";
! _tag_dynforward(_tmp6,sizeof(char),_get_zero_arr_size(_tmp6,37));}),({const char*
! _tmp7="string.cyc";_tag_dynforward(_tmp7,sizeof(char),_get_zero_arr_size(_tmp7,
! 11));}),146);{int i=0;for(0;i < bound;i ++){if(((const char*)s1.curr)[i]< ((const
! char*)s2.curr)[i])return - 1;else{if(((const char*)s2.curr)[i]< ((const char*)s1.curr)[
! i])return 1;}}}if(min_size <= bound)return 0;if(s1size < s2size)return - 1;else{return
! 1;}}}int Cyc_zstrptrcmp(struct _dynforward_ptr*a,struct _dynforward_ptr*b){if((int)
! a == (int)b)return 0;return Cyc_zstrcmp((struct _dynforward_ptr)*a,(struct
! _dynforward_ptr)*b);}inline static struct _dynforward_ptr Cyc_int_strcato(struct
! _dynforward_ptr dest,struct _dynforward_ptr src){int i;unsigned long dsize;
! unsigned long slen;unsigned long dlen;dsize=_get_dynforward_size(dest,sizeof(char));
! dlen=Cyc_strlen((struct _dynforward_ptr)dest);slen=Cyc_strlen(src);if(slen + dlen
! <= dsize){slen <= _get_dynforward_size(src,sizeof(char))?0:((int(*)(struct
  _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
! const char*_tmp8="slen <= src.size";_tag_dynforward(_tmp8,sizeof(char),
! _get_zero_arr_size(_tmp8,17));}),({const char*_tmp9="string.cyc";_tag_dynforward(
! _tmp9,sizeof(char),_get_zero_arr_size(_tmp9,11));}),182);for(i=0;i < slen;i ++){({
! struct _dynforward_ptr _tmpA=_dynforward_ptr_plus(dest,sizeof(char),(int)(i + dlen));
! char _tmpB=*((char*)_check_dynforward_subscript(_tmpA,sizeof(char),0));char _tmpC=((
! const char*)src.curr)[i];if(_get_dynforward_size(_tmpA,sizeof(char))== 1  && (
! _tmpB == '\000'  && _tmpC != '\000'))_throw_arraybounds();*((char*)_tmpA.curr)=
! _tmpC;});}if(i != dsize)({struct _dynforward_ptr _tmpD=_dynforward_ptr_plus(dest,
! sizeof(char),(int)(i + dlen));char _tmpE=*((char*)_check_dynforward_subscript(
! _tmpD,sizeof(char),0));char _tmpF='\000';if(_get_dynforward_size(_tmpD,sizeof(
! char))== 1  && (_tmpE == '\000'  && _tmpF != '\000'))_throw_arraybounds();*((char*)
! _tmpD.curr)=_tmpF;});}else{(int)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*
! _tmp10=_cycalloc(sizeof(*_tmp10));_tmp10[0]=({struct Cyc_Core_Invalid_argument_struct
! _tmp11;_tmp11.tag=Cyc_Core_Invalid_argument;_tmp11.f1=({const char*_tmp12="strcat";
! _tag_dynforward(_tmp12,sizeof(char),_get_zero_arr_size(_tmp12,7));});_tmp11;});
! _tmp10;}));}return dest;}struct _dynforward_ptr Cyc_strcat(struct _dynforward_ptr
! dest,struct _dynforward_ptr src){return Cyc_int_strcato(dest,src);}struct
! _dynforward_ptr Cyc_rstrconcat(struct _RegionHandle*r,struct _dynforward_ptr a,
! struct _dynforward_ptr b){unsigned long _tmp13=Cyc_strlen(a);unsigned long _tmp14=
! Cyc_strlen(b);struct _dynforward_ptr ans=Cyc_Core_rnew_string(r,(_tmp13 + _tmp14)+ 
! 1);int i;int j;_tmp13 <= _get_dynforward_size(ans,sizeof(char)) && _tmp13 <= 
! _get_dynforward_size(a,sizeof(char))?0:((int(*)(struct _dynforward_ptr assertion,
  struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const char*
! _tmp15="alen <= ans.size && alen <= a.size";_tag_dynforward(_tmp15,sizeof(char),
! _get_zero_arr_size(_tmp15,35));}),({const char*_tmp16="string.cyc";
! _tag_dynforward(_tmp16,sizeof(char),_get_zero_arr_size(_tmp16,11));}),206);for(i=
! 0;i < _tmp13;++ i){({struct _dynforward_ptr _tmp17=_dynforward_ptr_plus(ans,sizeof(
! char),i);char _tmp18=*((char*)_check_dynforward_subscript(_tmp17,sizeof(char),0));
! char _tmp19=((const char*)a.curr)[i];if(_get_dynforward_size(_tmp17,sizeof(char))
! == 1  && (_tmp18 == '\000'  && _tmp19 != '\000'))_throw_arraybounds();*((char*)
! _tmp17.curr)=_tmp19;});}_tmp14 <= _get_dynforward_size(b,sizeof(char))?0:((int(*)(
! struct _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
! const char*_tmp1A="blen <= b.size";_tag_dynforward(_tmp1A,sizeof(char),
! _get_zero_arr_size(_tmp1A,15));}),({const char*_tmp1B="string.cyc";
! _tag_dynforward(_tmp1B,sizeof(char),_get_zero_arr_size(_tmp1B,11));}),208);for(j=
! 0;j < _tmp14;++ j){({struct _dynforward_ptr _tmp1C=_dynforward_ptr_plus(ans,sizeof(
! char),i + j);char _tmp1D=*((char*)_check_dynforward_subscript(_tmp1C,sizeof(char),
! 0));char _tmp1E=((const char*)b.curr)[j];if(_get_dynforward_size(_tmp1C,sizeof(
! char))== 1  && (_tmp1D == '\000'  && _tmp1E != '\000'))_throw_arraybounds();*((char*)
! _tmp1C.curr)=_tmp1E;});}return ans;}struct _dynforward_ptr Cyc_strconcat(struct
! _dynforward_ptr a,struct _dynforward_ptr b){return Cyc_rstrconcat(Cyc_Core_heap_region,
! a,b);}struct _dynforward_ptr Cyc_rstrconcat_l(struct _RegionHandle*r,struct Cyc_List_List*
! strs){unsigned long len;unsigned long total_len=0;struct _dynforward_ptr ans;{struct
  _RegionHandle _tmp1F=_new_region("temp");struct _RegionHandle*temp=& _tmp1F;
  _push_region(temp);{struct Cyc_List_List*lens=({struct Cyc_List_List*_tmp22=
! _region_malloc(temp,sizeof(*_tmp22));_tmp22->hd=(void*)((unsigned long)0);_tmp22->tl=
  0;_tmp22;});struct Cyc_List_List*end=lens;{struct Cyc_List_List*p=strs;for(0;p != 0;
  p=p->tl){len=Cyc_strlen((struct _dynforward_ptr)*((struct _dynforward_ptr*)p->hd));
  total_len +=len;((struct Cyc_List_List*)_check_null(end))->tl=({struct Cyc_List_List*
  _tmp20=_region_malloc(temp,sizeof(*_tmp20));_tmp20->hd=(void*)len;_tmp20->tl=0;
  _tmp20;});end=((struct Cyc_List_List*)_check_null(end))->tl;}}lens=lens->tl;ans=
! Cyc_Core_rnew_string(r,total_len + 1);{unsigned long i=0;while(strs != 0){struct
! _dynforward_ptr _tmp21=*((struct _dynforward_ptr*)strs->hd);len=(unsigned long)((
  struct Cyc_List_List*)_check_null(lens))->hd;Cyc_strncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(ans,sizeof(char),(int)i),
  sizeof(char),1),(struct _dynforward_ptr)_tmp21,len);i +=len;strs=strs->tl;lens=
***************
*** 848,876 ****
  _dynforward_ptr*)strs->hd));{struct Cyc_List_List*_tmp23=strs;struct _RegionHandle
  _tmp24=_new_region("temp");struct _RegionHandle*temp=& _tmp24;_push_region(temp);{
  struct Cyc_List_List*lens=({struct Cyc_List_List*_tmp28=_region_malloc(temp,
! sizeof(*_tmp28));_tmp28->hd=(void*)((unsigned int)0);_tmp28->tl=0;_tmp28;});
! struct Cyc_List_List*end=lens;unsigned int len;unsigned int total_len=0;
! unsigned int list_len=0;for(0;_tmp23 != 0;_tmp23=_tmp23->tl){len=Cyc_strlen((
  struct _dynforward_ptr)*((struct _dynforward_ptr*)_tmp23->hd));total_len +=len;((
  struct Cyc_List_List*)_check_null(end))->tl=({struct Cyc_List_List*_tmp25=
  _region_malloc(temp,sizeof(*_tmp25));_tmp25->hd=(void*)len;_tmp25->tl=0;_tmp25;});
  end=((struct Cyc_List_List*)_check_null(end))->tl;++ list_len;}lens=lens->tl;{
! unsigned int seplen=Cyc_strlen(separator);total_len +=(list_len - 1)* seplen;{
! struct _dynforward_ptr ans=Cyc_Core_rnew_string(r,total_len + 1);unsigned int i=0;
  while(strs->tl != 0){struct _dynforward_ptr _tmp26=*((struct _dynforward_ptr*)strs->hd);
! len=(unsigned int)((struct Cyc_List_List*)_check_null(lens))->hd;Cyc_strncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(ans,sizeof(char),(int)i),
  sizeof(char),1),(struct _dynforward_ptr)_tmp26,len);i +=len;Cyc_strncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(ans,sizeof(char),(int)i),
  sizeof(char),1),separator,seplen);i +=seplen;strs=strs->tl;lens=lens->tl;}Cyc_strncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(ans,sizeof(char),(int)i),
  sizeof(char),1),(struct _dynforward_ptr)*((struct _dynforward_ptr*)strs->hd),(
! unsigned int)((struct Cyc_List_List*)_check_null(lens))->hd);{struct
  _dynforward_ptr _tmp27=ans;_npop_handler(0);return _tmp27;}}}};_pop_region(temp);}}
  struct _dynforward_ptr Cyc_str_sepstr(struct Cyc_List_List*strs,struct
  _dynforward_ptr separator){return Cyc_rstr_sepstr(Cyc_Core_heap_region,strs,
  separator);}struct _dynforward_ptr Cyc_strncpy(struct _dynforward_ptr dest,struct
! _dynforward_ptr src,unsigned int n){int i;n <= _get_dynforward_size(src,sizeof(char))
   && n <= _get_dynforward_size(dest,sizeof(char))?0:((int(*)(struct _dynforward_ptr
  assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const
  char*_tmp29="n <= src.size && n <= dest.size";_tag_dynforward(_tmp29,sizeof(char),
--- 848,876 ----
  _dynforward_ptr*)strs->hd));{struct Cyc_List_List*_tmp23=strs;struct _RegionHandle
  _tmp24=_new_region("temp");struct _RegionHandle*temp=& _tmp24;_push_region(temp);{
  struct Cyc_List_List*lens=({struct Cyc_List_List*_tmp28=_region_malloc(temp,
! sizeof(*_tmp28));_tmp28->hd=(void*)((unsigned long)0);_tmp28->tl=0;_tmp28;});
! struct Cyc_List_List*end=lens;unsigned long len;unsigned long total_len=0;
! unsigned long list_len=0;for(0;_tmp23 != 0;_tmp23=_tmp23->tl){len=Cyc_strlen((
  struct _dynforward_ptr)*((struct _dynforward_ptr*)_tmp23->hd));total_len +=len;((
  struct Cyc_List_List*)_check_null(end))->tl=({struct Cyc_List_List*_tmp25=
  _region_malloc(temp,sizeof(*_tmp25));_tmp25->hd=(void*)len;_tmp25->tl=0;_tmp25;});
  end=((struct Cyc_List_List*)_check_null(end))->tl;++ list_len;}lens=lens->tl;{
! unsigned long seplen=Cyc_strlen(separator);total_len +=(list_len - 1)* seplen;{
! struct _dynforward_ptr ans=Cyc_Core_rnew_string(r,total_len + 1);unsigned long i=0;
  while(strs->tl != 0){struct _dynforward_ptr _tmp26=*((struct _dynforward_ptr*)strs->hd);
! len=(unsigned long)((struct Cyc_List_List*)_check_null(lens))->hd;Cyc_strncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(ans,sizeof(char),(int)i),
  sizeof(char),1),(struct _dynforward_ptr)_tmp26,len);i +=len;Cyc_strncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(ans,sizeof(char),(int)i),
  sizeof(char),1),separator,seplen);i +=seplen;strs=strs->tl;lens=lens->tl;}Cyc_strncpy(
  _dynforward_ptr_decrease_size(_dynforward_ptr_plus(ans,sizeof(char),(int)i),
  sizeof(char),1),(struct _dynforward_ptr)*((struct _dynforward_ptr*)strs->hd),(
! unsigned long)((struct Cyc_List_List*)_check_null(lens))->hd);{struct
  _dynforward_ptr _tmp27=ans;_npop_handler(0);return _tmp27;}}}};_pop_region(temp);}}
  struct _dynforward_ptr Cyc_str_sepstr(struct Cyc_List_List*strs,struct
  _dynforward_ptr separator){return Cyc_rstr_sepstr(Cyc_Core_heap_region,strs,
  separator);}struct _dynforward_ptr Cyc_strncpy(struct _dynforward_ptr dest,struct
! _dynforward_ptr src,unsigned long n){int i;n <= _get_dynforward_size(src,sizeof(char))
   && n <= _get_dynforward_size(dest,sizeof(char))?0:((int(*)(struct _dynforward_ptr
  assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const
  char*_tmp29="n <= src.size && n <= dest.size";_tag_dynforward(_tmp29,sizeof(char),
***************
*** 879,885 ****
  0;i < n;i ++){char _tmp2B=((const char*)src.curr)[i];if(_tmp2B == '\000')break;((char*)
  dest.curr)[i]=_tmp2B;}for(0;i < n;i ++){((char*)dest.curr)[i]='\000';}return dest;}
  struct _dynforward_ptr Cyc_zstrncpy(struct _dynforward_ptr dest,struct
! _dynforward_ptr src,unsigned int n){n <= _get_dynforward_size(dest,sizeof(char))
   && n <= _get_dynforward_size(src,sizeof(char))?0:((int(*)(struct _dynforward_ptr
  assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const
  char*_tmp2C="n <= dest.size && n <= src.size";_tag_dynforward(_tmp2C,sizeof(char),
--- 879,885 ----
  0;i < n;i ++){char _tmp2B=((const char*)src.curr)[i];if(_tmp2B == '\000')break;((char*)
  dest.curr)[i]=_tmp2B;}for(0;i < n;i ++){((char*)dest.curr)[i]='\000';}return dest;}
  struct _dynforward_ptr Cyc_zstrncpy(struct _dynforward_ptr dest,struct
! _dynforward_ptr src,unsigned long n){n <= _get_dynforward_size(dest,sizeof(char))
   && n <= _get_dynforward_size(src,sizeof(char))?0:((int(*)(struct _dynforward_ptr
  assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const
  char*_tmp2C="n <= dest.size && n <= src.size";_tag_dynforward(_tmp2C,sizeof(char),
***************
*** 894,922 ****
  _check_dynforward_subscript(_tmp2F,sizeof(char),0));char _tmp31=_tmp2E;if(
  _get_dynforward_size(_tmp2F,sizeof(char))== 1  && (_tmp30 == '\000'  && _tmp31 != '\000'))
  _throw_arraybounds();*((char*)_tmp2F.curr)=_tmp31;});if(_tmp2E == '\000')break;}}
! else{unsigned int len=Cyc_strlen(src);Cyc_strncpy(_dynforward_ptr_decrease_size(
  dest,sizeof(char),1),src,len);if(len < _get_dynforward_size(dest,sizeof(char)))({
  struct _dynforward_ptr _tmp32=_dynforward_ptr_plus(dest,sizeof(char),(int)len);
  char _tmp33=*((char*)_check_dynforward_subscript(_tmp32,sizeof(char),0));char
  _tmp34='\000';if(_get_dynforward_size(_tmp32,sizeof(char))== 1  && (_tmp33 == '\000'
   && _tmp34 != '\000'))_throw_arraybounds();*((char*)_tmp32.curr)=_tmp34;});}
  return dest;}struct _dynforward_ptr Cyc_rstrdup(struct _RegionHandle*r,struct
! _dynforward_ptr src){unsigned int len;struct _dynforward_ptr temp;len=Cyc_strlen(src);
! temp=Cyc_Core_rnew_string(r,len + 1);Cyc_strncpy(_dynforward_ptr_decrease_size(
! temp,sizeof(char),1),src,len);return temp;}struct _dynforward_ptr Cyc_strdup(struct
! _dynforward_ptr src){return Cyc_rstrdup(Cyc_Core_heap_region,src);}struct
! _dynforward_ptr Cyc_rexpand(struct _RegionHandle*r,struct _dynforward_ptr s,
! unsigned int sz){struct _dynforward_ptr temp;unsigned int slen;slen=Cyc_strlen(s);sz=
! sz > slen?sz: slen;temp=Cyc_Core_rnew_string(r,sz);Cyc_strncpy(
  _dynforward_ptr_decrease_size(temp,sizeof(char),1),s,slen);if(slen != 
  _get_dynforward_size(s,sizeof(char)))({struct _dynforward_ptr _tmp35=
  _dynforward_ptr_plus(temp,sizeof(char),(int)slen);char _tmp36=*((char*)
  _check_dynforward_subscript(_tmp35,sizeof(char),0));char _tmp37='\000';if(
  _get_dynforward_size(_tmp35,sizeof(char))== 1  && (_tmp36 == '\000'  && _tmp37 != '\000'))
  _throw_arraybounds();*((char*)_tmp35.curr)=_tmp37;});return temp;}struct
! _dynforward_ptr Cyc_expand(struct _dynforward_ptr s,unsigned int sz){return Cyc_rexpand(
  Cyc_Core_heap_region,s,sz);}struct _dynforward_ptr Cyc_rrealloc_str(struct
! _RegionHandle*r,struct _dynforward_ptr str,unsigned int sz){unsigned int maxsizeP=
  _get_dynforward_size(str,sizeof(char));if(maxsizeP == 0){maxsizeP=30 > sz?30: sz;
  str=Cyc_Core_rnew_string(r,maxsizeP);({struct _dynforward_ptr _tmp38=
  _dynforward_ptr_plus(str,sizeof(char),0);char _tmp39=*((char*)
--- 894,922 ----
  _check_dynforward_subscript(_tmp2F,sizeof(char),0));char _tmp31=_tmp2E;if(
  _get_dynforward_size(_tmp2F,sizeof(char))== 1  && (_tmp30 == '\000'  && _tmp31 != '\000'))
  _throw_arraybounds();*((char*)_tmp2F.curr)=_tmp31;});if(_tmp2E == '\000')break;}}
! else{unsigned long len=Cyc_strlen(src);Cyc_strncpy(_dynforward_ptr_decrease_size(
  dest,sizeof(char),1),src,len);if(len < _get_dynforward_size(dest,sizeof(char)))({
  struct _dynforward_ptr _tmp32=_dynforward_ptr_plus(dest,sizeof(char),(int)len);
  char _tmp33=*((char*)_check_dynforward_subscript(_tmp32,sizeof(char),0));char
  _tmp34='\000';if(_get_dynforward_size(_tmp32,sizeof(char))== 1  && (_tmp33 == '\000'
   && _tmp34 != '\000'))_throw_arraybounds();*((char*)_tmp32.curr)=_tmp34;});}
  return dest;}struct _dynforward_ptr Cyc_rstrdup(struct _RegionHandle*r,struct
! _dynforward_ptr src){unsigned long len;struct _dynforward_ptr temp;len=Cyc_strlen(
! src);temp=Cyc_Core_rnew_string(r,len + 1);Cyc_strncpy(
! _dynforward_ptr_decrease_size(temp,sizeof(char),1),src,len);return temp;}struct
! _dynforward_ptr Cyc_strdup(struct _dynforward_ptr src){return Cyc_rstrdup(Cyc_Core_heap_region,
! src);}struct _dynforward_ptr Cyc_rexpand(struct _RegionHandle*r,struct
! _dynforward_ptr s,unsigned long sz){struct _dynforward_ptr temp;unsigned long slen;
! slen=Cyc_strlen(s);sz=sz > slen?sz: slen;temp=Cyc_Core_rnew_string(r,sz);Cyc_strncpy(
  _dynforward_ptr_decrease_size(temp,sizeof(char),1),s,slen);if(slen != 
  _get_dynforward_size(s,sizeof(char)))({struct _dynforward_ptr _tmp35=
  _dynforward_ptr_plus(temp,sizeof(char),(int)slen);char _tmp36=*((char*)
  _check_dynforward_subscript(_tmp35,sizeof(char),0));char _tmp37='\000';if(
  _get_dynforward_size(_tmp35,sizeof(char))== 1  && (_tmp36 == '\000'  && _tmp37 != '\000'))
  _throw_arraybounds();*((char*)_tmp35.curr)=_tmp37;});return temp;}struct
! _dynforward_ptr Cyc_expand(struct _dynforward_ptr s,unsigned long sz){return Cyc_rexpand(
  Cyc_Core_heap_region,s,sz);}struct _dynforward_ptr Cyc_rrealloc_str(struct
! _RegionHandle*r,struct _dynforward_ptr str,unsigned long sz){unsigned long maxsizeP=
  _get_dynforward_size(str,sizeof(char));if(maxsizeP == 0){maxsizeP=30 > sz?30: sz;
  str=Cyc_Core_rnew_string(r,maxsizeP);({struct _dynforward_ptr _tmp38=
  _dynforward_ptr_plus(str,sizeof(char),0);char _tmp39=*((char*)
***************
*** 925,940 ****
  _throw_arraybounds();*((char*)_tmp38.curr)=_tmp3A;});}else{if(sz > maxsizeP){
  maxsizeP=maxsizeP * 2 > (sz * 5)/ 4?maxsizeP * 2:(sz * 5)/ 4;str=Cyc_rexpand(r,(
  struct _dynforward_ptr)str,maxsizeP);}}return str;}struct _dynforward_ptr Cyc_realloc_str(
! struct _dynforward_ptr str,unsigned int sz){return Cyc_rrealloc_str(Cyc_Core_heap_region,
  str,sz);}struct _dynforward_ptr Cyc_rsubstring(struct _RegionHandle*r,struct
! _dynforward_ptr s,int start,unsigned int amt){struct _dynforward_ptr ans=Cyc_Core_rnew_string(
  r,amt + 1);s=_dynforward_ptr_plus(s,sizeof(char),start);amt < _get_dynforward_size(
  ans,sizeof(char)) && amt <= _get_dynforward_size(s,sizeof(char))?0:((int(*)(
  struct _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
  const char*_tmp3B="amt < ans.size && amt <= s.size";_tag_dynforward(_tmp3B,
  sizeof(char),_get_zero_arr_size(_tmp3B,32));}),({const char*_tmp3C="string.cyc";
  _tag_dynforward(_tmp3C,sizeof(char),_get_zero_arr_size(_tmp3C,11));}),409);{
! unsigned int i=0;for(0;i < amt;++ i){({struct _dynforward_ptr _tmp3D=
  _dynforward_ptr_plus(ans,sizeof(char),(int)i);char _tmp3E=*((char*)
  _check_dynforward_subscript(_tmp3D,sizeof(char),0));char _tmp3F=((const char*)s.curr)[(
  int)i];if(_get_dynforward_size(_tmp3D,sizeof(char))== 1  && (_tmp3E == '\000'  && 
--- 925,940 ----
  _throw_arraybounds();*((char*)_tmp38.curr)=_tmp3A;});}else{if(sz > maxsizeP){
  maxsizeP=maxsizeP * 2 > (sz * 5)/ 4?maxsizeP * 2:(sz * 5)/ 4;str=Cyc_rexpand(r,(
  struct _dynforward_ptr)str,maxsizeP);}}return str;}struct _dynforward_ptr Cyc_realloc_str(
! struct _dynforward_ptr str,unsigned long sz){return Cyc_rrealloc_str(Cyc_Core_heap_region,
  str,sz);}struct _dynforward_ptr Cyc_rsubstring(struct _RegionHandle*r,struct
! _dynforward_ptr s,int start,unsigned long amt){struct _dynforward_ptr ans=Cyc_Core_rnew_string(
  r,amt + 1);s=_dynforward_ptr_plus(s,sizeof(char),start);amt < _get_dynforward_size(
  ans,sizeof(char)) && amt <= _get_dynforward_size(s,sizeof(char))?0:((int(*)(
  struct _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
  const char*_tmp3B="amt < ans.size && amt <= s.size";_tag_dynforward(_tmp3B,
  sizeof(char),_get_zero_arr_size(_tmp3B,32));}),({const char*_tmp3C="string.cyc";
  _tag_dynforward(_tmp3C,sizeof(char),_get_zero_arr_size(_tmp3C,11));}),409);{
! unsigned long i=0;for(0;i < amt;++ i){({struct _dynforward_ptr _tmp3D=
  _dynforward_ptr_plus(ans,sizeof(char),(int)i);char _tmp3E=*((char*)
  _check_dynforward_subscript(_tmp3D,sizeof(char),0));char _tmp3F=((const char*)s.curr)[(
  int)i];if(_get_dynforward_size(_tmp3D,sizeof(char))== 1  && (_tmp3E == '\000'  && 
***************
*** 943,962 ****
  char*)_check_dynforward_subscript(_tmp40,sizeof(char),0));char _tmp42='\000';if(
  _get_dynforward_size(_tmp40,sizeof(char))== 1  && (_tmp41 == '\000'  && _tmp42 != '\000'))
  _throw_arraybounds();*((char*)_tmp40.curr)=_tmp42;});return ans;}struct
! _dynforward_ptr Cyc_substring(struct _dynforward_ptr s,int start,unsigned int amt){
  return Cyc_rsubstring(Cyc_Core_heap_region,s,start,amt);}struct _dynforward_ptr Cyc_rreplace_suffix(
  struct _RegionHandle*r,struct _dynforward_ptr src,struct _dynforward_ptr curr_suffix,
! struct _dynforward_ptr new_suffix){unsigned int m=_get_dynforward_size(src,sizeof(
! char));unsigned int n=_get_dynforward_size(curr_suffix,sizeof(char));struct
  _dynforward_ptr err=({const char*_tmp47="replace_suffix";_tag_dynforward(_tmp47,
  sizeof(char),_get_zero_arr_size(_tmp47,15));});if(m < n)(int)_throw((void*)({
  struct Cyc_Core_Invalid_argument_struct*_tmp43=_cycalloc(sizeof(*_tmp43));_tmp43[
  0]=({struct Cyc_Core_Invalid_argument_struct _tmp44;_tmp44.tag=Cyc_Core_Invalid_argument;
! _tmp44.f1=err;_tmp44;});_tmp43;}));{unsigned int i=1;for(0;i <= n;++ i){if(*((const
! char*)_check_dynforward_subscript(src,sizeof(char),(int)(m - i)))!= *((const char*)
! _check_dynforward_subscript(curr_suffix,sizeof(char),(int)(n - i))))(int)_throw((
! void*)({struct Cyc_Core_Invalid_argument_struct*_tmp45=_cycalloc(sizeof(*_tmp45));
! _tmp45[0]=({struct Cyc_Core_Invalid_argument_struct _tmp46;_tmp46.tag=Cyc_Core_Invalid_argument;
  _tmp46.f1=err;_tmp46;});_tmp45;}));}}{struct _dynforward_ptr ans=Cyc_Core_rnew_string(
  r,((m - n)+ _get_dynforward_size(new_suffix,sizeof(char)))+ 1);Cyc_strncpy(
  _dynforward_ptr_decrease_size(ans,sizeof(char),1),src,m - n);Cyc_strncpy(
--- 943,962 ----
  char*)_check_dynforward_subscript(_tmp40,sizeof(char),0));char _tmp42='\000';if(
  _get_dynforward_size(_tmp40,sizeof(char))== 1  && (_tmp41 == '\000'  && _tmp42 != '\000'))
  _throw_arraybounds();*((char*)_tmp40.curr)=_tmp42;});return ans;}struct
! _dynforward_ptr Cyc_substring(struct _dynforward_ptr s,int start,unsigned long amt){
  return Cyc_rsubstring(Cyc_Core_heap_region,s,start,amt);}struct _dynforward_ptr Cyc_rreplace_suffix(
  struct _RegionHandle*r,struct _dynforward_ptr src,struct _dynforward_ptr curr_suffix,
! struct _dynforward_ptr new_suffix){unsigned long m=_get_dynforward_size(src,sizeof(
! char));unsigned long n=_get_dynforward_size(curr_suffix,sizeof(char));struct
  _dynforward_ptr err=({const char*_tmp47="replace_suffix";_tag_dynforward(_tmp47,
  sizeof(char),_get_zero_arr_size(_tmp47,15));});if(m < n)(int)_throw((void*)({
  struct Cyc_Core_Invalid_argument_struct*_tmp43=_cycalloc(sizeof(*_tmp43));_tmp43[
  0]=({struct Cyc_Core_Invalid_argument_struct _tmp44;_tmp44.tag=Cyc_Core_Invalid_argument;
! _tmp44.f1=err;_tmp44;});_tmp43;}));{unsigned long i=1;for(0;i <= n;++ i){if(*((
! const char*)_check_dynforward_subscript(src,sizeof(char),(int)(m - i)))!= *((const
! char*)_check_dynforward_subscript(curr_suffix,sizeof(char),(int)(n - i))))(int)
! _throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp45=_cycalloc(sizeof(*
! _tmp45));_tmp45[0]=({struct Cyc_Core_Invalid_argument_struct _tmp46;_tmp46.tag=Cyc_Core_Invalid_argument;
  _tmp46.f1=err;_tmp46;});_tmp45;}));}}{struct _dynforward_ptr ans=Cyc_Core_rnew_string(
  r,((m - n)+ _get_dynforward_size(new_suffix,sizeof(char)))+ 1);Cyc_strncpy(
  _dynforward_ptr_decrease_size(ans,sizeof(char),1),src,m - n);Cyc_strncpy(
***************
*** 1008,1014 ****
  _dynforward_ptr)_tag_dynforward(0,0,0)).curr;start=Cyc_strchr(
  _dynforward_ptr_plus(start,sizeof(char),1),*((const char*)
  _check_dynforward_subscript(needle,sizeof(char),0)))){if(Cyc_strncmp((struct
! _dynforward_ptr)start,(struct _dynforward_ptr)needle,(unsigned int)len)== 0)
  return start;}}return(struct _dynforward_ptr)_tag_dynforward(0,0,0);}}struct
  _dynforward_ptr Cyc_mstrstr(struct _dynforward_ptr haystack,struct _dynforward_ptr
  needle){if(!((unsigned int)haystack.curr) || !((unsigned int)needle.curr))(int)
--- 1008,1014 ----
  _dynforward_ptr)_tag_dynforward(0,0,0)).curr;start=Cyc_strchr(
  _dynforward_ptr_plus(start,sizeof(char),1),*((const char*)
  _check_dynforward_subscript(needle,sizeof(char),0)))){if(Cyc_strncmp((struct
! _dynforward_ptr)start,(struct _dynforward_ptr)needle,(unsigned long)len)== 0)
  return start;}}return(struct _dynforward_ptr)_tag_dynforward(0,0,0);}}struct
  _dynforward_ptr Cyc_mstrstr(struct _dynforward_ptr haystack,struct _dynforward_ptr
  needle){if(!((unsigned int)haystack.curr) || !((unsigned int)needle.curr))(int)
***************
*** 1022,1052 ****
  _check_dynforward_subscript(needle,sizeof(char),0)))).curr != (_tag_dynforward(0,
  0,0)).curr;start=Cyc_mstrchr(_dynforward_ptr_plus(start,sizeof(char),1),*((const
  char*)_check_dynforward_subscript(needle,sizeof(char),0)))){if(Cyc_strncmp((
! struct _dynforward_ptr)start,(struct _dynforward_ptr)needle,(unsigned int)len)== 0)
! return start;}}return _tag_dynforward(0,0,0);}}unsigned int Cyc_strspn(struct
! _dynforward_ptr s,struct _dynforward_ptr accept){unsigned int len=Cyc_strlen((struct
! _dynforward_ptr)s);unsigned int asize=_get_dynforward_size(accept,sizeof(char));
! len <= _get_dynforward_size(s,sizeof(char))?0:((int(*)(struct _dynforward_ptr
! assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const
! char*_tmp4E="len <= s.size";_tag_dynforward(_tmp4E,sizeof(char),
  _get_zero_arr_size(_tmp4E,14));}),({const char*_tmp4F="string.cyc";
  _tag_dynforward(_tmp4F,sizeof(char),_get_zero_arr_size(_tmp4F,11));}),559);{
! unsigned int i=0;for(0;i < len;i ++){int j;for(j=0;j < asize;j ++){if(((const char*)s.curr)[(
  int)i]== ((const char*)accept.curr)[j])break;}if(j == asize)return i;}}return len;}
! unsigned int Cyc_strcspn(struct _dynforward_ptr s,struct _dynforward_ptr accept){
! unsigned int len=Cyc_strlen((struct _dynforward_ptr)s);unsigned int asize=
  _get_dynforward_size(accept,sizeof(char));len <= _get_dynforward_size(s,sizeof(
  char))?0:((int(*)(struct _dynforward_ptr assertion,struct _dynforward_ptr file,
  unsigned int line))Cyc___assert_fail)(({const char*_tmp50="len <= s.size";
  _tag_dynforward(_tmp50,sizeof(char),_get_zero_arr_size(_tmp50,14));}),({const
  char*_tmp51="string.cyc";_tag_dynforward(_tmp51,sizeof(char),_get_zero_arr_size(
! _tmp51,11));}),579);{unsigned int i=0;for(0;i < len;i ++){int j;for(j=0;j < asize;j ++){
! if(((const char*)s.curr)[(int)i]!= ((const char*)accept.curr)[j])break;}if(j == 
  asize)return i;}}return len;}struct _dynforward_ptr Cyc_strtok(struct _dynforward_ptr
  s,struct _dynforward_ptr delim){static struct _dynforward_ptr olds={(void*)0,(void*)(
  0 + 0)};struct _dynforward_ptr token;if(s.curr == (_tag_dynforward(0,0,0)).curr){if(
  olds.curr == (_tag_dynforward(0,0,0)).curr)return _tag_dynforward(0,0,0);s=olds;}{
! unsigned int inc=Cyc_strspn((struct _dynforward_ptr)s,delim);if(inc >= 
  _get_dynforward_size(s,sizeof(char)) || *((char*)_check_dynforward_subscript(
  _dynforward_ptr_plus(s,sizeof(char),(int)inc),sizeof(char),0))== '\000'){olds=
  _tag_dynforward(0,0,0);return _tag_dynforward(0,0,0);}else{
--- 1022,1052 ----
  _check_dynforward_subscript(needle,sizeof(char),0)))).curr != (_tag_dynforward(0,
  0,0)).curr;start=Cyc_mstrchr(_dynforward_ptr_plus(start,sizeof(char),1),*((const
  char*)_check_dynforward_subscript(needle,sizeof(char),0)))){if(Cyc_strncmp((
! struct _dynforward_ptr)start,(struct _dynforward_ptr)needle,(unsigned long)len)== 
! 0)return start;}}return _tag_dynforward(0,0,0);}}unsigned long Cyc_strspn(struct
! _dynforward_ptr s,struct _dynforward_ptr accept){unsigned long len=Cyc_strlen((
! struct _dynforward_ptr)s);unsigned int asize=_get_dynforward_size(accept,sizeof(
! char));len <= _get_dynforward_size(s,sizeof(char))?0:((int(*)(struct
! _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
! const char*_tmp4E="len <= s.size";_tag_dynforward(_tmp4E,sizeof(char),
  _get_zero_arr_size(_tmp4E,14));}),({const char*_tmp4F="string.cyc";
  _tag_dynforward(_tmp4F,sizeof(char),_get_zero_arr_size(_tmp4F,11));}),559);{
! unsigned long i=0;for(0;i < len;i ++){int j;for(j=0;j < asize;j ++){if(((const char*)s.curr)[(
  int)i]== ((const char*)accept.curr)[j])break;}if(j == asize)return i;}}return len;}
! unsigned long Cyc_strcspn(struct _dynforward_ptr s,struct _dynforward_ptr accept){
! unsigned long len=Cyc_strlen((struct _dynforward_ptr)s);unsigned int asize=
  _get_dynforward_size(accept,sizeof(char));len <= _get_dynforward_size(s,sizeof(
  char))?0:((int(*)(struct _dynforward_ptr assertion,struct _dynforward_ptr file,
  unsigned int line))Cyc___assert_fail)(({const char*_tmp50="len <= s.size";
  _tag_dynforward(_tmp50,sizeof(char),_get_zero_arr_size(_tmp50,14));}),({const
  char*_tmp51="string.cyc";_tag_dynforward(_tmp51,sizeof(char),_get_zero_arr_size(
! _tmp51,11));}),579);{unsigned long i=0;for(0;i < len;i ++){int j;for(j=0;j < asize;j
! ++){if(((const char*)s.curr)[(int)i]!= ((const char*)accept.curr)[j])break;}if(j == 
  asize)return i;}}return len;}struct _dynforward_ptr Cyc_strtok(struct _dynforward_ptr
  s,struct _dynforward_ptr delim){static struct _dynforward_ptr olds={(void*)0,(void*)(
  0 + 0)};struct _dynforward_ptr token;if(s.curr == (_tag_dynforward(0,0,0)).curr){if(
  olds.curr == (_tag_dynforward(0,0,0)).curr)return _tag_dynforward(0,0,0);s=olds;}{
! unsigned long inc=Cyc_strspn((struct _dynforward_ptr)s,delim);if(inc >= 
  _get_dynforward_size(s,sizeof(char)) || *((char*)_check_dynforward_subscript(
  _dynforward_ptr_plus(s,sizeof(char),(int)inc),sizeof(char),0))== '\000'){olds=
  _tag_dynforward(0,0,0);return _tag_dynforward(0,0,0);}else{
***************
*** 1064,1078 ****
  return result;}struct Cyc_List_List*Cyc_explode(struct _dynforward_ptr s){return Cyc_rexplode(
  Cyc_Core_heap_region,s);}struct _dynforward_ptr Cyc_implode(struct Cyc_List_List*
  chars){struct _dynforward_ptr s=Cyc_Core_new_string((unsigned int)(((int(*)(struct
! Cyc_List_List*x))Cyc_List_length)(chars)+ 1));unsigned int i=0;while(chars != 0){({
  struct _dynforward_ptr _tmp56=_dynforward_ptr_plus(s,sizeof(char),(int)i ++);char
  _tmp57=*((char*)_check_dynforward_subscript(_tmp56,sizeof(char),0));char _tmp58=(
  char)((int)chars->hd);if(_get_dynforward_size(_tmp56,sizeof(char))== 1  && (
  _tmp57 == '\000'  && _tmp58 != '\000'))_throw_arraybounds();*((char*)_tmp56.curr)=
  _tmp58;});chars=chars->tl;}return s;}inline static int Cyc_casecmp(struct
! _dynforward_ptr s1,unsigned int len1,struct _dynforward_ptr s2,unsigned int len2){
! unsigned int min_length=len1 < len2?len1: len2;min_length <= _get_dynforward_size(s1,
! sizeof(char)) && min_length <= _get_dynforward_size(s2,sizeof(char))?0:((int(*)(
  struct _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
  const char*_tmp59="min_length <= s1.size && min_length <= s2.size";
  _tag_dynforward(_tmp59,sizeof(char),_get_zero_arr_size(_tmp59,47));}),({const
--- 1064,1078 ----
  return result;}struct Cyc_List_List*Cyc_explode(struct _dynforward_ptr s){return Cyc_rexplode(
  Cyc_Core_heap_region,s);}struct _dynforward_ptr Cyc_implode(struct Cyc_List_List*
  chars){struct _dynforward_ptr s=Cyc_Core_new_string((unsigned int)(((int(*)(struct
! Cyc_List_List*x))Cyc_List_length)(chars)+ 1));unsigned long i=0;while(chars != 0){({
  struct _dynforward_ptr _tmp56=_dynforward_ptr_plus(s,sizeof(char),(int)i ++);char
  _tmp57=*((char*)_check_dynforward_subscript(_tmp56,sizeof(char),0));char _tmp58=(
  char)((int)chars->hd);if(_get_dynforward_size(_tmp56,sizeof(char))== 1  && (
  _tmp57 == '\000'  && _tmp58 != '\000'))_throw_arraybounds();*((char*)_tmp56.curr)=
  _tmp58;});chars=chars->tl;}return s;}inline static int Cyc_casecmp(struct
! _dynforward_ptr s1,unsigned long len1,struct _dynforward_ptr s2,unsigned long len2){
! unsigned long min_length=len1 < len2?len1: len2;min_length <= _get_dynforward_size(
! s1,sizeof(char)) && min_length <= _get_dynforward_size(s2,sizeof(char))?0:((int(*)(
  struct _dynforward_ptr assertion,struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({
  const char*_tmp59="min_length <= s1.size && min_length <= s2.size";
  _tag_dynforward(_tmp59,sizeof(char),_get_zero_arr_size(_tmp59,47));}),({const
***************
*** 1080,1109 ****
  _tmp5A,11));}),660);{int i=- 1;while((++ i,i < min_length)){int diff=toupper((int)((
  const char*)s1.curr)[i])- toupper((int)((const char*)s2.curr)[i]);if(diff != 0)
  return diff;}return(int)len1 - (int)len2;}}int Cyc_strcasecmp(struct _dynforward_ptr
! s1,struct _dynforward_ptr s2){if(s1.curr == s2.curr)return 0;{unsigned int len1=Cyc_strlen(
! s1);unsigned int len2=Cyc_strlen(s2);return Cyc_casecmp(s1,len1,s2,len2);}}inline
! static int Cyc_caseless_ncmp(struct _dynforward_ptr s1,unsigned int len1,struct
! _dynforward_ptr s2,unsigned int len2,unsigned int n){if(n <= 0)return 0;{unsigned int
! min_len=len1 > len2?len2: len1;unsigned int bound=min_len > n?n: min_len;bound <= 
! _get_dynforward_size(s1,sizeof(char)) && bound <= _get_dynforward_size(s2,sizeof(
! char))?0:((int(*)(struct _dynforward_ptr assertion,struct _dynforward_ptr file,
! unsigned int line))Cyc___assert_fail)(({const char*_tmp5B="bound <= s1.size && bound <= s2.size";
! _tag_dynforward(_tmp5B,sizeof(char),_get_zero_arr_size(_tmp5B,37));}),({const
! char*_tmp5C="string.cyc";_tag_dynforward(_tmp5C,sizeof(char),_get_zero_arr_size(
! _tmp5C,11));}),687);{int i=0;for(0;i < bound;i ++){int retc;if((retc=toupper((int)((
! const char*)s1.curr)[i])- toupper((int)((const char*)s2.curr)[i]))!= 0)return retc;}}
! if(len1 < n  || len2 < n)return(int)len1 - (int)len2;return 0;}}int Cyc_strncasecmp(
! struct _dynforward_ptr s1,struct _dynforward_ptr s2,unsigned int n){unsigned int len1=
! Cyc_strlen(s1);unsigned int len2=Cyc_strlen(s2);return Cyc_caseless_ncmp(s1,len1,
! s2,len2,n);}void*memcpy(void*,const void*,unsigned int n);void*memmove(void*,const
! void*,unsigned int n);int memcmp(const void*,const void*,unsigned int n);char*memchr(
! const char*,char c,unsigned int n);void*memset(void*,int c,unsigned int n);void bcopy(
! const void*src,void*dest,unsigned int n);void bzero(void*s,unsigned int n);char*
! GC_realloc(char*,unsigned int n);struct _dynforward_ptr Cyc_realloc(struct
! _dynforward_ptr s,unsigned int n){char*_tmp5D=GC_realloc((char*)_check_null(
  _untag_dynforward_ptr(s,sizeof(char),1)),n);return wrap_Cbuffer_as_buffer(_tmp5D,
  n);}struct _dynforward_ptr Cyc__memcpy(struct _dynforward_ptr d,struct
! _dynforward_ptr s,unsigned int n,unsigned int sz){if(((d.curr == (_tag_dynforward(0,
  0,0)).curr  || _get_dynforward_size(d,sizeof(void))< n) || s.curr == ((struct
  _dynforward_ptr)_tag_dynforward(0,0,0)).curr) || _get_dynforward_size(s,sizeof(
  void))< n)(int)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp5E=
--- 1080,1110 ----
  _tmp5A,11));}),660);{int i=- 1;while((++ i,i < min_length)){int diff=toupper((int)((
  const char*)s1.curr)[i])- toupper((int)((const char*)s2.curr)[i]);if(diff != 0)
  return diff;}return(int)len1 - (int)len2;}}int Cyc_strcasecmp(struct _dynforward_ptr
! s1,struct _dynforward_ptr s2){if(s1.curr == s2.curr)return 0;{unsigned long len1=Cyc_strlen(
! s1);unsigned long len2=Cyc_strlen(s2);return Cyc_casecmp(s1,len1,s2,len2);}}inline
! static int Cyc_caseless_ncmp(struct _dynforward_ptr s1,unsigned long len1,struct
! _dynforward_ptr s2,unsigned long len2,unsigned long n){if(n <= 0)return 0;{
! unsigned long min_len=len1 > len2?len2: len1;unsigned long bound=min_len > n?n:
! min_len;bound <= _get_dynforward_size(s1,sizeof(char)) && bound <= 
! _get_dynforward_size(s2,sizeof(char))?0:((int(*)(struct _dynforward_ptr assertion,
! struct _dynforward_ptr file,unsigned int line))Cyc___assert_fail)(({const char*
! _tmp5B="bound <= s1.size && bound <= s2.size";_tag_dynforward(_tmp5B,sizeof(char),
! _get_zero_arr_size(_tmp5B,37));}),({const char*_tmp5C="string.cyc";
! _tag_dynforward(_tmp5C,sizeof(char),_get_zero_arr_size(_tmp5C,11));}),687);{int i=
! 0;for(0;i < bound;i ++){int retc;if((retc=toupper((int)((const char*)s1.curr)[i])- 
! toupper((int)((const char*)s2.curr)[i]))!= 0)return retc;}}if(len1 < n  || len2 < n)
! return(int)len1 - (int)len2;return 0;}}int Cyc_strncasecmp(struct _dynforward_ptr s1,
! struct _dynforward_ptr s2,unsigned long n){unsigned long len1=Cyc_strlen(s1);
! unsigned long len2=Cyc_strlen(s2);return Cyc_caseless_ncmp(s1,len1,s2,len2,n);}
! void*memcpy(void*,const void*,unsigned long n);void*memmove(void*,const void*,
! unsigned long n);int memcmp(const void*,const void*,unsigned long n);char*memchr(
! const char*,char c,unsigned long n);void*memset(void*,int c,unsigned long n);void
! bcopy(const void*src,void*dest,unsigned long n);void bzero(void*s,unsigned long n);
! char*GC_realloc(char*,unsigned long n);struct _dynforward_ptr Cyc_realloc(struct
! _dynforward_ptr s,unsigned long n){char*_tmp5D=GC_realloc((char*)_check_null(
  _untag_dynforward_ptr(s,sizeof(char),1)),n);return wrap_Cbuffer_as_buffer(_tmp5D,
  n);}struct _dynforward_ptr Cyc__memcpy(struct _dynforward_ptr d,struct
! _dynforward_ptr s,unsigned long n,unsigned int sz){if(((d.curr == (_tag_dynforward(0,
  0,0)).curr  || _get_dynforward_size(d,sizeof(void))< n) || s.curr == ((struct
  _dynforward_ptr)_tag_dynforward(0,0,0)).curr) || _get_dynforward_size(s,sizeof(
  void))< n)(int)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp5E=
***************
*** 1113,1119 ****
  _tmp5E;}));memcpy((void*)_check_null(_untag_dynforward_ptr(d,sizeof(void),1)),(
  const void*)_check_null(_untag_dynforward_ptr(s,sizeof(void),1)),n * sz);return d;}
  struct _dynforward_ptr Cyc__memmove(struct _dynforward_ptr d,struct _dynforward_ptr s,
! unsigned int n,unsigned int sz){if(((d.curr == (_tag_dynforward(0,0,0)).curr  || 
  _get_dynforward_size(d,sizeof(void))< n) || s.curr == ((struct _dynforward_ptr)
  _tag_dynforward(0,0,0)).curr) || _get_dynforward_size(s,sizeof(void))< n)(int)
  _throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp61=_cycalloc(sizeof(*
--- 1114,1120 ----
  _tmp5E;}));memcpy((void*)_check_null(_untag_dynforward_ptr(d,sizeof(void),1)),(
  const void*)_check_null(_untag_dynforward_ptr(s,sizeof(void),1)),n * sz);return d;}
  struct _dynforward_ptr Cyc__memmove(struct _dynforward_ptr d,struct _dynforward_ptr s,
! unsigned long n,unsigned int sz){if(((d.curr == (_tag_dynforward(0,0,0)).curr  || 
  _get_dynforward_size(d,sizeof(void))< n) || s.curr == ((struct _dynforward_ptr)
  _tag_dynforward(0,0,0)).curr) || _get_dynforward_size(s,sizeof(void))< n)(int)
  _throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp61=_cycalloc(sizeof(*
***************
*** 1122,1129 ****
  _get_zero_arr_size(_tmp63,7));});_tmp62;});_tmp61;}));memmove((void*)_check_null(
  _untag_dynforward_ptr(d,sizeof(void),1)),(const void*)_check_null(
  _untag_dynforward_ptr(s,sizeof(void),1)),n * sz);return d;}int Cyc_memcmp(struct
! _dynforward_ptr s1,struct _dynforward_ptr s2,unsigned int n){if(((s1.curr == ((struct
! _dynforward_ptr)_tag_dynforward(0,0,0)).curr  || s2.curr == ((struct
  _dynforward_ptr)_tag_dynforward(0,0,0)).curr) || _get_dynforward_size(s1,sizeof(
  char))>= n) || _get_dynforward_size(s2,sizeof(char))>= n)(int)_throw((void*)({
  struct Cyc_Core_Invalid_argument_struct*_tmp64=_cycalloc(sizeof(*_tmp64));_tmp64[
--- 1123,1130 ----
  _get_zero_arr_size(_tmp63,7));});_tmp62;});_tmp61;}));memmove((void*)_check_null(
  _untag_dynforward_ptr(d,sizeof(void),1)),(const void*)_check_null(
  _untag_dynforward_ptr(s,sizeof(void),1)),n * sz);return d;}int Cyc_memcmp(struct
! _dynforward_ptr s1,struct _dynforward_ptr s2,unsigned long n){if(((s1.curr == ((
! struct _dynforward_ptr)_tag_dynforward(0,0,0)).curr  || s2.curr == ((struct
  _dynforward_ptr)_tag_dynforward(0,0,0)).curr) || _get_dynforward_size(s1,sizeof(
  char))>= n) || _get_dynforward_size(s2,sizeof(char))>= n)(int)_throw((void*)({
  struct Cyc_Core_Invalid_argument_struct*_tmp64=_cycalloc(sizeof(*_tmp64));_tmp64[
***************
*** 1132,1138 ****
  _get_zero_arr_size(_tmp66,7));});_tmp65;});_tmp64;}));return memcmp((const void*)
  _check_null(_untag_dynforward_ptr(s1,sizeof(char),1)),(const void*)_check_null(
  _untag_dynforward_ptr(s2,sizeof(char),1)),n);}struct _dynforward_ptr Cyc_memchr(
! struct _dynforward_ptr s,char c,unsigned int n){unsigned int sz=_get_dynforward_size(
  s,sizeof(char));if(s.curr == ((struct _dynforward_ptr)_tag_dynforward(0,0,0)).curr
   || n > sz)(int)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp67=
  _cycalloc(sizeof(*_tmp67));_tmp67[0]=({struct Cyc_Core_Invalid_argument_struct
--- 1133,1139 ----
  _get_zero_arr_size(_tmp66,7));});_tmp65;});_tmp64;}));return memcmp((const void*)
  _check_null(_untag_dynforward_ptr(s1,sizeof(char),1)),(const void*)_check_null(
  _untag_dynforward_ptr(s2,sizeof(char),1)),n);}struct _dynforward_ptr Cyc_memchr(
! struct _dynforward_ptr s,char c,unsigned long n){unsigned int sz=_get_dynforward_size(
  s,sizeof(char));if(s.curr == ((struct _dynforward_ptr)_tag_dynforward(0,0,0)).curr
   || n > sz)(int)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp67=
  _cycalloc(sizeof(*_tmp67));_tmp67[0]=({struct Cyc_Core_Invalid_argument_struct
***************
*** 1144,1150 ****
  _untag_dynforward_ptr(s,sizeof(char),1)));unsigned int _tmp6C=(unsigned int)((
  const char*)_tmp6A);unsigned int _tmp6D=_tmp6C - _tmp6B;return _dynforward_ptr_plus(
  s,sizeof(char),(int)_tmp6D);}}}struct _dynforward_ptr Cyc_mmemchr(struct
! _dynforward_ptr s,char c,unsigned int n){unsigned int sz=_get_dynforward_size(s,
  sizeof(char));if(s.curr == (_tag_dynforward(0,0,0)).curr  || n > sz)(int)_throw((
  void*)({struct Cyc_Core_Invalid_argument_struct*_tmp6E=_cycalloc(sizeof(*_tmp6E));
  _tmp6E[0]=({struct Cyc_Core_Invalid_argument_struct _tmp6F;_tmp6F.tag=Cyc_Core_Invalid_argument;
--- 1145,1151 ----
  _untag_dynforward_ptr(s,sizeof(char),1)));unsigned int _tmp6C=(unsigned int)((
  const char*)_tmp6A);unsigned int _tmp6D=_tmp6C - _tmp6B;return _dynforward_ptr_plus(
  s,sizeof(char),(int)_tmp6D);}}}struct _dynforward_ptr Cyc_mmemchr(struct
! _dynforward_ptr s,char c,unsigned long n){unsigned int sz=_get_dynforward_size(s,
  sizeof(char));if(s.curr == (_tag_dynforward(0,0,0)).curr  || n > sz)(int)_throw((
  void*)({struct Cyc_Core_Invalid_argument_struct*_tmp6E=_cycalloc(sizeof(*_tmp6E));
  _tmp6E[0]=({struct Cyc_Core_Invalid_argument_struct _tmp6F;_tmp6F.tag=Cyc_Core_Invalid_argument;
***************
*** 1155,1175 ****
  _check_null(_untag_dynforward_ptr(s,sizeof(char),1)));unsigned int _tmp73=(
  unsigned int)_tmp71;unsigned int _tmp74=_tmp73 - _tmp72;return _dynforward_ptr_plus(
  s,sizeof(char),(int)_tmp74);}}}struct _dynforward_ptr Cyc_memset(struct
! _dynforward_ptr s,char c,unsigned int n){if(s.curr == (_tag_dynforward(0,0,0)).curr
   || n > _get_dynforward_size(s,sizeof(char)))(int)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*
  _tmp75=_cycalloc(sizeof(*_tmp75));_tmp75[0]=({struct Cyc_Core_Invalid_argument_struct
  _tmp76;_tmp76.tag=Cyc_Core_Invalid_argument;_tmp76.f1=({const char*_tmp77="memset";
  _tag_dynforward(_tmp77,sizeof(char),_get_zero_arr_size(_tmp77,7));});_tmp76;});
  _tmp75;}));memset((void*)((char*)_check_null(_untag_dynforward_ptr(s,sizeof(char),
! 1))),(int)c,n);return s;}void Cyc_bzero(struct _dynforward_ptr s,unsigned int n){if(s.curr
! == (_tag_dynforward(0,0,0)).curr  || _get_dynforward_size(s,sizeof(char))< n)(int)
! _throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp78=_cycalloc(sizeof(*
! _tmp78));_tmp78[0]=({struct Cyc_Core_Invalid_argument_struct _tmp79;_tmp79.tag=Cyc_Core_Invalid_argument;
! _tmp79.f1=({const char*_tmp7A="bzero";_tag_dynforward(_tmp7A,sizeof(char),
! _get_zero_arr_size(_tmp7A,6));});_tmp79;});_tmp78;}));((void(*)(char*s,
! unsigned int n))bzero)((char*)_check_null(_untag_dynforward_ptr(s,sizeof(char),1)),
! n);}void Cyc__bcopy(struct _dynforward_ptr src,struct _dynforward_ptr dst,
! unsigned int n,unsigned int sz){if(((src.curr == ((struct _dynforward_ptr)
  _tag_dynforward(0,0,0)).curr  || _get_dynforward_size(src,sizeof(void))< n) || 
  dst.curr == (_tag_dynforward(0,0,0)).curr) || _get_dynforward_size(dst,sizeof(
  void))< n)(int)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp7B=
--- 1156,1176 ----
  _check_null(_untag_dynforward_ptr(s,sizeof(char),1)));unsigned int _tmp73=(
  unsigned int)_tmp71;unsigned int _tmp74=_tmp73 - _tmp72;return _dynforward_ptr_plus(
  s,sizeof(char),(int)_tmp74);}}}struct _dynforward_ptr Cyc_memset(struct
! _dynforward_ptr s,char c,unsigned long n){if(s.curr == (_tag_dynforward(0,0,0)).curr
   || n > _get_dynforward_size(s,sizeof(char)))(int)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*
  _tmp75=_cycalloc(sizeof(*_tmp75));_tmp75[0]=({struct Cyc_Core_Invalid_argument_struct
  _tmp76;_tmp76.tag=Cyc_Core_Invalid_argument;_tmp76.f1=({const char*_tmp77="memset";
  _tag_dynforward(_tmp77,sizeof(char),_get_zero_arr_size(_tmp77,7));});_tmp76;});
  _tmp75;}));memset((void*)((char*)_check_null(_untag_dynforward_ptr(s,sizeof(char),
! 1))),(int)c,n);return s;}void Cyc_bzero(struct _dynforward_ptr s,unsigned long n){if(
! s.curr == (_tag_dynforward(0,0,0)).curr  || _get_dynforward_size(s,sizeof(char))< 
! n)(int)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp78=_cycalloc(
! sizeof(*_tmp78));_tmp78[0]=({struct Cyc_Core_Invalid_argument_struct _tmp79;_tmp79.tag=
! Cyc_Core_Invalid_argument;_tmp79.f1=({const char*_tmp7A="bzero";_tag_dynforward(
! _tmp7A,sizeof(char),_get_zero_arr_size(_tmp7A,6));});_tmp79;});_tmp78;}));((void(*)(
! char*s,unsigned long n))bzero)((char*)_check_null(_untag_dynforward_ptr(s,sizeof(
! char),1)),n);}void Cyc__bcopy(struct _dynforward_ptr src,struct _dynforward_ptr dst,
! unsigned long n,unsigned int sz){if(((src.curr == ((struct _dynforward_ptr)
  _tag_dynforward(0,0,0)).curr  || _get_dynforward_size(src,sizeof(void))< n) || 
  dst.curr == (_tag_dynforward(0,0,0)).curr) || _get_dynforward_size(dst,sizeof(
  void))< n)(int)_throw((void*)({struct Cyc_Core_Invalid_argument_struct*_tmp7B=
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/tmp.c powerpc-apple-rhapsody/lib/tmp.c
*** i686-unknown-linux/lib/tmp.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/tmp.c	Thu Jun 27 17:35:18 2002
***************
*** 658,667 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc___cycFILE*Cyc_fromCfile(struct Cyc_Cstdio___abstractFILE*cf);struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
--- 658,665 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct
! Cyc___cycFILE*Cyc_fromCfile(struct Cyc_Cstdio___abstractFILE*cf);struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/typerep.c powerpc-apple-rhapsody/lib/typerep.c
*** i686-unknown-linux/lib/typerep.c	Sun Jun 23 17:46:10 2002
--- powerpc-apple-rhapsody/lib/typerep.c	Thu Jun 27 17:35:18 2002
***************
*** 677,687 ****
  struct _dynforward_ptr l);struct _dynforward_ptr Cyc_Typerep_get_tagname2(
  unsigned int tag,struct _dynforward_ptr l);struct _tuple4 Cyc_Typerep_get_xtunionbranch(
  struct _dynforward_ptr tag,struct _dynforward_ptr l);unsigned int Cyc_Typerep_size_type(
! void*rep);typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}
! __value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
--- 677,685 ----
  struct _dynforward_ptr l);struct _dynforward_ptr Cyc_Typerep_get_tagname2(
  unsigned int tag,struct _dynforward_ptr l);struct _tuple4 Cyc_Typerep_get_xtunionbranch(
  struct _dynforward_ptr tag,struct _dynforward_ptr l);unsigned int Cyc_Typerep_size_type(
! void*rep);struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/absyn.c powerpc-apple-rhapsody/src/absyn.c
*** i686-unknown-linux/src/absyn.c	Thu Jun 27 17:34:20 2002
--- powerpc-apple-rhapsody/src/absyn.c	Thu Jun 27 17:35:20 2002
***************
*** 1026,1040 ****
  int tag;struct _dynforward_ptr*f1;int f2;struct _dynforward_ptr f3;};struct Cyc_Typerep_Enum_struct{
  int tag;struct _dynforward_ptr*f1;int f2;struct _dynforward_ptr f3;};unsigned int Cyc_Typerep_size_type(
  void*rep);extern void*Cyc_decls_rep;extern struct Cyc_Typerep_Struct_struct Cyc_struct_Position_Segment_rep;
! int Cyc_strptrcmp(struct _dynforward_ptr*s1,struct _dynforward_ptr*s2);typedef
! struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
! int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
! int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
! struct _dynforward_ptr);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{
  int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{
  int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;};struct Cyc_FloatPtr_sa_struct{
--- 1026,1038 ----
  int tag;struct _dynforward_ptr*f1;int f2;struct _dynforward_ptr f3;};struct Cyc_Typerep_Enum_struct{
  int tag;struct _dynforward_ptr*f1;int f2;struct _dynforward_ptr f3;};unsigned int Cyc_Typerep_size_type(
  void*rep);extern void*Cyc_decls_rep;extern struct Cyc_Typerep_Struct_struct Cyc_struct_Position_Segment_rep;
! int Cyc_strptrcmp(struct _dynforward_ptr*s1,struct _dynforward_ptr*s2);struct Cyc___cycFILE;
! struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
! _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
! int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
! Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{int tag;
! unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,struct
! _dynforward_ptr);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{
  int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{
  int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;};struct Cyc_FloatPtr_sa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/absyndump.c powerpc-apple-rhapsody/src/absyndump.c
*** i686-unknown-linux/src/absyndump.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/absyndump.c	Thu Jun 27 17:35:20 2002
***************
*** 658,666 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdout;
  struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
  int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
--- 658,664 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdout;
  struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
  int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
***************
*** 680,686 ****
  Cyc_List_map(void*(*f)(void*),struct Cyc_List_List*x);extern char Cyc_List_List_mismatch[
  18];struct Cyc_List_List*Cyc_List_imp_rev(struct Cyc_List_List*x);struct Cyc_List_List*
  Cyc_List_imp_append(struct Cyc_List_List*x,struct Cyc_List_List*y);extern char Cyc_List_Nth[
! 8];int Cyc_List_exists(int(*pred)(void*),struct Cyc_List_List*x);unsigned int Cyc_strlen(
  struct _dynforward_ptr s);struct Cyc_Lineno_Pos{struct _dynforward_ptr logical_file;
  struct _dynforward_ptr line;int line_no;int col;};extern char Cyc_Position_Exit[9];
  struct Cyc_Position_Segment;struct Cyc_Position_Error{struct _dynforward_ptr source;
--- 678,684 ----
  Cyc_List_map(void*(*f)(void*),struct Cyc_List_List*x);extern char Cyc_List_List_mismatch[
  18];struct Cyc_List_List*Cyc_List_imp_rev(struct Cyc_List_List*x);struct Cyc_List_List*
  Cyc_List_imp_append(struct Cyc_List_List*x,struct Cyc_List_List*y);extern char Cyc_List_Nth[
! 8];int Cyc_List_exists(int(*pred)(void*),struct Cyc_List_List*x);unsigned long Cyc_strlen(
  struct _dynforward_ptr s);struct Cyc_Lineno_Pos{struct _dynforward_ptr logical_file;
  struct _dynforward_ptr line;int line_no;int col;};extern char Cyc_Position_Exit[9];
  struct Cyc_Position_Segment;struct Cyc_Position_Error{struct _dynforward_ptr source;
diff -rbBcN --exclude=CVS i686-unknown-linux/src/absynpp.c powerpc-apple-rhapsody/src/absynpp.c
*** i686-unknown-linux/src/absynpp.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/absynpp.c	Thu Jun 27 17:35:20 2002
***************
*** 659,667 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;
  struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
  int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
--- 659,665 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;
  struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
  int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
***************
*** 895,901 ****
  struct Cyc_Absyn_Exp*Cyc_Absyn_sizeoftyp_exp(void*t,struct Cyc_Position_Segment*);
  struct _dynforward_ptr Cyc_Absyn_attribute2string(void*);struct _tuple3{void*f1;
  struct _tuple0*f2;};struct _tuple3 Cyc_Absyn_aggr_kinded_name(void*);struct Cyc_Buffer_t;
! unsigned int Cyc_strlen(struct _dynforward_ptr s);int Cyc_strptrcmp(struct
  _dynforward_ptr*s1,struct _dynforward_ptr*s2);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_str_sepstr(
  struct Cyc_List_List*,struct _dynforward_ptr);struct _tuple4{unsigned int f1;int f2;}
--- 893,899 ----
  struct Cyc_Absyn_Exp*Cyc_Absyn_sizeoftyp_exp(void*t,struct Cyc_Position_Segment*);
  struct _dynforward_ptr Cyc_Absyn_attribute2string(void*);struct _tuple3{void*f1;
  struct _tuple0*f2;};struct _tuple3 Cyc_Absyn_aggr_kinded_name(void*);struct Cyc_Buffer_t;
! unsigned long Cyc_strlen(struct _dynforward_ptr s);int Cyc_strptrcmp(struct
  _dynforward_ptr*s1,struct _dynforward_ptr*s2);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_str_sepstr(
  struct Cyc_List_List*,struct _dynforward_ptr);struct _tuple4{unsigned int f1;int f2;}
diff -rbBcN --exclude=CVS i686-unknown-linux/src/buildlib.c powerpc-apple-rhapsody/src/buildlib.c
*** i686-unknown-linux/src/buildlib.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/buildlib.c	Thu Jun 27 17:35:22 2002
***************
*** 660,672 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;struct
! _dynforward_ptr Cstring_to_string(char*);typedef struct{int __count;union{
! unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;typedef struct{long
! __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t Cyc_fpos_t;
! struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
! int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fclose(struct Cyc___cycFILE*);int Cyc_fflush(struct
  Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_fopen(const char*,const char*);int Cyc_fprintf(
--- 660,670 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;struct
! _dynforward_ptr Cstring_to_string(char*);struct Cyc___cycFILE;extern struct Cyc___cycFILE*
! Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;
! struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};
! struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{int
! tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fclose(struct Cyc___cycFILE*);int Cyc_fflush(struct
  Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_fopen(const char*,const char*);int Cyc_fprintf(
***************
*** 705,715 ****
  Cyc_Set_Set*Cyc_Set_delete(struct Cyc_Set_Set*s,void*elt);int Cyc_Set_cardinality(
  struct Cyc_Set_Set*s);int Cyc_Set_member(struct Cyc_Set_Set*s,void*elt);extern char
  Cyc_Set_Absent[11];struct Cyc_Iter_Iter Cyc_Set_make_iter(struct _RegionHandle*rgn,
! struct Cyc_Set_Set*s);unsigned int Cyc_strlen(struct _dynforward_ptr s);int Cyc_strptrcmp(
  struct _dynforward_ptr*s1,struct _dynforward_ptr*s2);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_strdup(
  struct _dynforward_ptr src);struct _dynforward_ptr Cyc_substring(struct
! _dynforward_ptr,int ofs,unsigned int n);struct Cyc_Hashtable_Table;struct Cyc_Hashtable_Table*
  Cyc_Hashtable_create(int sz,int(*cmp)(void*,void*),int(*hash)(void*));void Cyc_Hashtable_insert(
  struct Cyc_Hashtable_Table*t,void*key,void*val);void*Cyc_Hashtable_lookup(struct
  Cyc_Hashtable_Table*t,void*key);int Cyc_Hashtable_hash_stringptr(struct
--- 703,713 ----
  Cyc_Set_Set*Cyc_Set_delete(struct Cyc_Set_Set*s,void*elt);int Cyc_Set_cardinality(
  struct Cyc_Set_Set*s);int Cyc_Set_member(struct Cyc_Set_Set*s,void*elt);extern char
  Cyc_Set_Absent[11];struct Cyc_Iter_Iter Cyc_Set_make_iter(struct _RegionHandle*rgn,
! struct Cyc_Set_Set*s);unsigned long Cyc_strlen(struct _dynforward_ptr s);int Cyc_strptrcmp(
  struct _dynforward_ptr*s1,struct _dynforward_ptr*s2);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_strdup(
  struct _dynforward_ptr src);struct _dynforward_ptr Cyc_substring(struct
! _dynforward_ptr,int ofs,unsigned long n);struct Cyc_Hashtable_Table;struct Cyc_Hashtable_Table*
  Cyc_Hashtable_create(int sz,int(*cmp)(void*,void*),int(*hash)(void*));void Cyc_Hashtable_insert(
  struct Cyc_Hashtable_Table*t,void*key,void*val);void*Cyc_Hashtable_lookup(struct
  Cyc_Hashtable_Table*t,void*key);int Cyc_Hashtable_hash_stringptr(struct
***************
*** 1025,1049 ****
  le;};struct Cyc_Tcenv_Tenv*Cyc_Tcenv_tc_init(struct _RegionHandle*);void Cyc_Tc_tc(
  struct _RegionHandle*,struct Cyc_Tcenv_Tenv*te,int var_default_init,struct Cyc_List_List*
  ds);typedef struct{int quot;int rem;}Cyc_div_t;typedef struct{long quot;long rem;}Cyc_ldiv_t;
! void*abort();void exit(int);int system(const char*);struct Cyc_stat{
! unsigned long long st_dev;unsigned short __pad1;unsigned long st_ino;unsigned int
! st_mode;unsigned int st_nlink;unsigned int st_uid;unsigned int st_gid;
! unsigned long long st_rdev;unsigned short __pad2;long st_size;long st_blksize;long
! st_blocks;long st_atime;unsigned long __unused1;long st_mtime;unsigned long
! __unused2;long st_ctime;unsigned long __unused3;unsigned long __unused4;
! unsigned long __unused5;};int mkdir(const char*pathname,unsigned int mode);struct Cyc_flock{
! short l_type;short l_whence;long l_start;long l_len;int l_pid;};struct Cyc_Flock_struct{
! int tag;struct Cyc_flock*f1;};struct Cyc_Long_struct{int tag;long f1;};int Cyc_open(
! const char*,int,struct _dynforward_ptr);enum Cyc___anonymous_enum_368__{Cyc__PC_LINK_MAX
!  = 0,Cyc__PC_MAX_CANON  = 1,Cyc__PC_MAX_INPUT  = 2,Cyc__PC_NAME_MAX  = 3,Cyc__PC_PATH_MAX
!  = 4,Cyc__PC_PIPE_BUF  = 5,Cyc__PC_CHOWN_RESTRICTED  = 6,Cyc__PC_NO_TRUNC  = 7,Cyc__PC_VDISABLE
!  = 8,Cyc__PC_SYNC_IO  = 9,Cyc__PC_ASYNC_IO  = 10,Cyc__PC_PRIO_IO  = 11,Cyc__PC_SOCK_MAXBUF
!  = 12,Cyc__PC_FILESIZEBITS  = 13,Cyc__PC_REC_INCR_XFER_SIZE  = 14,Cyc__PC_REC_MAX_XFER_SIZE
!  = 15,Cyc__PC_REC_MIN_XFER_SIZE  = 16,Cyc__PC_REC_XFER_ALIGN  = 17,Cyc__PC_ALLOC_SIZE_MIN
!  = 18,Cyc__PC_SYMLINK_MAX  = 19};enum Cyc___anonymous_enum_370__{Cyc__CS_PATH  = 0,
! Cyc__CS_V6_WIDTH_RESTRICTED_ENVS  = 1};struct Cyc_option{struct _dynforward_ptr name;
! int has_arg;int*flag;int val;};int chdir(const char*);int close(int);struct
! _dynforward_ptr Cyc_getcwd(struct _dynforward_ptr buf,unsigned int size);int isspace(
  int);int toupper(int);void Cyc_Lex_lex_init(int use_cyclone_keywords);extern char*
  Ccomp;struct Cyc___cycFILE*Cyc_log_file=0;struct Cyc___cycFILE*Cyc_cstubs_file=0;
  struct Cyc___cycFILE*Cyc_cycstubs_file=0;int Cyc_log(struct _dynforward_ptr fmt,
--- 1023,1040 ----
  le;};struct Cyc_Tcenv_Tenv*Cyc_Tcenv_tc_init(struct _RegionHandle*);void Cyc_Tc_tc(
  struct _RegionHandle*,struct Cyc_Tcenv_Tenv*te,int var_default_init,struct Cyc_List_List*
  ds);typedef struct{int quot;int rem;}Cyc_div_t;typedef struct{long quot;long rem;}Cyc_ldiv_t;
! void*abort();void exit(int);int system(const char*);struct Cyc_timespec{long tv_sec;
! int tv_nsec;};struct Cyc_stat{int st_dev;unsigned int st_ino;unsigned short st_mode;
! unsigned short st_nlink;unsigned int st_uid;unsigned int st_gid;int st_rdev;struct
! Cyc_timespec st_atimespec;struct Cyc_timespec st_mtimespec;struct Cyc_timespec
! st_ctimespec;long long st_size;long long st_blocks;unsigned int st_blksize;
! unsigned int st_flags;unsigned int st_gen;int st_lspare;long long st_qspare[2];};int
! mkdir(const char*pathname,unsigned short mode);struct Cyc_flock{long long l_start;
! long long l_len;int l_pid;short l_type;short l_whence;};struct Cyc_Flock_struct{int
! tag;struct Cyc_flock*f1;};struct Cyc_Long_struct{int tag;long f1;};int Cyc_open(const
! char*,int,struct _dynforward_ptr);struct Cyc_option{struct _dynforward_ptr name;int
! has_arg;int*flag;int val;};int chdir(const char*);int close(int);struct
! _dynforward_ptr Cyc_getcwd(struct _dynforward_ptr buf,unsigned long size);int isspace(
  int);int toupper(int);void Cyc_Lex_lex_init(int use_cyclone_keywords);extern char*
  Ccomp;struct Cyc___cycFILE*Cyc_log_file=0;struct Cyc___cycFILE*Cyc_cstubs_file=0;
  struct Cyc___cycFILE*Cyc_cycstubs_file=0;int Cyc_log(struct _dynforward_ptr fmt,
***************
*** 1460,1472 ****
  lexstate=Cyc_lex_engine(lexstate,lexbuf);switch(lexstate){case 0: _LL5: Cyc_current_source=({
  struct _dynforward_ptr*_tmpC=_cycalloc(sizeof(*_tmpC));_tmpC[0]=(struct
  _dynforward_ptr)Cyc_substring((struct _dynforward_ptr)Cyc_Lexing_lexeme(lexbuf),0,(
! unsigned int)((Cyc_Lexing_lexeme_end(lexbuf)- Cyc_Lexing_lexeme_start(lexbuf))- 
  2));_tmpC;});Cyc_current_args=0;Cyc_current_targets=({struct Cyc_Set_Set**_tmpD=
  _cycalloc(sizeof(*_tmpD));_tmpD[0]=((struct Cyc_Set_Set*(*)(int(*cmp)(struct
  _dynforward_ptr*,struct _dynforward_ptr*)))Cyc_Set_empty)(Cyc_strptrcmp);_tmpD;});
  Cyc_token(lexbuf);return 0;case 1: _LL6: Cyc_current_source=({struct _dynforward_ptr*
  _tmpE=_cycalloc(sizeof(*_tmpE));_tmpE[0]=(struct _dynforward_ptr)Cyc_substring((
! struct _dynforward_ptr)Cyc_Lexing_lexeme(lexbuf),0,(unsigned int)((Cyc_Lexing_lexeme_end(
  lexbuf)- Cyc_Lexing_lexeme_start(lexbuf))- 1));_tmpE;});Cyc_current_args=0;Cyc_current_targets=({
  struct Cyc_Set_Set**_tmpF=_cycalloc(sizeof(*_tmpF));_tmpF[0]=((struct Cyc_Set_Set*(*)(
  int(*cmp)(struct _dynforward_ptr*,struct _dynforward_ptr*)))Cyc_Set_empty)(Cyc_strptrcmp);
--- 1451,1463 ----
  lexstate=Cyc_lex_engine(lexstate,lexbuf);switch(lexstate){case 0: _LL5: Cyc_current_source=({
  struct _dynforward_ptr*_tmpC=_cycalloc(sizeof(*_tmpC));_tmpC[0]=(struct
  _dynforward_ptr)Cyc_substring((struct _dynforward_ptr)Cyc_Lexing_lexeme(lexbuf),0,(
! unsigned long)((Cyc_Lexing_lexeme_end(lexbuf)- Cyc_Lexing_lexeme_start(lexbuf))- 
  2));_tmpC;});Cyc_current_args=0;Cyc_current_targets=({struct Cyc_Set_Set**_tmpD=
  _cycalloc(sizeof(*_tmpD));_tmpD[0]=((struct Cyc_Set_Set*(*)(int(*cmp)(struct
  _dynforward_ptr*,struct _dynforward_ptr*)))Cyc_Set_empty)(Cyc_strptrcmp);_tmpD;});
  Cyc_token(lexbuf);return 0;case 1: _LL6: Cyc_current_source=({struct _dynforward_ptr*
  _tmpE=_cycalloc(sizeof(*_tmpE));_tmpE[0]=(struct _dynforward_ptr)Cyc_substring((
! struct _dynforward_ptr)Cyc_Lexing_lexeme(lexbuf),0,(unsigned long)((Cyc_Lexing_lexeme_end(
  lexbuf)- Cyc_Lexing_lexeme_start(lexbuf))- 1));_tmpE;});Cyc_current_args=0;Cyc_current_targets=({
  struct Cyc_Set_Set**_tmpF=_cycalloc(sizeof(*_tmpF));_tmpF[0]=((struct Cyc_Set_Set*(*)(
  int(*cmp)(struct _dynforward_ptr*,struct _dynforward_ptr*)))Cyc_Set_empty)(Cyc_strptrcmp);
***************
*** 1485,1497 ****
  Cyc_lex_engine(lexstate,lexbuf);switch(lexstate){case 0: _LLA: {struct
  _dynforward_ptr*_tmp15=({struct _dynforward_ptr*_tmp17=_cycalloc(sizeof(*_tmp17));
  _tmp17[0]=(struct _dynforward_ptr)Cyc_substring((struct _dynforward_ptr)Cyc_Lexing_lexeme(
! lexbuf),0,(unsigned int)((Cyc_Lexing_lexeme_end(lexbuf)- Cyc_Lexing_lexeme_start(
  lexbuf))- 2));_tmp17;});Cyc_current_args=({struct Cyc_List_List*_tmp16=_cycalloc(
  sizeof(*_tmp16));_tmp16->hd=_tmp15;_tmp16->tl=Cyc_current_args;_tmp16;});return
  Cyc_args(lexbuf);}case 1: _LLB: {struct _dynforward_ptr*_tmp18=({struct
  _dynforward_ptr*_tmp1A=_cycalloc(sizeof(*_tmp1A));_tmp1A[0]=(struct
  _dynforward_ptr)Cyc_substring((struct _dynforward_ptr)Cyc_Lexing_lexeme(lexbuf),0,(
! unsigned int)((Cyc_Lexing_lexeme_end(lexbuf)- Cyc_Lexing_lexeme_start(lexbuf))- 
  1));_tmp1A;});Cyc_current_args=({struct Cyc_List_List*_tmp19=_cycalloc(sizeof(*
  _tmp19));_tmp19->hd=_tmp18;_tmp19->tl=Cyc_current_args;_tmp19;});return Cyc_token(
  lexbuf);}default: _LLC:(lexbuf->refill_buff)(lexbuf);return Cyc_args_rec(lexbuf,
--- 1476,1488 ----
  Cyc_lex_engine(lexstate,lexbuf);switch(lexstate){case 0: _LLA: {struct
  _dynforward_ptr*_tmp15=({struct _dynforward_ptr*_tmp17=_cycalloc(sizeof(*_tmp17));
  _tmp17[0]=(struct _dynforward_ptr)Cyc_substring((struct _dynforward_ptr)Cyc_Lexing_lexeme(
! lexbuf),0,(unsigned long)((Cyc_Lexing_lexeme_end(lexbuf)- Cyc_Lexing_lexeme_start(
  lexbuf))- 2));_tmp17;});Cyc_current_args=({struct Cyc_List_List*_tmp16=_cycalloc(
  sizeof(*_tmp16));_tmp16->hd=_tmp15;_tmp16->tl=Cyc_current_args;_tmp16;});return
  Cyc_args(lexbuf);}case 1: _LLB: {struct _dynforward_ptr*_tmp18=({struct
  _dynforward_ptr*_tmp1A=_cycalloc(sizeof(*_tmp1A));_tmp1A[0]=(struct
  _dynforward_ptr)Cyc_substring((struct _dynforward_ptr)Cyc_Lexing_lexeme(lexbuf),0,(
! unsigned long)((Cyc_Lexing_lexeme_end(lexbuf)- Cyc_Lexing_lexeme_start(lexbuf))- 
  1));_tmp1A;});Cyc_current_args=({struct Cyc_List_List*_tmp19=_cycalloc(sizeof(*
  _tmp19));_tmp19->hd=_tmp18;_tmp19->tl=Cyc_current_args;_tmp19;});return Cyc_token(
  lexbuf);}default: _LLC:(lexbuf->refill_buff)(lexbuf);return Cyc_args_rec(lexbuf,
***************
*** 1702,1708 ****
  _tuple15*Cyc_spec_rec(struct Cyc_Lexing_lexbuf*lexbuf,int lexstate){lexstate=Cyc_lex_engine(
  lexstate,lexbuf);switch(lexstate){case 0: _LL93: return Cyc_spec(lexbuf);case 1: _LL94:
  Cyc_current_headerfile=(struct _dynforward_ptr)Cyc_substring((struct
! _dynforward_ptr)Cyc_Lexing_lexeme(lexbuf),0,(unsigned int)((Cyc_Lexing_lexeme_end(
  lexbuf)- Cyc_Lexing_lexeme_start(lexbuf))- 1));Cyc_current_symbols=0;Cyc_current_omit_symbols=
  0;Cyc_current_cstubs=0;Cyc_current_cycstubs=0;Cyc_current_hstubs=0;while(Cyc_commands(
  lexbuf)){;}Cyc_current_hstubs=((struct Cyc_List_List*(*)(struct Cyc_List_List*x))
--- 1693,1699 ----
  _tuple15*Cyc_spec_rec(struct Cyc_Lexing_lexbuf*lexbuf,int lexstate){lexstate=Cyc_lex_engine(
  lexstate,lexbuf);switch(lexstate){case 0: _LL93: return Cyc_spec(lexbuf);case 1: _LL94:
  Cyc_current_headerfile=(struct _dynforward_ptr)Cyc_substring((struct
! _dynforward_ptr)Cyc_Lexing_lexeme(lexbuf),0,(unsigned long)((Cyc_Lexing_lexeme_end(
  lexbuf)- Cyc_Lexing_lexeme_start(lexbuf))- 1));Cyc_current_symbols=0;Cyc_current_omit_symbols=
  0;Cyc_current_cstubs=0;Cyc_current_cycstubs=0;Cyc_current_hstubs=0;while(Cyc_commands(
  lexbuf)){;}Cyc_current_hstubs=((struct Cyc_List_List*(*)(struct Cyc_List_List*x))
***************
*** 1744,1750 ****
  _dynforward_ptr t=_tmp72;while(!isspace((int)*((char*)_check_dynforward_subscript(
  t,sizeof(char),0)))){_dynforward_ptr_inplace_plus_post(& t,sizeof(char),1);}{
  struct _dynforward_ptr _tmp74=Cyc_substring((struct _dynforward_ptr)_tmp72,0,(
! unsigned int)((t.curr - _tmp72.curr)/ sizeof(char)));Cyc_braces_to_match=1;Cyc_specbuf=(
  struct Cyc_Buffer_t*)Cyc_Buffer_create(255);while(Cyc_block(lexbuf)){;}{struct
  _tuple14*x=({struct _tuple14*_tmp76=_cycalloc(sizeof(*_tmp76));_tmp76->f1=(struct
  _dynforward_ptr)_tmp74;_tmp76->f2=(struct _dynforward_ptr)Cyc_Buffer_contents((
--- 1735,1741 ----
  _dynforward_ptr t=_tmp72;while(!isspace((int)*((char*)_check_dynforward_subscript(
  t,sizeof(char),0)))){_dynforward_ptr_inplace_plus_post(& t,sizeof(char),1);}{
  struct _dynforward_ptr _tmp74=Cyc_substring((struct _dynforward_ptr)_tmp72,0,(
! unsigned long)((t.curr - _tmp72.curr)/ sizeof(char)));Cyc_braces_to_match=1;Cyc_specbuf=(
  struct Cyc_Buffer_t*)Cyc_Buffer_create(255);while(Cyc_block(lexbuf)){;}{struct
  _tuple14*x=({struct _tuple14*_tmp76=_cycalloc(sizeof(*_tmp76));_tmp76->f1=(struct
  _dynforward_ptr)_tmp74;_tmp76->f2=(struct _dynforward_ptr)Cyc_Buffer_contents((
***************
*** 1765,1771 ****
  _dynforward_ptr t=_tmp79;while(!isspace((int)*((char*)_check_dynforward_subscript(
  t,sizeof(char),0)))){_dynforward_ptr_inplace_plus_post(& t,sizeof(char),1);}{
  struct _dynforward_ptr _tmp7B=Cyc_substring((struct _dynforward_ptr)_tmp79,0,(
! unsigned int)((t.curr - _tmp79.curr)/ sizeof(char)));Cyc_braces_to_match=1;Cyc_specbuf=(
  struct Cyc_Buffer_t*)Cyc_Buffer_create(255);while(Cyc_block(lexbuf)){;}{struct
  _tuple14*x=({struct _tuple14*_tmp7D=_cycalloc(sizeof(*_tmp7D));_tmp7D->f1=(struct
  _dynforward_ptr)_tmp7B;_tmp7D->f2=(struct _dynforward_ptr)Cyc_Buffer_contents((
--- 1756,1762 ----
  _dynforward_ptr t=_tmp79;while(!isspace((int)*((char*)_check_dynforward_subscript(
  t,sizeof(char),0)))){_dynforward_ptr_inplace_plus_post(& t,sizeof(char),1);}{
  struct _dynforward_ptr _tmp7B=Cyc_substring((struct _dynforward_ptr)_tmp79,0,(
! unsigned long)((t.curr - _tmp79.curr)/ sizeof(char)));Cyc_braces_to_match=1;Cyc_specbuf=(
  struct Cyc_Buffer_t*)Cyc_Buffer_create(255);while(Cyc_block(lexbuf)){;}{struct
  _tuple14*x=({struct _tuple14*_tmp7D=_cycalloc(sizeof(*_tmp7D));_tmp7D->f1=(struct
  _dynforward_ptr)_tmp7B;_tmp7D->f2=(struct _dynforward_ptr)Cyc_Buffer_contents((
***************
*** 1786,1792 ****
  _dynforward_ptr t=_tmp80;while(!isspace((int)*((char*)_check_dynforward_subscript(
  t,sizeof(char),0)))){_dynforward_ptr_inplace_plus_post(& t,sizeof(char),1);}{
  struct _dynforward_ptr _tmp82=Cyc_substring((struct _dynforward_ptr)_tmp80,0,(
! unsigned int)((t.curr - _tmp80.curr)/ sizeof(char)));Cyc_braces_to_match=1;Cyc_specbuf=(
  struct Cyc_Buffer_t*)Cyc_Buffer_create(255);while(Cyc_block(lexbuf)){;}{struct
  _tuple14*x=({struct _tuple14*_tmp84=_cycalloc(sizeof(*_tmp84));_tmp84->f1=(struct
  _dynforward_ptr)_tmp82;_tmp84->f2=(struct _dynforward_ptr)Cyc_Buffer_contents((
--- 1777,1783 ----
  _dynforward_ptr t=_tmp80;while(!isspace((int)*((char*)_check_dynforward_subscript(
  t,sizeof(char),0)))){_dynforward_ptr_inplace_plus_post(& t,sizeof(char),1);}{
  struct _dynforward_ptr _tmp82=Cyc_substring((struct _dynforward_ptr)_tmp80,0,(
! unsigned long)((t.curr - _tmp80.curr)/ sizeof(char)));Cyc_braces_to_match=1;Cyc_specbuf=(
  struct Cyc_Buffer_t*)Cyc_Buffer_create(255);while(Cyc_block(lexbuf)){;}{struct
  _tuple14*x=({struct _tuple14*_tmp84=_cycalloc(sizeof(*_tmp84));_tmp84->f1=(struct
  _dynforward_ptr)_tmp82;_tmp84->f2=(struct _dynforward_ptr)Cyc_Buffer_contents((
***************
*** 2224,2232 ****
  _dynforward_ptr)((struct _dynforward_ptr)d);{void*_tmp16F[2]={& _tmp171,& _tmp172};
  Cyc_prscript(({const char*_tmp170="if ! test -e %s; then mkdir %s; fi\n";
  _tag_dynforward(_tmp170,sizeof(char),_get_zero_arr_size(_tmp170,36));}),
! _tag_dynforward(_tmp16F,sizeof(void*),2));}}});else{int _tmp173=({unsigned int
  _tmp177[0];Cyc_open((const char*)_check_null(_untag_dynforward_ptr(d,sizeof(char),
! 1)),0,_tag_dynforward(_tmp177,sizeof(unsigned int),0));});if(_tmp173 == - 1){if(
  mkdir((const char*)_untag_dynforward_ptr(d,sizeof(char),1),448)== - 1){({struct Cyc_String_pa_struct
  _tmp176;_tmp176.tag=0;_tmp176.f1=(struct _dynforward_ptr)((struct _dynforward_ptr)
  d);{void*_tmp174[1]={& _tmp176};Cyc_fprintf(Cyc_stderr,({const char*_tmp175="Error: could not create directory %s\n";
--- 2215,2223 ----
  _dynforward_ptr)((struct _dynforward_ptr)d);{void*_tmp16F[2]={& _tmp171,& _tmp172};
  Cyc_prscript(({const char*_tmp170="if ! test -e %s; then mkdir %s; fi\n";
  _tag_dynforward(_tmp170,sizeof(char),_get_zero_arr_size(_tmp170,36));}),
! _tag_dynforward(_tmp16F,sizeof(void*),2));}}});else{int _tmp173=({unsigned short
  _tmp177[0];Cyc_open((const char*)_check_null(_untag_dynforward_ptr(d,sizeof(char),
! 1)),0,_tag_dynforward(_tmp177,sizeof(unsigned short),0));});if(_tmp173 == - 1){if(
  mkdir((const char*)_untag_dynforward_ptr(d,sizeof(char),1),448)== - 1){({struct Cyc_String_pa_struct
  _tmp176;_tmp176.tag=0;_tmp176.f1=(struct _dynforward_ptr)((struct _dynforward_ptr)
  d);{void*_tmp174[1]={& _tmp176};Cyc_fprintf(Cyc_stderr,({const char*_tmp175="Error: could not create directory %s\n";
diff -rbBcN --exclude=CVS i686-unknown-linux/src/cf_flowinfo.c powerpc-apple-rhapsody/src/cf_flowinfo.c
*** i686-unknown-linux/src/cf_flowinfo.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/cf_flowinfo.c	Thu Jun 27 17:35:22 2002
***************
*** 670,681 ****
  int(*cmp)(void*,void*),struct Cyc_List_List*l,void*x);int Cyc_List_list_cmp(int(*
  cmp)(void*,void*),struct Cyc_List_List*l1,struct Cyc_List_List*l2);struct Cyc_Iter_Iter{
  void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,
! void*);struct Cyc_Set_Set;extern char Cyc_Set_Absent[11];typedef struct{int __count;
! union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;typedef struct{
! long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t Cyc_fpos_t;
! struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fprintf(struct Cyc___cycFILE*,struct _dynforward_ptr,
--- 670,679 ----
  int(*cmp)(void*,void*),struct Cyc_List_List*l,void*x);int Cyc_List_list_cmp(int(*
  cmp)(void*,void*),struct Cyc_List_List*l1,struct Cyc_List_List*l2);struct Cyc_Iter_Iter{
  void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,
! void*);struct Cyc_Set_Set;extern char Cyc_Set_Absent[11];struct Cyc___cycFILE;extern
! struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fprintf(struct Cyc___cycFILE*,struct _dynforward_ptr,
diff -rbBcN --exclude=CVS i686-unknown-linux/src/cycdoc.c powerpc-apple-rhapsody/src/cycdoc.c
*** i686-unknown-linux/src/cycdoc.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/cycdoc.c	Thu Jun 27 17:35:22 2002
***************
*** 661,669 ****
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdout;
  extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
--- 661,667 ----
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdout;
  extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
***************
*** 697,708 ****
  x);struct Cyc_List_List*Cyc_List_imp_rev(struct Cyc_List_List*x);struct Cyc_List_List*
  Cyc_List_append(struct Cyc_List_List*x,struct Cyc_List_List*y);extern char Cyc_List_Nth[
  8];struct Cyc_List_List*Cyc_List_zip(struct Cyc_List_List*x,struct Cyc_List_List*y);
! unsigned int Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(struct
  _dynforward_ptr s1,struct _dynforward_ptr s2);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_strconcat_l(
  struct Cyc_List_List*);struct _dynforward_ptr Cyc_str_sepstr(struct Cyc_List_List*,
  struct _dynforward_ptr);struct _dynforward_ptr Cyc_substring(struct _dynforward_ptr,
! int ofs,unsigned int n);struct Cyc_Lineno_Pos{struct _dynforward_ptr logical_file;
  struct _dynforward_ptr line;int line_no;int col;};void Cyc_Lineno_poss_of_abss(struct
  _dynforward_ptr filename,struct Cyc_List_List*places);struct _dynforward_ptr Cyc_Filename_chop_extension(
  struct _dynforward_ptr);extern char Cyc_Position_Exit[9];void Cyc_Position_reset_position(
--- 695,706 ----
  x);struct Cyc_List_List*Cyc_List_imp_rev(struct Cyc_List_List*x);struct Cyc_List_List*
  Cyc_List_append(struct Cyc_List_List*x,struct Cyc_List_List*y);extern char Cyc_List_Nth[
  8];struct Cyc_List_List*Cyc_List_zip(struct Cyc_List_List*x,struct Cyc_List_List*y);
! unsigned long Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(struct
  _dynforward_ptr s1,struct _dynforward_ptr s2);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_strconcat_l(
  struct Cyc_List_List*);struct _dynforward_ptr Cyc_str_sepstr(struct Cyc_List_List*,
  struct _dynforward_ptr);struct _dynforward_ptr Cyc_substring(struct _dynforward_ptr,
! int ofs,unsigned long n);struct Cyc_Lineno_Pos{struct _dynforward_ptr logical_file;
  struct _dynforward_ptr line;int line_no;int col;};void Cyc_Lineno_poss_of_abss(struct
  _dynforward_ptr filename,struct Cyc_List_List*places);struct _dynforward_ptr Cyc_Filename_chop_extension(
  struct _dynforward_ptr);extern char Cyc_Position_Exit[9];void Cyc_Position_reset_position(
***************
*** 1032,1044 ****
  7;return({struct _tuple11*_tmp5=_cycalloc(sizeof(*_tmp5));_tmp5->f1=Cyc_Lexing_lexeme_start(
  lexbuf);_tmp5->f2=(void*)({struct Cyc_Standalone_struct*_tmp6=_cycalloc(sizeof(*
  _tmp6));_tmp6[0]=({struct Cyc_Standalone_struct _tmp7;_tmp7.tag=1;_tmp7.f1=Cyc_substring((
! struct _dynforward_ptr)lexbuf->lex_buffer,_tmp3,(unsigned int)_tmp4);_tmp7;});
  _tmp6;});_tmp5;});}case 1: _LL1: {int _tmp8=lexbuf->lex_start_pos + 4;int _tmp9=(
  lexbuf->lex_curr_pos - lexbuf->lex_start_pos)- 6;return({struct _tuple11*_tmpA=
  _cycalloc(sizeof(*_tmpA));_tmpA->f1=Cyc_Lexing_lexeme_start(lexbuf);_tmpA->f2=(
  void*)({struct Cyc_MatchDecl_struct*_tmpB=_cycalloc(sizeof(*_tmpB));_tmpB[0]=({
  struct Cyc_MatchDecl_struct _tmpC;_tmpC.tag=0;_tmpC.f1=Cyc_substring((struct
! _dynforward_ptr)lexbuf->lex_buffer,_tmp8,(unsigned int)_tmp9);_tmpC;});_tmpB;});
  _tmpA;});}case 2: _LL2: return 0;case 3: _LL3: return Cyc_token(lexbuf);default: _LL4:(
  lexbuf->refill_buff)(lexbuf);return Cyc_token_rec(lexbuf,lexstate);}(int)_throw((
  void*)({struct Cyc_Lexing_Error_struct*_tmpD=_cycalloc(sizeof(*_tmpD));_tmpD[0]=({
--- 1030,1042 ----
  7;return({struct _tuple11*_tmp5=_cycalloc(sizeof(*_tmp5));_tmp5->f1=Cyc_Lexing_lexeme_start(
  lexbuf);_tmp5->f2=(void*)({struct Cyc_Standalone_struct*_tmp6=_cycalloc(sizeof(*
  _tmp6));_tmp6[0]=({struct Cyc_Standalone_struct _tmp7;_tmp7.tag=1;_tmp7.f1=Cyc_substring((
! struct _dynforward_ptr)lexbuf->lex_buffer,_tmp3,(unsigned long)_tmp4);_tmp7;});
  _tmp6;});_tmp5;});}case 1: _LL1: {int _tmp8=lexbuf->lex_start_pos + 4;int _tmp9=(
  lexbuf->lex_curr_pos - lexbuf->lex_start_pos)- 6;return({struct _tuple11*_tmpA=
  _cycalloc(sizeof(*_tmpA));_tmpA->f1=Cyc_Lexing_lexeme_start(lexbuf);_tmpA->f2=(
  void*)({struct Cyc_MatchDecl_struct*_tmpB=_cycalloc(sizeof(*_tmpB));_tmpB[0]=({
  struct Cyc_MatchDecl_struct _tmpC;_tmpC.tag=0;_tmpC.f1=Cyc_substring((struct
! _dynforward_ptr)lexbuf->lex_buffer,_tmp8,(unsigned long)_tmp9);_tmpC;});_tmpB;});
  _tmpA;});}case 2: _LL2: return 0;case 3: _LL3: return Cyc_token(lexbuf);default: _LL4:(
  lexbuf->refill_buff)(lexbuf);return Cyc_token_rec(lexbuf,lexstate);}(int)_throw((
  void*)({struct Cyc_Lexing_Error_struct*_tmpD=_cycalloc(sizeof(*_tmpD));_tmpD[0]=({
***************
*** 1103,1109 ****
  case ')': _LLB: goto _LLC;case '|': _LLC: goto _LLD;case '^': _LLD: goto _LLE;case '<': _LLE:
  goto _LLF;case '>': _LLF: goto _LL10;case ' ': _LL10: goto _LL11;case '\n': _LL11: goto _LL12;
  case '\t': _LL12: return 1;default: _LL13: return 0;}}static struct _dynforward_ptr Cyc_sh_escape_string(
! struct _dynforward_ptr s){unsigned int _tmp1A=Cyc_strlen((struct _dynforward_ptr)s);
  int _tmp1B=0;int _tmp1C=0;{int i=0;for(0;i < _tmp1A;i ++){char _tmp1D=*((const char*)
  _check_dynforward_subscript(s,sizeof(char),i));if(_tmp1D == '\'')_tmp1B ++;else{
  if(Cyc_is_other_special(_tmp1D))_tmp1C ++;}}}if(_tmp1B == 0  && _tmp1C == 0)return s;
--- 1101,1107 ----
  case ')': _LLB: goto _LLC;case '|': _LLC: goto _LLD;case '^': _LLD: goto _LLE;case '<': _LLE:
  goto _LLF;case '>': _LLF: goto _LL10;case ' ': _LL10: goto _LL11;case '\n': _LL11: goto _LL12;
  case '\t': _LL12: return 1;default: _LL13: return 0;}}static struct _dynforward_ptr Cyc_sh_escape_string(
! struct _dynforward_ptr s){unsigned long _tmp1A=Cyc_strlen((struct _dynforward_ptr)s);
  int _tmp1B=0;int _tmp1C=0;{int i=0;for(0;i < _tmp1A;i ++){char _tmp1D=*((const char*)
  _check_dynforward_subscript(s,sizeof(char),i));if(_tmp1D == '\'')_tmp1B ++;else{
  if(Cyc_is_other_special(_tmp1D))_tmp1C ++;}}}if(_tmp1B == 0  && _tmp1C == 0)return s;
***************
*** 1113,1119 ****
  _cycalloc(sizeof(*_tmp20));_tmp20[0]=(struct _dynforward_ptr)s;_tmp20;});_tmp1E[0]=
  _init_dynforward_ptr(_cycalloc(sizeof(struct _dynforward_ptr)),"'",sizeof(char),2);((
  struct Cyc_List_List*(*)(struct _dynforward_ptr))Cyc_List_list)(_tag_dynforward(
! _tmp1E,sizeof(struct _dynforward_ptr*),3));}));{unsigned int _tmp22=(_tmp1A + 
  _tmp1B)+ _tmp1C;struct _dynforward_ptr s2=({unsigned int _tmp2C=_tmp22 + 1;char*
  _tmp2D=(char*)_cycalloc_atomic(_check_times(sizeof(char),_tmp2C + 1));struct
  _dynforward_ptr _tmp2F=_tag_dynforward(_tmp2D,sizeof(char),_tmp2C + 1);{
--- 1111,1117 ----
  _cycalloc(sizeof(*_tmp20));_tmp20[0]=(struct _dynforward_ptr)s;_tmp20;});_tmp1E[0]=
  _init_dynforward_ptr(_cycalloc(sizeof(struct _dynforward_ptr)),"'",sizeof(char),2);((
  struct Cyc_List_List*(*)(struct _dynforward_ptr))Cyc_List_list)(_tag_dynforward(
! _tmp1E,sizeof(struct _dynforward_ptr*),3));}));{unsigned long _tmp22=(_tmp1A + 
  _tmp1B)+ _tmp1C;struct _dynforward_ptr s2=({unsigned int _tmp2C=_tmp22 + 1;char*
  _tmp2D=(char*)_cycalloc_atomic(_check_times(sizeof(char),_tmp2C + 1));struct
  _dynforward_ptr _tmp2F=_tag_dynforward(_tmp2D,sizeof(char),_tmp2C + 1);{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/cyclone.c powerpc-apple-rhapsody/src/cyclone.c
*** i686-unknown-linux/src/cyclone.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/cyclone.c	Thu Jun 27 17:35:22 2002
***************
*** 676,712 ****
  void(*f1)(int);};struct Cyc_Arg_Rest_spec_struct{int tag;void(*f1)(struct
  _dynforward_ptr);};void Cyc_Arg_parse(struct Cyc_List_List*specs,void(*anonfun)(
  struct _dynforward_ptr),struct _dynforward_ptr errmsg,struct _dynforward_ptr args);
! typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdout;extern struct
! Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
! int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fclose(struct Cyc___cycFILE*);int Cyc_feof(struct Cyc___cycFILE*);
  int Cyc_fflush(struct Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_fopen(const char*,
  const char*);int Cyc_fprintf(struct Cyc___cycFILE*,struct _dynforward_ptr,struct
! _dynforward_ptr);unsigned int Cyc_fread(struct _dynforward_ptr,unsigned int,
! unsigned int,struct Cyc___cycFILE*);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;
  };struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
  int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;
  };struct Cyc_FloatPtr_sa_struct{int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int
! tag;struct _dynforward_ptr f1;};unsigned int Cyc_fwrite(struct _dynforward_ptr,
! unsigned int,unsigned int,struct Cyc___cycFILE*);int Cyc_printf(struct
  _dynforward_ptr,struct _dynforward_ptr);int remove(const char*);extern char Cyc_FileCloseError[
  19];extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{char*tag;
  struct _dynforward_ptr f1;};struct Cyc___cycFILE*Cyc_file_open(struct
  _dynforward_ptr,struct _dynforward_ptr);void Cyc_file_close(struct Cyc___cycFILE*);
  typedef struct{int quot;int rem;}Cyc_div_t;typedef struct{long quot;long rem;}Cyc_ldiv_t;
  void*abort();void exit(int);char*getenv(const char*);int system(const char*);
! unsigned int Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(struct
  _dynforward_ptr s1,struct _dynforward_ptr s2);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_strconcat_l(
  struct Cyc_List_List*);struct _dynforward_ptr Cyc_str_sepstr(struct Cyc_List_List*,
  struct _dynforward_ptr);struct _dynforward_ptr Cyc_substring(struct _dynforward_ptr,
! int ofs,unsigned int n);struct _dynforward_ptr Cyc_strchr(struct _dynforward_ptr s,
  char c);struct Cyc_Iter_Iter{void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(
  struct Cyc_Iter_Iter,void*);struct Cyc_Dict_Dict;extern char Cyc_Dict_Present[12];
  extern char Cyc_Dict_Absent[11];struct _tuple0{void*f1;void*f2;};struct _tuple0*Cyc_Dict_rchoose(
--- 676,710 ----
  void(*f1)(int);};struct Cyc_Arg_Rest_spec_struct{int tag;void(*f1)(struct
  _dynforward_ptr);};void Cyc_Arg_parse(struct Cyc_List_List*specs,void(*anonfun)(
  struct _dynforward_ptr),struct _dynforward_ptr errmsg,struct _dynforward_ptr args);
! struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stdout;extern struct Cyc___cycFILE*
! Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;
! struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};
! struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{int
! tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fclose(struct Cyc___cycFILE*);int Cyc_feof(struct Cyc___cycFILE*);
  int Cyc_fflush(struct Cyc___cycFILE*);struct Cyc___cycFILE*Cyc_fopen(const char*,
  const char*);int Cyc_fprintf(struct Cyc___cycFILE*,struct _dynforward_ptr,struct
! _dynforward_ptr);unsigned long Cyc_fread(struct _dynforward_ptr,unsigned long,
! unsigned long,struct Cyc___cycFILE*);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;
  };struct Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
  int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;
  };struct Cyc_FloatPtr_sa_struct{int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int
! tag;struct _dynforward_ptr f1;};unsigned long Cyc_fwrite(struct _dynforward_ptr,
! unsigned long,unsigned long,struct Cyc___cycFILE*);int Cyc_printf(struct
  _dynforward_ptr,struct _dynforward_ptr);int remove(const char*);extern char Cyc_FileCloseError[
  19];extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{char*tag;
  struct _dynforward_ptr f1;};struct Cyc___cycFILE*Cyc_file_open(struct
  _dynforward_ptr,struct _dynforward_ptr);void Cyc_file_close(struct Cyc___cycFILE*);
  typedef struct{int quot;int rem;}Cyc_div_t;typedef struct{long quot;long rem;}Cyc_ldiv_t;
  void*abort();void exit(int);char*getenv(const char*);int system(const char*);
! unsigned long Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(struct
  _dynforward_ptr s1,struct _dynforward_ptr s2);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_strconcat_l(
  struct Cyc_List_List*);struct _dynforward_ptr Cyc_str_sepstr(struct Cyc_List_List*,
  struct _dynforward_ptr);struct _dynforward_ptr Cyc_substring(struct _dynforward_ptr,
! int ofs,unsigned long n);struct _dynforward_ptr Cyc_strchr(struct _dynforward_ptr s,
  char c);struct Cyc_Iter_Iter{void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(
  struct Cyc_Iter_Iter,void*);struct Cyc_Dict_Dict;extern char Cyc_Dict_Present[12];
  extern char Cyc_Dict_Absent[11];struct _tuple0{void*f1;void*f2;};struct _tuple0*Cyc_Dict_rchoose(
***************
*** 1094,1100 ****
  void*_tmpE[1]={& _tmp10};Cyc_printf(({const char*_tmpF="Standard include directory: %s\n";
  _tag_dynforward(_tmpF,sizeof(char),_get_zero_arr_size(_tmpF,32));}),
  _tag_dynforward(_tmpE,sizeof(void*),1));}});exit(0);}static int Cyc_is_cyclone_sourcefile(
! struct _dynforward_ptr s){unsigned int _tmp11=Cyc_strlen((struct _dynforward_ptr)s);
  if(_tmp11 <= 4)return 0;else{return Cyc_strcmp((struct _dynforward_ptr)
  _dynforward_ptr_plus(s,sizeof(char),(int)(_tmp11 - 4)),({const char*_tmp12=".cyc";
  _tag_dynforward(_tmp12,sizeof(char),_get_zero_arr_size(_tmp12,5));}))== 0;}}
--- 1092,1098 ----
  void*_tmpE[1]={& _tmp10};Cyc_printf(({const char*_tmpF="Standard include directory: %s\n";
  _tag_dynforward(_tmpF,sizeof(char),_get_zero_arr_size(_tmpF,32));}),
  _tag_dynforward(_tmpE,sizeof(void*),1));}});exit(0);}static int Cyc_is_cyclone_sourcefile(
! struct _dynforward_ptr s){unsigned long _tmp11=Cyc_strlen((struct _dynforward_ptr)s);
  if(_tmp11 <= 4)return 0;else{return Cyc_strcmp((struct _dynforward_ptr)
  _dynforward_ptr_plus(s,sizeof(char),(int)(_tmp11 - 4)),({const char*_tmp12=".cyc";
  _tag_dynforward(_tmp12,sizeof(char),_get_zero_arr_size(_tmp12,5));}))== 0;}}
***************
*** 1103,1109 ****
  _tmp13));_tmp13->hd=({struct _dynforward_ptr*_tmp14=_cycalloc(sizeof(*_tmp14));
  _tmp14[0]=s;_tmp14;});_tmp13->tl=Cyc_ccargs;_tmp13;});}static struct Cyc_List_List*
  Cyc_cyclone_exec_path=0;static void Cyc_add_cyclone_exec_path(struct
! _dynforward_ptr s){unsigned int _tmp15=Cyc_strlen((struct _dynforward_ptr)s);if(
  _tmp15 <= 2)return;{struct _dynforward_ptr _tmp16=(struct _dynforward_ptr)Cyc_substring((
  struct _dynforward_ptr)s,2,_tmp15 - 2);Cyc_cyclone_exec_path=({struct Cyc_List_List*
  _tmp17=_cycalloc(sizeof(*_tmp17));_tmp17->hd=({struct _dynforward_ptr*_tmp18=
--- 1101,1107 ----
  _tmp13));_tmp13->hd=({struct _dynforward_ptr*_tmp14=_cycalloc(sizeof(*_tmp14));
  _tmp14[0]=s;_tmp14;});_tmp13->tl=Cyc_ccargs;_tmp13;});}static struct Cyc_List_List*
  Cyc_cyclone_exec_path=0;static void Cyc_add_cyclone_exec_path(struct
! _dynforward_ptr s){unsigned long _tmp15=Cyc_strlen((struct _dynforward_ptr)s);if(
  _tmp15 <= 2)return;{struct _dynforward_ptr _tmp16=(struct _dynforward_ptr)Cyc_substring((
  struct _dynforward_ptr)s,2,_tmp15 - 2);Cyc_cyclone_exec_path=({struct Cyc_List_List*
  _tmp17=_cycalloc(sizeof(*_tmp17));_tmp17->hd=({struct _dynforward_ptr*_tmp18=
***************
*** 1264,1271 ****
  Cyc___cycFILE*_tmp6E=Cyc_try_file_open(Cyc_cyc_include,({const char*_tmp74="r";
  _tag_dynforward(_tmp74,sizeof(char),_get_zero_arr_size(_tmp74,2));}),({const char*
  _tmp75="internal compiler file";_tag_dynforward(_tmp75,sizeof(char),
! _get_zero_arr_size(_tmp75,23));}));if(_tmp6E == 0)return tds;{unsigned int n_read=
! 1024;unsigned int n_written;char buf[1024];{unsigned int _tmp73=1024;unsigned int i;
  for(i=0;i < _tmp73;i ++){buf[i]='\000';}}while(n_read == 1024){n_read=Cyc_fread(
  _tag_dynforward(buf,sizeof(char),1024),1,1024,(struct Cyc___cycFILE*)_tmp6E);if(
  n_read != 1024  && !Cyc_feof((struct Cyc___cycFILE*)_tmp6E)){Cyc_compile_failure=1;({
--- 1262,1269 ----
  Cyc___cycFILE*_tmp6E=Cyc_try_file_open(Cyc_cyc_include,({const char*_tmp74="r";
  _tag_dynforward(_tmp74,sizeof(char),_get_zero_arr_size(_tmp74,2));}),({const char*
  _tmp75="internal compiler file";_tag_dynforward(_tmp75,sizeof(char),
! _get_zero_arr_size(_tmp75,23));}));if(_tmp6E == 0)return tds;{unsigned long n_read=
! 1024;unsigned long n_written;char buf[1024];{unsigned int _tmp73=1024;unsigned int i;
  for(i=0;i < _tmp73;i ++){buf[i]='\000';}}while(n_read == 1024){n_read=Cyc_fread(
  _tag_dynforward(buf,sizeof(char),1024),1,1024,(struct Cyc___cycFILE*)_tmp6E);if(
  n_read != 1024  && !Cyc_feof((struct Cyc___cycFILE*)_tmp6E)){Cyc_compile_failure=1;({
***************
*** 1285,1291 ****
  _check_null(Cyc_cfiles))->tl){Cyc_remove_file(*((struct _dynforward_ptr*)((struct
  Cyc_List_List*)_check_null(Cyc_cfiles))->hd));}}static struct Cyc_List_List*Cyc_split_by_char(
  struct _dynforward_ptr s,char c){if(s.curr == ((struct _dynforward_ptr)
! _tag_dynforward(0,0,0)).curr)return 0;{struct Cyc_List_List*_tmp76=0;unsigned int
  _tmp77=Cyc_strlen((struct _dynforward_ptr)s);while(_tmp77 > 0){struct
  _dynforward_ptr _tmp78=Cyc_strchr(s,c);if(_tmp78.curr == ((struct _dynforward_ptr)
  _tag_dynforward(0,0,0)).curr){_tmp76=({struct Cyc_List_List*_tmp79=_cycalloc(
--- 1283,1289 ----
  _check_null(Cyc_cfiles))->tl){Cyc_remove_file(*((struct _dynforward_ptr*)((struct
  Cyc_List_List*)_check_null(Cyc_cfiles))->hd));}}static struct Cyc_List_List*Cyc_split_by_char(
  struct _dynforward_ptr s,char c){if(s.curr == ((struct _dynforward_ptr)
! _tag_dynforward(0,0,0)).curr)return 0;{struct Cyc_List_List*_tmp76=0;unsigned long
  _tmp77=Cyc_strlen((struct _dynforward_ptr)s);while(_tmp77 > 0){struct
  _dynforward_ptr _tmp78=Cyc_strchr(s,c);if(_tmp78.curr == ((struct _dynforward_ptr)
  _tag_dynforward(0,0,0)).curr){_tmp76=({struct Cyc_List_List*_tmp79=_cycalloc(
***************
*** 1293,1299 ****
  _tmp7A));_tmp7A[0]=s;_tmp7A;});_tmp79->tl=_tmp76;_tmp79;});break;}else{_tmp76=({
  struct Cyc_List_List*_tmp7B=_cycalloc(sizeof(*_tmp7B));_tmp7B->hd=({struct
  _dynforward_ptr*_tmp7C=_cycalloc(sizeof(*_tmp7C));_tmp7C[0]=(struct
! _dynforward_ptr)Cyc_substring((struct _dynforward_ptr)s,0,(unsigned int)((((
  struct _dynforward_ptr)_tmp78).curr - s.curr)/ sizeof(char)));_tmp7C;});_tmp7B->tl=
  _tmp76;_tmp7B;});_tmp77 -=(((struct _dynforward_ptr)_tmp78).curr - s.curr)/ sizeof(
  char);s=_dynforward_ptr_plus(_tmp78,sizeof(char),1);}}return((struct Cyc_List_List*(*)(
--- 1291,1297 ----
  _tmp7A));_tmp7A[0]=s;_tmp7A;});_tmp79->tl=_tmp76;_tmp79;});break;}else{_tmp76=({
  struct Cyc_List_List*_tmp7B=_cycalloc(sizeof(*_tmp7B));_tmp7B->hd=({struct
  _dynforward_ptr*_tmp7C=_cycalloc(sizeof(*_tmp7C));_tmp7C[0]=(struct
! _dynforward_ptr)Cyc_substring((struct _dynforward_ptr)s,0,(unsigned long)((((
  struct _dynforward_ptr)_tmp78).curr - s.curr)/ sizeof(char)));_tmp7C;});_tmp7B->tl=
  _tmp76;_tmp7B;});_tmp77 -=(((struct _dynforward_ptr)_tmp78).curr - s.curr)/ sizeof(
  char);s=_dynforward_ptr_plus(_tmp78,sizeof(char),1);}}return((struct Cyc_List_List*(*)(
***************
*** 1360,1366 ****
  _LL1D;case '|': _LL1D: goto _LL1E;case '^': _LL1E: goto _LL1F;case '<': _LL1F: goto _LL20;
  case '>': _LL20: goto _LL21;case ' ': _LL21: goto _LL22;case '\n': _LL22: goto _LL23;case '\t':
  _LL23: return 1;default: _LL24: return 0;}}static struct _dynforward_ptr Cyc_sh_escape_string(
! struct _dynforward_ptr s){unsigned int _tmp9A=Cyc_strlen((struct _dynforward_ptr)s);
  int _tmp9B=0;int _tmp9C=0;{int i=0;for(0;i < _tmp9A;i ++){char _tmp9D=*((const char*)
  _check_dynforward_subscript(s,sizeof(char),i));if(_tmp9D == '\'')_tmp9B ++;else{
  if(Cyc_is_other_special(_tmp9D))_tmp9C ++;}}}if(_tmp9B == 0  && _tmp9C == 0)return s;
--- 1358,1364 ----
  _LL1D;case '|': _LL1D: goto _LL1E;case '^': _LL1E: goto _LL1F;case '<': _LL1F: goto _LL20;
  case '>': _LL20: goto _LL21;case ' ': _LL21: goto _LL22;case '\n': _LL22: goto _LL23;case '\t':
  _LL23: return 1;default: _LL24: return 0;}}static struct _dynforward_ptr Cyc_sh_escape_string(
! struct _dynforward_ptr s){unsigned long _tmp9A=Cyc_strlen((struct _dynforward_ptr)s);
  int _tmp9B=0;int _tmp9C=0;{int i=0;for(0;i < _tmp9A;i ++){char _tmp9D=*((const char*)
  _check_dynforward_subscript(s,sizeof(char),i));if(_tmp9D == '\'')_tmp9B ++;else{
  if(Cyc_is_other_special(_tmp9D))_tmp9C ++;}}}if(_tmp9B == 0  && _tmp9C == 0)return s;
***************
*** 1370,1376 ****
  _cycalloc(sizeof(*_tmpA0));_tmpA0[0]=(struct _dynforward_ptr)s;_tmpA0;});_tmp9E[0]=
  _init_dynforward_ptr(_cycalloc(sizeof(struct _dynforward_ptr)),"'",sizeof(char),2);((
  struct Cyc_List_List*(*)(struct _dynforward_ptr))Cyc_List_list)(_tag_dynforward(
! _tmp9E,sizeof(struct _dynforward_ptr*),3));}));{unsigned int _tmpA2=(_tmp9A + 
  _tmp9B)+ _tmp9C;struct _dynforward_ptr s2=({unsigned int _tmpAC=_tmpA2 + 1;char*
  _tmpAD=(char*)_cycalloc_atomic(_check_times(sizeof(char),_tmpAC + 1));struct
  _dynforward_ptr _tmpAF=_tag_dynforward(_tmpAD,sizeof(char),_tmpAC + 1);{
--- 1368,1374 ----
  _cycalloc(sizeof(*_tmpA0));_tmpA0[0]=(struct _dynforward_ptr)s;_tmpA0;});_tmp9E[0]=
  _init_dynforward_ptr(_cycalloc(sizeof(struct _dynforward_ptr)),"'",sizeof(char),2);((
  struct Cyc_List_List*(*)(struct _dynforward_ptr))Cyc_List_list)(_tag_dynforward(
! _tmp9E,sizeof(struct _dynforward_ptr*),3));}));{unsigned long _tmpA2=(_tmp9A + 
  _tmp9B)+ _tmp9C;struct _dynforward_ptr s2=({unsigned int _tmpAC=_tmpA2 + 1;char*
  _tmpAD=(char*)_cycalloc_atomic(_check_times(sizeof(char),_tmpAC + 1));struct
  _dynforward_ptr _tmpAF=_tag_dynforward(_tmpAD,sizeof(char),_tmpAC + 1);{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/evexp.c powerpc-apple-rhapsody/src/evexp.c
*** i686-unknown-linux/src/evexp.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/evexp.c	Thu Jun 27 17:35:20 2002
***************
*** 663,677 ****
  struct _dynforward_ptr logical_file;struct _dynforward_ptr line;int line_no;int col;};
  extern char Cyc_Position_Exit[9];struct Cyc_Position_Segment;struct Cyc_Position_Error{
  struct _dynforward_ptr source;struct Cyc_Position_Segment*seg;void*kind;struct
! _dynforward_ptr desc;};extern char Cyc_Position_Nocontext[14];typedef struct{int
! __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;typedef
! struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t Cyc_fpos_t;
! struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
! int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
! int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
! struct _dynforward_ptr);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{
  int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{
  int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;};struct Cyc_FloatPtr_sa_struct{
--- 663,675 ----
  struct _dynforward_ptr logical_file;struct _dynforward_ptr line;int line_no;int col;};
  extern char Cyc_Position_Exit[9];struct Cyc_Position_Segment;struct Cyc_Position_Error{
  struct _dynforward_ptr source;struct Cyc_Position_Segment*seg;void*kind;struct
! _dynforward_ptr desc;};extern char Cyc_Position_Nocontext[14];struct Cyc___cycFILE;
! struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
! _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
! int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
! Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{int tag;
! unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,struct
! _dynforward_ptr);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{
  int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{
  int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;};struct Cyc_FloatPtr_sa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/formatstr.c powerpc-apple-rhapsody/src/formatstr.c
*** i686-unknown-linux/src/formatstr.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/formatstr.c	Thu Jun 27 17:35:20 2002
***************
*** 660,674 ****
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern
  char Cyc_List_List_mismatch[18];struct Cyc_List_List*Cyc_List_imp_rev(struct Cyc_List_List*
! x);extern char Cyc_List_Nth[8];int isdigit(int);unsigned int Cyc_strlen(struct
  _dynforward_ptr s);struct _dynforward_ptr Cyc_implode(struct Cyc_List_List*c);struct
  Cyc_Lineno_Pos{struct _dynforward_ptr logical_file;struct _dynforward_ptr line;int
  line_no;int col;};extern char Cyc_Position_Exit[9];struct Cyc_Position_Segment;
  struct Cyc_Position_Error{struct _dynforward_ptr source;struct Cyc_Position_Segment*
  seg;void*kind;struct _dynforward_ptr desc;};extern char Cyc_Position_Nocontext[14];
! typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
--- 660,672 ----
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
  _dynforward_ptr f1;};struct Cyc_List_List{void*hd;struct Cyc_List_List*tl;};extern
  char Cyc_List_List_mismatch[18];struct Cyc_List_List*Cyc_List_imp_rev(struct Cyc_List_List*
! x);extern char Cyc_List_Nth[8];int isdigit(int);unsigned long Cyc_strlen(struct
  _dynforward_ptr s);struct _dynforward_ptr Cyc_implode(struct Cyc_List_List*c);struct
  Cyc_Lineno_Pos{struct _dynforward_ptr logical_file;struct _dynforward_ptr line;int
  line_no;int col;};extern char Cyc_Position_Exit[9];struct Cyc_Position_Segment;
  struct Cyc_Position_Error{struct _dynforward_ptr source;struct Cyc_Position_Segment*
  seg;void*kind;struct _dynforward_ptr desc;};extern char Cyc_Position_Nocontext[14];
! struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
***************
*** 905,917 ****
  int i);static struct Cyc_Core_Opt Cyc_Formatstr_rk={(void*)((void*)3)};struct _tuple4{
  struct Cyc_List_List*f1;struct Cyc_List_List*f2;struct Cyc_List_List*f3;struct Cyc_List_List*
  f4;char f5;int f6;};struct Cyc_Core_Opt*Cyc_Formatstr_parse_conversionspecification(
! struct _dynforward_ptr s,int i){unsigned int _tmp0=Cyc_strlen((struct _dynforward_ptr)
! s);if(i < 0  || i >= _tmp0)return 0;{struct Cyc_List_List*_tmp1=0;char c=' ';for(0;i < 
! _tmp0;i ++){c=*((const char*)_check_dynforward_subscript(s,sizeof(char),i));
! switch(c){case '+': _LL0: goto _LL1;case '-': _LL1: goto _LL2;case ' ': _LL2: goto _LL3;case
! '#': _LL3: goto _LL4;case '0': _LL4: _tmp1=({struct Cyc_List_List*_tmp2=_cycalloc(
! sizeof(*_tmp2));_tmp2->hd=(void*)((int)c);_tmp2->tl=_tmp1;_tmp2;});continue;
! default: _LL5: break;}break;}if(i >= _tmp0)return 0;_tmp1=((struct Cyc_List_List*(*)(
  struct Cyc_List_List*x))Cyc_List_imp_rev)(_tmp1);{struct Cyc_List_List*_tmp3=0;c=*((
  const char*)_check_dynforward_subscript(s,sizeof(char),i));if(c == '*'){_tmp3=({
  struct Cyc_List_List*_tmp4=_cycalloc(sizeof(*_tmp4));_tmp4->hd=(void*)((int)c);
--- 903,915 ----
  int i);static struct Cyc_Core_Opt Cyc_Formatstr_rk={(void*)((void*)3)};struct _tuple4{
  struct Cyc_List_List*f1;struct Cyc_List_List*f2;struct Cyc_List_List*f3;struct Cyc_List_List*
  f4;char f5;int f6;};struct Cyc_Core_Opt*Cyc_Formatstr_parse_conversionspecification(
! struct _dynforward_ptr s,int i){unsigned long _tmp0=Cyc_strlen((struct
! _dynforward_ptr)s);if(i < 0  || i >= _tmp0)return 0;{struct Cyc_List_List*_tmp1=0;
! char c=' ';for(0;i < _tmp0;i ++){c=*((const char*)_check_dynforward_subscript(s,
! sizeof(char),i));switch(c){case '+': _LL0: goto _LL1;case '-': _LL1: goto _LL2;case ' ':
! _LL2: goto _LL3;case '#': _LL3: goto _LL4;case '0': _LL4: _tmp1=({struct Cyc_List_List*
! _tmp2=_cycalloc(sizeof(*_tmp2));_tmp2->hd=(void*)((int)c);_tmp2->tl=_tmp1;_tmp2;});
! continue;default: _LL5: break;}break;}if(i >= _tmp0)return 0;_tmp1=((struct Cyc_List_List*(*)(
  struct Cyc_List_List*x))Cyc_List_imp_rev)(_tmp1);{struct Cyc_List_List*_tmp3=0;c=*((
  const char*)_check_dynforward_subscript(s,sizeof(char),i));if(c == '*'){_tmp3=({
  struct Cyc_List_List*_tmp4=_cycalloc(sizeof(*_tmp4));_tmp4->hd=(void*)((int)c);
***************
*** 954,994 ****
  struct _tuple4*_tmp11=_cycalloc(sizeof(*_tmp11));_tmp11->f1=_tmp1;_tmp11->f2=
  _tmp3;_tmp11->f3=_tmp6;_tmp11->f4=_tmpA;_tmp11->f5=c;_tmp11->f6=i + 1;_tmp11;});
  _tmp10;});}}}}}struct Cyc_List_List*Cyc_Formatstr_get_format_typs(struct Cyc_Tcenv_Tenv*
! te,struct _dynforward_ptr s,struct Cyc_Position_Segment*loc){unsigned int _tmp12=Cyc_strlen((
! struct _dynforward_ptr)s);struct Cyc_List_List*_tmp13=0;int i;for(i=0;i < _tmp12;i ++){
! if(*((const char*)_check_dynforward_subscript(s,sizeof(char),i))!= '%')continue;{
! struct Cyc_Core_Opt*_tmp14=Cyc_Formatstr_parse_conversionspecification(s,i + 1);
! if(_tmp14 == 0){({void*_tmp15[0]={};Cyc_Tcutil_terr(loc,({const char*_tmp16="bad format string";
! _tag_dynforward(_tmp16,sizeof(char),_get_zero_arr_size(_tmp16,18));}),
! _tag_dynforward(_tmp15,sizeof(void*),0));});return 0;}{struct _tuple4 _tmp18;struct
! Cyc_List_List*_tmp19;struct Cyc_List_List*_tmp1A;struct Cyc_List_List*_tmp1B;
! struct Cyc_List_List*_tmp1C;char _tmp1D;int _tmp1E;struct _tuple4*_tmp17=(struct
! _tuple4*)_tmp14->v;_tmp18=*_tmp17;_tmp19=_tmp18.f1;_tmp1A=_tmp18.f2;_tmp1B=
! _tmp18.f3;_tmp1C=_tmp18.f4;_tmp1D=_tmp18.f5;_tmp1E=_tmp18.f6;i=_tmp1E - 1;{struct
! Cyc_List_List*_tmp1F=_tmp1C;struct Cyc_List_List _tmp20;int _tmp21;struct Cyc_List_List*
! _tmp22;_LL25: if(_tmp1F == 0)goto _LL27;_tmp20=*_tmp1F;_tmp21=(int)_tmp20.hd;_tmp22=
! _tmp20.tl;if(_tmp22 != 0)goto _LL27;if(!((_tmp21 == 'j'  || _tmp21 == 'z') || _tmp21
! == 't'))goto _LL27;_LL26:({struct Cyc_Int_pa_struct _tmp25;_tmp25.tag=1;_tmp25.f1=(
! unsigned long)_tmp21;{void*_tmp23[1]={& _tmp25};Cyc_Tcutil_terr(loc,({const char*
! _tmp24="length modifier '%c' is not supported";_tag_dynforward(_tmp24,sizeof(
! char),_get_zero_arr_size(_tmp24,38));}),_tag_dynforward(_tmp23,sizeof(void*),1));}});
! return 0;_LL27:;_LL28: goto _LL24;_LL24:;}{struct Cyc_List_List*_tmp26=_tmp1A;struct
! Cyc_List_List _tmp27;int _tmp28;struct Cyc_List_List*_tmp29;_LL2A: if(_tmp26 == 0)
! goto _LL2C;_tmp27=*_tmp26;_tmp28=(int)_tmp27.hd;_tmp29=_tmp27.tl;if(_tmp29 != 0)
! goto _LL2C;if(!(_tmp28 == '*'))goto _LL2C;_LL2B: _tmp13=({struct Cyc_List_List*_tmp2A=
! _cycalloc(sizeof(*_tmp2A));_tmp2A->hd=(void*)Cyc_Absyn_sint_typ;_tmp2A->tl=
! _tmp13;_tmp2A;});goto _LL29;_LL2C:;_LL2D: goto _LL29;_LL29:;}{struct Cyc_List_List*
! _tmp2B=_tmp1B;struct Cyc_List_List _tmp2C;int _tmp2D;struct Cyc_List_List*_tmp2E;
! struct Cyc_List_List _tmp2F;int _tmp30;struct Cyc_List_List*_tmp31;_LL2F: if(_tmp2B == 
! 0)goto _LL31;_tmp2C=*_tmp2B;_tmp2D=(int)_tmp2C.hd;_tmp2E=_tmp2C.tl;if(_tmp2E == 0)
! goto _LL31;_tmp2F=*_tmp2E;_tmp30=(int)_tmp2F.hd;_tmp31=_tmp2F.tl;if(_tmp31 != 0)
! goto _LL31;if(!(_tmp2D == '.'  && _tmp30 == '*'))goto _LL31;_LL30: _tmp13=({struct Cyc_List_List*
! _tmp32=_cycalloc(sizeof(*_tmp32));_tmp32->hd=(void*)Cyc_Absyn_sint_typ;_tmp32->tl=
! _tmp13;_tmp32;});goto _LL2E;_LL31:;_LL32: goto _LL2E;_LL2E:;}{void*t;switch(_tmp1D){
! case 'd': _LL33: goto _LL34;case 'i': _LL34:{struct Cyc_List_List*f=_tmp19;for(0;f != 0;
! f=f->tl){if((int)f->hd == '#'){({struct Cyc_Int_pa_struct _tmp35;_tmp35.tag=1;
! _tmp35.f1=(unsigned long)((int)_tmp1D);{void*_tmp33[1]={& _tmp35};Cyc_Tcutil_terr(
! loc,({const char*_tmp34="flag '#' is not valid with %%%c";_tag_dynforward(_tmp34,
  sizeof(char),_get_zero_arr_size(_tmp34,32));}),_tag_dynforward(_tmp33,sizeof(
  void*),1));}});return 0;}}}{struct Cyc_List_List*_tmp36=_tmp1C;struct Cyc_List_List
  _tmp37;int _tmp38;struct Cyc_List_List*_tmp39;struct Cyc_List_List _tmp3A;int _tmp3B;
--- 952,993 ----
  struct _tuple4*_tmp11=_cycalloc(sizeof(*_tmp11));_tmp11->f1=_tmp1;_tmp11->f2=
  _tmp3;_tmp11->f3=_tmp6;_tmp11->f4=_tmpA;_tmp11->f5=c;_tmp11->f6=i + 1;_tmp11;});
  _tmp10;});}}}}}struct Cyc_List_List*Cyc_Formatstr_get_format_typs(struct Cyc_Tcenv_Tenv*
! te,struct _dynforward_ptr s,struct Cyc_Position_Segment*loc){unsigned long _tmp12=
! Cyc_strlen((struct _dynforward_ptr)s);struct Cyc_List_List*_tmp13=0;int i;for(i=0;i
! < _tmp12;i ++){if(*((const char*)_check_dynforward_subscript(s,sizeof(char),i))!= '%')
! continue;{struct Cyc_Core_Opt*_tmp14=Cyc_Formatstr_parse_conversionspecification(
! s,i + 1);if(_tmp14 == 0){({void*_tmp15[0]={};Cyc_Tcutil_terr(loc,({const char*
! _tmp16="bad format string";_tag_dynforward(_tmp16,sizeof(char),
! _get_zero_arr_size(_tmp16,18));}),_tag_dynforward(_tmp15,sizeof(void*),0));});
! return 0;}{struct _tuple4 _tmp18;struct Cyc_List_List*_tmp19;struct Cyc_List_List*
! _tmp1A;struct Cyc_List_List*_tmp1B;struct Cyc_List_List*_tmp1C;char _tmp1D;int
! _tmp1E;struct _tuple4*_tmp17=(struct _tuple4*)_tmp14->v;_tmp18=*_tmp17;_tmp19=
! _tmp18.f1;_tmp1A=_tmp18.f2;_tmp1B=_tmp18.f3;_tmp1C=_tmp18.f4;_tmp1D=_tmp18.f5;
! _tmp1E=_tmp18.f6;i=_tmp1E - 1;{struct Cyc_List_List*_tmp1F=_tmp1C;struct Cyc_List_List
! _tmp20;int _tmp21;struct Cyc_List_List*_tmp22;_LL25: if(_tmp1F == 0)goto _LL27;_tmp20=*
! _tmp1F;_tmp21=(int)_tmp20.hd;_tmp22=_tmp20.tl;if(_tmp22 != 0)goto _LL27;if(!((
! _tmp21 == 'j'  || _tmp21 == 'z') || _tmp21 == 't'))goto _LL27;_LL26:({struct Cyc_Int_pa_struct
! _tmp25;_tmp25.tag=1;_tmp25.f1=(unsigned long)_tmp21;{void*_tmp23[1]={& _tmp25};
! Cyc_Tcutil_terr(loc,({const char*_tmp24="length modifier '%c' is not supported";
! _tag_dynforward(_tmp24,sizeof(char),_get_zero_arr_size(_tmp24,38));}),
! _tag_dynforward(_tmp23,sizeof(void*),1));}});return 0;_LL27:;_LL28: goto _LL24;
! _LL24:;}{struct Cyc_List_List*_tmp26=_tmp1A;struct Cyc_List_List _tmp27;int _tmp28;
! struct Cyc_List_List*_tmp29;_LL2A: if(_tmp26 == 0)goto _LL2C;_tmp27=*_tmp26;_tmp28=(
! int)_tmp27.hd;_tmp29=_tmp27.tl;if(_tmp29 != 0)goto _LL2C;if(!(_tmp28 == '*'))goto
! _LL2C;_LL2B: _tmp13=({struct Cyc_List_List*_tmp2A=_cycalloc(sizeof(*_tmp2A));
! _tmp2A->hd=(void*)Cyc_Absyn_sint_typ;_tmp2A->tl=_tmp13;_tmp2A;});goto _LL29;_LL2C:;
! _LL2D: goto _LL29;_LL29:;}{struct Cyc_List_List*_tmp2B=_tmp1B;struct Cyc_List_List
! _tmp2C;int _tmp2D;struct Cyc_List_List*_tmp2E;struct Cyc_List_List _tmp2F;int _tmp30;
! struct Cyc_List_List*_tmp31;_LL2F: if(_tmp2B == 0)goto _LL31;_tmp2C=*_tmp2B;_tmp2D=(
! int)_tmp2C.hd;_tmp2E=_tmp2C.tl;if(_tmp2E == 0)goto _LL31;_tmp2F=*_tmp2E;_tmp30=(
! int)_tmp2F.hd;_tmp31=_tmp2F.tl;if(_tmp31 != 0)goto _LL31;if(!(_tmp2D == '.'  && 
! _tmp30 == '*'))goto _LL31;_LL30: _tmp13=({struct Cyc_List_List*_tmp32=_cycalloc(
! sizeof(*_tmp32));_tmp32->hd=(void*)Cyc_Absyn_sint_typ;_tmp32->tl=_tmp13;_tmp32;});
! goto _LL2E;_LL31:;_LL32: goto _LL2E;_LL2E:;}{void*t;switch(_tmp1D){case 'd': _LL33:
! goto _LL34;case 'i': _LL34:{struct Cyc_List_List*f=_tmp19;for(0;f != 0;f=f->tl){if((
! int)f->hd == '#'){({struct Cyc_Int_pa_struct _tmp35;_tmp35.tag=1;_tmp35.f1=(
! unsigned long)((int)_tmp1D);{void*_tmp33[1]={& _tmp35};Cyc_Tcutil_terr(loc,({
! const char*_tmp34="flag '#' is not valid with %%%c";_tag_dynforward(_tmp34,
  sizeof(char),_get_zero_arr_size(_tmp34,32));}),_tag_dynforward(_tmp33,sizeof(
  void*),1));}});return 0;}}}{struct Cyc_List_List*_tmp36=_tmp1C;struct Cyc_List_List
  _tmp37;int _tmp38;struct Cyc_List_List*_tmp39;struct Cyc_List_List _tmp3A;int _tmp3B;
***************
*** 1130,1136 ****
  _tag_dynforward(_tmp9A,sizeof(void*),1));}});return 0;}break;default: _LL6E: return
  0;}}}}}return Cyc_List_imp_rev(_tmp13);}struct _tuple5{int f1;struct Cyc_List_List*
  f2;struct Cyc_List_List*f3;char f4;int f5;};struct Cyc_Core_Opt*Cyc_Formatstr_parse_inputformat(
! struct _dynforward_ptr s,int i){unsigned int _tmp9D=Cyc_strlen((struct
  _dynforward_ptr)s);if(i < 0  || i >= _tmp9D)return 0;{int _tmp9E=0;char _tmp9F=*((
  const char*)_check_dynforward_subscript(s,sizeof(char),i));if(_tmp9F == '*'){
  _tmp9E=1;i ++;if(i >= _tmp9D)return 0;}{struct Cyc_List_List*_tmpA0=0;for(0;i < 
--- 1129,1135 ----
  _tag_dynforward(_tmp9A,sizeof(void*),1));}});return 0;}break;default: _LL6E: return
  0;}}}}}return Cyc_List_imp_rev(_tmp13);}struct _tuple5{int f1;struct Cyc_List_List*
  f2;struct Cyc_List_List*f3;char f4;int f5;};struct Cyc_Core_Opt*Cyc_Formatstr_parse_inputformat(
! struct _dynforward_ptr s,int i){unsigned long _tmp9D=Cyc_strlen((struct
  _dynforward_ptr)s);if(i < 0  || i >= _tmp9D)return 0;{int _tmp9E=0;char _tmp9F=*((
  const char*)_check_dynforward_subscript(s,sizeof(char),i));if(_tmp9F == '*'){
  _tmp9E=1;i ++;if(i >= _tmp9D)return 0;}{struct Cyc_List_List*_tmpA0=0;for(0;i < 
***************
*** 1165,1171 ****
  _tuple5*_tmpA9=_cycalloc(sizeof(*_tmpA9));_tmpA9->f1=_tmp9E;_tmpA9->f2=_tmpA0;
  _tmpA9->f3=_tmpA2;_tmpA9->f4=_tmp9F;_tmpA9->f5=i + 1;_tmpA9;});_tmpA8;});}}}}
  struct Cyc_List_List*Cyc_Formatstr_get_scanf_typs(struct Cyc_Tcenv_Tenv*te,struct
! _dynforward_ptr s,struct Cyc_Position_Segment*loc){unsigned int _tmpAA=Cyc_strlen((
  struct _dynforward_ptr)s);struct Cyc_List_List*_tmpAB=0;int i;for(i=0;i < _tmpAA;i ++){
  if(*((const char*)_check_dynforward_subscript(s,sizeof(char),i))!= '%')continue;{
  struct Cyc_Core_Opt*_tmpAC=Cyc_Formatstr_parse_inputformat(s,i + 1);if(_tmpAC == 0){({
--- 1164,1170 ----
  _tuple5*_tmpA9=_cycalloc(sizeof(*_tmpA9));_tmpA9->f1=_tmp9E;_tmpA9->f2=_tmpA0;
  _tmpA9->f3=_tmpA2;_tmpA9->f4=_tmp9F;_tmpA9->f5=i + 1;_tmpA9;});_tmpA8;});}}}}
  struct Cyc_List_List*Cyc_Formatstr_get_scanf_typs(struct Cyc_Tcenv_Tenv*te,struct
! _dynforward_ptr s,struct Cyc_Position_Segment*loc){unsigned long _tmpAA=Cyc_strlen((
  struct _dynforward_ptr)s);struct Cyc_List_List*_tmpAB=0;int i;for(i=0;i < _tmpAA;i ++){
  if(*((const char*)_check_dynforward_subscript(s,sizeof(char),i))!= '%')continue;{
  struct Cyc_Core_Opt*_tmpAC=Cyc_Formatstr_parse_inputformat(s,i + 1);if(_tmpAC == 0){({
diff -rbBcN --exclude=CVS i686-unknown-linux/src/install_path.c.orig powerpc-apple-rhapsody/src/install_path.c.orig
*** i686-unknown-linux/src/install_path.c.orig	Wed Dec 31 19:00:00 1969
--- powerpc-apple-rhapsody/src/install_path.c.orig	Thu Jun 27 17:35:18 2002
***************
*** 0 ****
--- 1,5 ----
+ char *Cdef_inc_path = "/usr/include/cyclone";
+ char *Carch = "i686-unknown-linux";
+ char *Cdef_lib_path = "/usr/local/lib/cyclone";
+ char *Ccomp = "gcc";
+ char *Cversion = "0.2";
diff -rbBcN --exclude=CVS i686-unknown-linux/src/install_path.c.rej powerpc-apple-rhapsody/src/install_path.c.rej
*** i686-unknown-linux/src/install_path.c.rej	Wed Dec 31 19:00:00 1969
--- powerpc-apple-rhapsody/src/install_path.c.rej	Thu Jun 27 17:35:18 2002
***************
*** 0 ****
--- 1,8 ----
+ ***************
+ *** 1,5 ****
+ - char *Cdef_inc_path = "/usr/include/cyclone";
+ - char *Carch = "powerpc-apple-rhapsody";
+ - char *Cdef_lib_path = "/usr/local/lib/cyclone";
+ - char *Ccomp = "cc -no-cpp-precomp";
+ - char *Cversion = "0.2";
+ --- 0 ----
diff -rbBcN --exclude=CVS i686-unknown-linux/src/interface.c powerpc-apple-rhapsody/src/interface.c
*** i686-unknown-linux/src/interface.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/interface.c	Thu Jun 27 17:35:22 2002
***************
*** 659,668 ****
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
--- 659,666 ----
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct
! Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
diff -rbBcN --exclude=CVS i686-unknown-linux/src/lex.c powerpc-apple-rhapsody/src/lex.c
*** i686-unknown-linux/src/lex.c	Thu Jun 27 17:34:20 2002
--- powerpc-apple-rhapsody/src/lex.c	Thu Jun 27 17:35:20 2002
***************
*** 659,668 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
--- 659,666 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct
! Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
***************
*** 690,702 ****
  struct Cyc_Iter_Iter,void*);struct Cyc_Set_Set;struct Cyc_Set_Set*Cyc_Set_empty(int(*
  cmp)(void*,void*));struct Cyc_Set_Set*Cyc_Set_insert(struct Cyc_Set_Set*s,void*elt);
  int Cyc_Set_member(struct Cyc_Set_Set*s,void*elt);void Cyc_Set_iter(void(*f)(void*),
! struct Cyc_Set_Set*s);extern char Cyc_Set_Absent[11];unsigned int Cyc_strlen(struct
  _dynforward_ptr s);int Cyc_zstrptrcmp(struct _dynforward_ptr*,struct _dynforward_ptr*);
  struct _dynforward_ptr Cyc_str_sepstr(struct Cyc_List_List*,struct _dynforward_ptr);
  struct _dynforward_ptr Cyc_zstrncpy(struct _dynforward_ptr,struct _dynforward_ptr,
! unsigned int);struct _dynforward_ptr Cyc_substring(struct _dynforward_ptr,int ofs,
! unsigned int n);struct Cyc_Xarray_Xarray{struct _dynforward_ptr elmts;int num_elmts;}
! ;void*Cyc_Xarray_get(struct Cyc_Xarray_Xarray*,int);struct Cyc_Xarray_Xarray*Cyc_Xarray_create(
  int,void*);void Cyc_Xarray_add(struct Cyc_Xarray_Xarray*,void*);int Cyc_Xarray_add_ind(
  struct Cyc_Xarray_Xarray*,void*);struct Cyc_Lineno_Pos{struct _dynforward_ptr
  logical_file;struct _dynforward_ptr line;int line_no;int col;};extern char Cyc_Position_Exit[
--- 688,700 ----
  struct Cyc_Iter_Iter,void*);struct Cyc_Set_Set;struct Cyc_Set_Set*Cyc_Set_empty(int(*
  cmp)(void*,void*));struct Cyc_Set_Set*Cyc_Set_insert(struct Cyc_Set_Set*s,void*elt);
  int Cyc_Set_member(struct Cyc_Set_Set*s,void*elt);void Cyc_Set_iter(void(*f)(void*),
! struct Cyc_Set_Set*s);extern char Cyc_Set_Absent[11];unsigned long Cyc_strlen(struct
  _dynforward_ptr s);int Cyc_zstrptrcmp(struct _dynforward_ptr*,struct _dynforward_ptr*);
  struct _dynforward_ptr Cyc_str_sepstr(struct Cyc_List_List*,struct _dynforward_ptr);
  struct _dynforward_ptr Cyc_zstrncpy(struct _dynforward_ptr,struct _dynforward_ptr,
! unsigned long);struct _dynforward_ptr Cyc_substring(struct _dynforward_ptr,int ofs,
! unsigned long n);struct Cyc_Xarray_Xarray{struct _dynforward_ptr elmts;int num_elmts;
! };void*Cyc_Xarray_get(struct Cyc_Xarray_Xarray*,int);struct Cyc_Xarray_Xarray*Cyc_Xarray_create(
  int,void*);void Cyc_Xarray_add(struct Cyc_Xarray_Xarray*,void*);int Cyc_Xarray_add_ind(
  struct Cyc_Xarray_Xarray*,void*);struct Cyc_Lineno_Pos{struct _dynforward_ptr
  logical_file;struct _dynforward_ptr line;int line_no;int col;};extern char Cyc_Position_Exit[
***************
*** 1075,1081 ****
  Cyc_Lex_ids_trie,buff,offset,len);if(_tmp56->shared_str == 0){struct
  _dynforward_ptr _tmp57=Cyc_Core_new_string((unsigned int)(len + 1));Cyc_zstrncpy(
  _dynforward_ptr_decrease_size(_tmp57,sizeof(char),1),(struct _dynforward_ptr)
! _dynforward_ptr_plus(buff,sizeof(char),offset),(unsigned int)len);{int ans=((int(*)(
  struct Cyc_Xarray_Xarray*,struct _dynforward_ptr*))Cyc_Xarray_add_ind)((struct Cyc_Xarray_Xarray*)
  _check_null(Cyc_Lex_symbols),({struct _dynforward_ptr*_tmp58=_cycalloc(sizeof(*
  _tmp58));_tmp58[0]=(struct _dynforward_ptr)_tmp57;_tmp58;}));_tmp56->shared_str=
--- 1073,1079 ----
  Cyc_Lex_ids_trie,buff,offset,len);if(_tmp56->shared_str == 0){struct
  _dynforward_ptr _tmp57=Cyc_Core_new_string((unsigned int)(len + 1));Cyc_zstrncpy(
  _dynforward_ptr_decrease_size(_tmp57,sizeof(char),1),(struct _dynforward_ptr)
! _dynforward_ptr_plus(buff,sizeof(char),offset),(unsigned long)len);{int ans=((int(*)(
  struct Cyc_Xarray_Xarray*,struct _dynforward_ptr*))Cyc_Xarray_add_ind)((struct Cyc_Xarray_Xarray*)
  _check_null(Cyc_Lex_symbols),({struct _dynforward_ptr*_tmp58=_cycalloc(sizeof(*
  _tmp58));_tmp58[0]=(struct _dynforward_ptr)_tmp57;_tmp58;}));_tmp56->shared_str=
***************
*** 1120,1126 ****
   && (_tmp65 == '\000'  && _tmp66 != '\000'))_throw_arraybounds();*((char*)_tmp64.curr)=
  _tmp66;});++ Cyc_Lex_string_pos;}struct _dynforward_ptr Cyc_Lex_get_stored_string(){
  struct _dynforward_ptr str=Cyc_substring((struct _dynforward_ptr)Cyc_Lex_string_buffer,
! 0,(unsigned int)Cyc_Lex_string_pos);Cyc_Lex_string_pos=0;return str;}struct Cyc_Lex_Ldecls{
  struct Cyc_Set_Set*typedefs;struct Cyc_Set_Set*namespaces;};struct Cyc_Lex_Lvis{
  struct Cyc_List_List*current_namespace;struct Cyc_List_List*imported_namespaces;};
  struct Cyc_Lex_Lstate{struct Cyc_List_List*lstack;struct Cyc_Dict_Dict*decls;};
--- 1118,1124 ----
   && (_tmp65 == '\000'  && _tmp66 != '\000'))_throw_arraybounds();*((char*)_tmp64.curr)=
  _tmp66;});++ Cyc_Lex_string_pos;}struct _dynforward_ptr Cyc_Lex_get_stored_string(){
  struct _dynforward_ptr str=Cyc_substring((struct _dynforward_ptr)Cyc_Lex_string_buffer,
! 0,(unsigned long)Cyc_Lex_string_pos);Cyc_Lex_string_pos=0;return str;}struct Cyc_Lex_Ldecls{
  struct Cyc_Set_Set*typedefs;struct Cyc_Set_Set*namespaces;};struct Cyc_Lex_Lvis{
  struct Cyc_List_List*current_namespace;struct Cyc_List_List*imported_namespaces;};
  struct Cyc_Lex_Lstate{struct Cyc_List_List*lstack;struct Cyc_Dict_Dict*decls;};
diff -rbBcN --exclude=CVS i686-unknown-linux/src/new_control_flow.c powerpc-apple-rhapsody/src/new_control_flow.c
*** i686-unknown-linux/src/new_control_flow.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/new_control_flow.c	Thu Jun 27 17:35:22 2002
***************
*** 669,680 ****
  y);extern char Cyc_List_Nth[8];void*Cyc_List_nth(struct Cyc_List_List*x,int n);int
  Cyc_List_memq(struct Cyc_List_List*l,void*x);struct Cyc_Iter_Iter{void*env;int(*
  next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,void*);struct
! Cyc_Set_Set;extern char Cyc_Set_Absent[11];typedef struct{int __count;union{
! unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;typedef struct{long
! __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t Cyc_fpos_t;
! struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
--- 669,677 ----
  y);extern char Cyc_List_Nth[8];void*Cyc_List_nth(struct Cyc_List_List*x,int n);int
  Cyc_List_memq(struct Cyc_List_List*l,void*x);struct Cyc_Iter_Iter{void*env;int(*
  next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,void*);struct
! Cyc_Set_Set;extern char Cyc_Set_Absent[11];struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/parse_tab.c powerpc-apple-rhapsody/src/parse_tab.c
*** i686-unknown-linux/src/parse_tab.c	Thu Jun 27 17:34:20 2002
--- powerpc-apple-rhapsody/src/parse_tab.c	Thu Jun 27 17:35:20 2002
***************
*** 658,669 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;typedef struct{
! int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fprintf(struct Cyc___cycFILE*,struct _dynforward_ptr,
--- 658,667 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;struct Cyc___cycFILE;
! extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fprintf(struct Cyc___cycFILE*,struct _dynforward_ptr,
***************
*** 696,723 ****
  struct Cyc_List_List*x);extern char Cyc_List_Nth[8];struct Cyc_List_List*Cyc_List_zip(
  struct Cyc_List_List*x,struct Cyc_List_List*y);struct _tuple0{struct Cyc_List_List*
  f1;struct Cyc_List_List*f2;};struct _tuple0 Cyc_List_split(struct Cyc_List_List*x);
! unsigned int Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(struct
  _dynforward_ptr s1,struct _dynforward_ptr s2);int Cyc_zstrcmp(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_zstrptrcmp(struct _dynforward_ptr*,struct
  _dynforward_ptr*);struct _dynforward_ptr Cyc_strcat(struct _dynforward_ptr dest,
  struct _dynforward_ptr src);struct _dynforward_ptr Cyc_strcpy(struct _dynforward_ptr
  dest,struct _dynforward_ptr src);struct _dynforward_ptr Cyc_substring(struct
! _dynforward_ptr,int ofs,unsigned int n);struct Cyc_Lineno_Pos{struct _dynforward_ptr
! logical_file;struct _dynforward_ptr line;int line_no;int col;};extern char Cyc_Position_Exit[
! 9];struct Cyc_Position_Segment;struct Cyc_Position_Segment*Cyc_Position_segment_of_abs(
! int,int);struct Cyc_Position_Segment*Cyc_Position_segment_join(struct Cyc_Position_Segment*,
! struct Cyc_Position_Segment*);struct _dynforward_ptr Cyc_Position_string_of_segment(
! struct Cyc_Position_Segment*);struct Cyc_Position_Error{struct _dynforward_ptr
! source;struct Cyc_Position_Segment*seg;void*kind;struct _dynforward_ptr desc;};
! struct Cyc_Position_Error*Cyc_Position_mk_err_parse(struct Cyc_Position_Segment*,
! struct _dynforward_ptr);extern char Cyc_Position_Nocontext[14];void Cyc_Position_post_error(
! struct Cyc_Position_Error*);struct Cyc_Absyn_Rel_n_struct{int tag;struct Cyc_List_List*
! f1;};struct Cyc_Absyn_Abs_n_struct{int tag;struct Cyc_List_List*f1;};struct _tuple1{
! void*f1;struct _dynforward_ptr*f2;};struct Cyc_Absyn_Conref;struct Cyc_Absyn_Tqual{
! int print_const;int q_volatile;int q_restrict;int real_const;struct Cyc_Position_Segment*
! loc;};struct Cyc_Absyn_Conref{void*v;};struct Cyc_Absyn_Eq_constr_struct{int tag;
! void*f1;};struct Cyc_Absyn_Forward_constr_struct{int tag;struct Cyc_Absyn_Conref*f1;
! };struct Cyc_Absyn_Eq_kb_struct{int tag;void*f1;};struct Cyc_Absyn_Unknown_kb_struct{
  int tag;struct Cyc_Core_Opt*f1;};struct Cyc_Absyn_Less_kb_struct{int tag;struct Cyc_Core_Opt*
  f1;void*f2;};struct Cyc_Absyn_Tvar{struct _dynforward_ptr*name;int*identity;void*
  kind;};struct Cyc_Absyn_Upper_b_struct{int tag;struct Cyc_Absyn_Exp*f1;};struct Cyc_Absyn_AbsUpper_b_struct{
--- 694,721 ----
  struct Cyc_List_List*x);extern char Cyc_List_Nth[8];struct Cyc_List_List*Cyc_List_zip(
  struct Cyc_List_List*x,struct Cyc_List_List*y);struct _tuple0{struct Cyc_List_List*
  f1;struct Cyc_List_List*f2;};struct _tuple0 Cyc_List_split(struct Cyc_List_List*x);
! unsigned long Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(struct
  _dynforward_ptr s1,struct _dynforward_ptr s2);int Cyc_zstrcmp(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_zstrptrcmp(struct _dynforward_ptr*,struct
  _dynforward_ptr*);struct _dynforward_ptr Cyc_strcat(struct _dynforward_ptr dest,
  struct _dynforward_ptr src);struct _dynforward_ptr Cyc_strcpy(struct _dynforward_ptr
  dest,struct _dynforward_ptr src);struct _dynforward_ptr Cyc_substring(struct
! _dynforward_ptr,int ofs,unsigned long n);struct Cyc_Lineno_Pos{struct
! _dynforward_ptr logical_file;struct _dynforward_ptr line;int line_no;int col;};extern
! char Cyc_Position_Exit[9];struct Cyc_Position_Segment;struct Cyc_Position_Segment*
! Cyc_Position_segment_of_abs(int,int);struct Cyc_Position_Segment*Cyc_Position_segment_join(
! struct Cyc_Position_Segment*,struct Cyc_Position_Segment*);struct _dynforward_ptr
! Cyc_Position_string_of_segment(struct Cyc_Position_Segment*);struct Cyc_Position_Error{
! struct _dynforward_ptr source;struct Cyc_Position_Segment*seg;void*kind;struct
! _dynforward_ptr desc;};struct Cyc_Position_Error*Cyc_Position_mk_err_parse(struct
! Cyc_Position_Segment*,struct _dynforward_ptr);extern char Cyc_Position_Nocontext[14];
! void Cyc_Position_post_error(struct Cyc_Position_Error*);struct Cyc_Absyn_Rel_n_struct{
! int tag;struct Cyc_List_List*f1;};struct Cyc_Absyn_Abs_n_struct{int tag;struct Cyc_List_List*
! f1;};struct _tuple1{void*f1;struct _dynforward_ptr*f2;};struct Cyc_Absyn_Conref;
! struct Cyc_Absyn_Tqual{int print_const;int q_volatile;int q_restrict;int real_const;
! struct Cyc_Position_Segment*loc;};struct Cyc_Absyn_Conref{void*v;};struct Cyc_Absyn_Eq_constr_struct{
! int tag;void*f1;};struct Cyc_Absyn_Forward_constr_struct{int tag;struct Cyc_Absyn_Conref*
! f1;};struct Cyc_Absyn_Eq_kb_struct{int tag;void*f1;};struct Cyc_Absyn_Unknown_kb_struct{
  int tag;struct Cyc_Core_Opt*f1;};struct Cyc_Absyn_Less_kb_struct{int tag;struct Cyc_Core_Opt*
  f1;void*f2;};struct Cyc_Absyn_Tvar{struct _dynforward_ptr*name;int*identity;void*
  kind;};struct Cyc_Absyn_Upper_b_struct{int tag;struct Cyc_Absyn_Exp*f1;};struct Cyc_Absyn_AbsUpper_b_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/port.c powerpc-apple-rhapsody/src/port.c
*** i686-unknown-linux/src/port.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/port.c	Thu Jun 27 17:35:22 2002
***************
*** 861,870 ****
  Cyc_Position_Segment*);struct Cyc_Absyn_Conref*Cyc_Absyn_empty_conref();void*Cyc_Absyn_conref_val(
  struct Cyc_Absyn_Conref*x);void*Cyc_Absyn_wildtyp(struct Cyc_Core_Opt*);extern void*
  Cyc_Absyn_sint_typ;void*Cyc_Absyn_string_typ(void*rgn);void*Cyc_Absyn_dynforward_typ(
! void*t,void*rgn,struct Cyc_Absyn_Tqual tq,struct Cyc_Absyn_Conref*zero_term);
! typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
  struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
--- 861,868 ----
  Cyc_Position_Segment*);struct Cyc_Absyn_Conref*Cyc_Absyn_empty_conref();void*Cyc_Absyn_conref_val(
  struct Cyc_Absyn_Conref*x);void*Cyc_Absyn_wildtyp(struct Cyc_Core_Opt*);extern void*
  Cyc_Absyn_sint_typ;void*Cyc_Absyn_string_typ(void*rgn);void*Cyc_Absyn_dynforward_typ(
! void*t,void*rgn,struct Cyc_Absyn_Tqual tq,struct Cyc_Absyn_Conref*zero_term);struct
! Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
  struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/rgnorder.c powerpc-apple-rhapsody/src/rgnorder.c
*** i686-unknown-linux/src/rgnorder.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/rgnorder.c	Thu Jun 27 17:35:20 2002
***************
*** 653,661 ****
  #define _cycalloc_atomic(n) _profile_GC_malloc_atomic(n,__FILE__ ":" __FUNCTION__,__LINE__)
  #endif
  #endif
!  typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
--- 653,659 ----
  #define _cycalloc_atomic(n) _profile_GC_malloc_atomic(n,__FILE__ ":" __FUNCTION__,__LINE__)
  #endif
  #endif
!  struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/tc.c powerpc-apple-rhapsody/src/tc.c
*** i686-unknown-linux/src/tc.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/tc.c	Thu Jun 27 17:35:20 2002
***************
*** 865,912 ****
  Cyc_Absyn_array_typ(void*elt_type,struct Cyc_Absyn_Tqual tq,struct Cyc_Absyn_Exp*
  num_elts,struct Cyc_Absyn_Conref*zero_term,struct Cyc_Position_Segment*ztloc);
  struct Cyc_Absyn_Exp*Cyc_Absyn_uint_exp(unsigned int,struct Cyc_Position_Segment*);
! struct _dynforward_ptr Cyc_Absyn_attribute2string(void*);typedef struct{int __count;
! union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;typedef struct{
! long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t Cyc_fpos_t;
! struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
! int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
! int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
! Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
! int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;
! };struct Cyc_FloatPtr_sa_struct{int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int
! tag;struct _dynforward_ptr f1;};extern char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[
! 18];struct Cyc_FileOpenError_struct{char*tag;struct _dynforward_ptr f1;};struct Cyc_PP_Ppstate;
! struct Cyc_PP_Out;struct Cyc_PP_Doc;struct Cyc_Absynpp_Params{int expand_typedefs: 1;
! int qvar_to_Cids: 1;int add_cyc_prefix: 1;int to_VC: 1;int decls_first: 1;int
! rewrite_temp_tvars: 1;int print_all_tvars: 1;int print_all_kinds: 1;int
! print_all_effects: 1;int print_using_stmts: 1;int print_externC_stmts: 1;int
! print_full_evars: 1;int print_zeroterm: 1;int generate_line_directives: 1;int
! use_curr_namespace: 1;struct Cyc_List_List*curr_namespace;};void Cyc_Absynpp_set_params(
! struct Cyc_Absynpp_Params*fs);extern struct Cyc_Absynpp_Params Cyc_Absynpp_tc_params_r;
! struct _dynforward_ptr Cyc_Absynpp_typ2string(void*);struct _dynforward_ptr Cyc_Absynpp_qvar2string(
! struct _tuple0*);struct Cyc_Iter_Iter{void*env;int(*next)(void*env,void*dest);};
! int Cyc_Iter_next(struct Cyc_Iter_Iter,void*);struct Cyc_Set_Set;struct Cyc_Set_Set*
! Cyc_Set_rempty(struct _RegionHandle*r,int(*cmp)(void*,void*));struct Cyc_Set_Set*
! Cyc_Set_rinsert(struct _RegionHandle*r,struct Cyc_Set_Set*s,void*elt);int Cyc_Set_member(
! struct Cyc_Set_Set*s,void*elt);extern char Cyc_Set_Absent[11];struct Cyc_Dict_Dict;
! extern char Cyc_Dict_Present[12];extern char Cyc_Dict_Absent[11];int Cyc_Dict_is_empty(
! struct Cyc_Dict_Dict*d);int Cyc_Dict_member(struct Cyc_Dict_Dict*d,void*k);struct
! Cyc_Dict_Dict*Cyc_Dict_insert(struct Cyc_Dict_Dict*d,void*k,void*v);void*Cyc_Dict_lookup(
! struct Cyc_Dict_Dict*d,void*k);struct Cyc_Core_Opt*Cyc_Dict_lookup_opt(struct Cyc_Dict_Dict*
! d,void*k);struct Cyc_Dict_Dict*Cyc_Dict_rmap_c(struct _RegionHandle*,void*(*f)(
! void*,void*),void*env,struct Cyc_Dict_Dict*d);struct _tuple3{void*f1;void*f2;};
! struct _tuple3*Cyc_Dict_rchoose(struct _RegionHandle*r,struct Cyc_Dict_Dict*d);
! struct _tuple3*Cyc_Dict_rchoose(struct _RegionHandle*,struct Cyc_Dict_Dict*d);
! struct Cyc_Dict_Dict*Cyc_Dict_rfilter_c(struct _RegionHandle*,int(*f)(void*,void*,
! void*),void*env,struct Cyc_Dict_Dict*d);struct Cyc_Iter_Iter Cyc_Dict_make_iter(
! struct _RegionHandle*rgn,struct Cyc_Dict_Dict*d);struct Cyc_RgnOrder_RgnPO;struct
! Cyc_RgnOrder_RgnPO*Cyc_RgnOrder_initial_fn_po(struct Cyc_List_List*tvs,struct Cyc_List_List*
! po,void*effect,struct Cyc_Absyn_Tvar*fst_rgn);struct Cyc_RgnOrder_RgnPO*Cyc_RgnOrder_add_outlives_constraint(
! struct Cyc_RgnOrder_RgnPO*po,void*eff,void*rgn);struct Cyc_RgnOrder_RgnPO*Cyc_RgnOrder_add_youngest(
! struct Cyc_RgnOrder_RgnPO*po,struct Cyc_Absyn_Tvar*rgn,int resetable);int Cyc_RgnOrder_is_region_resetable(
  struct Cyc_RgnOrder_RgnPO*po,struct Cyc_Absyn_Tvar*r);int Cyc_RgnOrder_effect_outlives(
  struct Cyc_RgnOrder_RgnPO*po,void*eff,void*rgn);int Cyc_RgnOrder_satisfies_constraints(
  struct Cyc_RgnOrder_RgnPO*po,struct Cyc_List_List*constraints,void*default_bound,
--- 865,910 ----
  Cyc_Absyn_array_typ(void*elt_type,struct Cyc_Absyn_Tqual tq,struct Cyc_Absyn_Exp*
  num_elts,struct Cyc_Absyn_Conref*zero_term,struct Cyc_Position_Segment*ztloc);
  struct Cyc_Absyn_Exp*Cyc_Absyn_uint_exp(unsigned int,struct Cyc_Position_Segment*);
! struct _dynforward_ptr Cyc_Absyn_attribute2string(void*);struct Cyc___cycFILE;
! struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
! _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
! int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
! Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{int tag;
! unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{
! int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{int tag;int*f1;};struct Cyc_UIntPtr_sa_struct{
! int tag;unsigned int*f1;};struct Cyc_StringPtr_sa_struct{int tag;struct
! _dynforward_ptr f1;};struct Cyc_DoublePtr_sa_struct{int tag;double*f1;};struct Cyc_FloatPtr_sa_struct{
! int tag;float*f1;};struct Cyc_CharPtr_sa_struct{int tag;struct _dynforward_ptr f1;};
! extern char Cyc_FileCloseError[19];extern char Cyc_FileOpenError[18];struct Cyc_FileOpenError_struct{
! char*tag;struct _dynforward_ptr f1;};struct Cyc_PP_Ppstate;struct Cyc_PP_Out;struct
! Cyc_PP_Doc;struct Cyc_Absynpp_Params{int expand_typedefs: 1;int qvar_to_Cids: 1;int
! add_cyc_prefix: 1;int to_VC: 1;int decls_first: 1;int rewrite_temp_tvars: 1;int
! print_all_tvars: 1;int print_all_kinds: 1;int print_all_effects: 1;int
! print_using_stmts: 1;int print_externC_stmts: 1;int print_full_evars: 1;int
! print_zeroterm: 1;int generate_line_directives: 1;int use_curr_namespace: 1;struct Cyc_List_List*
! curr_namespace;};void Cyc_Absynpp_set_params(struct Cyc_Absynpp_Params*fs);extern
! struct Cyc_Absynpp_Params Cyc_Absynpp_tc_params_r;struct _dynforward_ptr Cyc_Absynpp_typ2string(
! void*);struct _dynforward_ptr Cyc_Absynpp_qvar2string(struct _tuple0*);struct Cyc_Iter_Iter{
! void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,
! void*);struct Cyc_Set_Set;struct Cyc_Set_Set*Cyc_Set_rempty(struct _RegionHandle*r,
! int(*cmp)(void*,void*));struct Cyc_Set_Set*Cyc_Set_rinsert(struct _RegionHandle*r,
! struct Cyc_Set_Set*s,void*elt);int Cyc_Set_member(struct Cyc_Set_Set*s,void*elt);
! extern char Cyc_Set_Absent[11];struct Cyc_Dict_Dict;extern char Cyc_Dict_Present[12];
! extern char Cyc_Dict_Absent[11];int Cyc_Dict_is_empty(struct Cyc_Dict_Dict*d);int Cyc_Dict_member(
! struct Cyc_Dict_Dict*d,void*k);struct Cyc_Dict_Dict*Cyc_Dict_insert(struct Cyc_Dict_Dict*
! d,void*k,void*v);void*Cyc_Dict_lookup(struct Cyc_Dict_Dict*d,void*k);struct Cyc_Core_Opt*
! Cyc_Dict_lookup_opt(struct Cyc_Dict_Dict*d,void*k);struct Cyc_Dict_Dict*Cyc_Dict_rmap_c(
! struct _RegionHandle*,void*(*f)(void*,void*),void*env,struct Cyc_Dict_Dict*d);
! struct _tuple3{void*f1;void*f2;};struct _tuple3*Cyc_Dict_rchoose(struct
! _RegionHandle*r,struct Cyc_Dict_Dict*d);struct _tuple3*Cyc_Dict_rchoose(struct
! _RegionHandle*,struct Cyc_Dict_Dict*d);struct Cyc_Dict_Dict*Cyc_Dict_rfilter_c(
! struct _RegionHandle*,int(*f)(void*,void*,void*),void*env,struct Cyc_Dict_Dict*d);
! struct Cyc_Iter_Iter Cyc_Dict_make_iter(struct _RegionHandle*rgn,struct Cyc_Dict_Dict*
! d);struct Cyc_RgnOrder_RgnPO;struct Cyc_RgnOrder_RgnPO*Cyc_RgnOrder_initial_fn_po(
! struct Cyc_List_List*tvs,struct Cyc_List_List*po,void*effect,struct Cyc_Absyn_Tvar*
! fst_rgn);struct Cyc_RgnOrder_RgnPO*Cyc_RgnOrder_add_outlives_constraint(struct Cyc_RgnOrder_RgnPO*
! po,void*eff,void*rgn);struct Cyc_RgnOrder_RgnPO*Cyc_RgnOrder_add_youngest(struct
! Cyc_RgnOrder_RgnPO*po,struct Cyc_Absyn_Tvar*rgn,int resetable);int Cyc_RgnOrder_is_region_resetable(
  struct Cyc_RgnOrder_RgnPO*po,struct Cyc_Absyn_Tvar*r);int Cyc_RgnOrder_effect_outlives(
  struct Cyc_RgnOrder_RgnPO*po,void*eff,void*rgn);int Cyc_RgnOrder_satisfies_constraints(
  struct Cyc_RgnOrder_RgnPO*po,struct Cyc_List_List*constraints,void*default_bound,
diff -rbBcN --exclude=CVS i686-unknown-linux/src/tcdecl.c powerpc-apple-rhapsody/src/tcdecl.c
*** i686-unknown-linux/src/tcdecl.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/tcdecl.c	Thu Jun 27 17:35:22 2002
***************
*** 653,661 ****
  #define _cycalloc_atomic(n) _profile_GC_malloc_atomic(n,__FILE__ ":" __FUNCTION__,__LINE__)
  #endif
  #endif
!  typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
  struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
--- 653,659 ----
  #define _cycalloc_atomic(n) _profile_GC_malloc_atomic(n,__FILE__ ":" __FUNCTION__,__LINE__)
  #endif
  #endif
!  struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
  struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/tcenv.c powerpc-apple-rhapsody/src/tcenv.c
*** i686-unknown-linux/src/tcenv.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/tcenv.c	Thu Jun 27 17:35:20 2002
***************
*** 658,666 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;
  struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
  int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
--- 658,664 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;
  struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{int tag;struct
  _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;};struct Cyc_Double_pa_struct{
  int tag;double f1;};struct Cyc_LongDouble_pa_struct{int tag;long double f1;};struct
diff -rbBcN --exclude=CVS i686-unknown-linux/src/tcexp.c powerpc-apple-rhapsody/src/tcexp.c
*** i686-unknown-linux/src/tcexp.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/tcexp.c	Thu Jun 27 17:35:20 2002
***************
*** 886,897 ****
  Cyc_Absyn_lookup_field(struct Cyc_List_List*,struct _dynforward_ptr*);struct Cyc_Absyn_Aggrfield*
  Cyc_Absyn_lookup_decl_field(struct Cyc_Absyn_Aggrdecl*,struct _dynforward_ptr*);
  struct Cyc_Absyn_Aggrdecl*Cyc_Absyn_get_known_aggrdecl(void*info);int Cyc_strcmp(
! struct _dynforward_ptr s1,struct _dynforward_ptr s2);typedef struct{int __count;union{
! unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;typedef struct{long
! __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t Cyc_fpos_t;
! struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
--- 886,894 ----
  Cyc_Absyn_lookup_field(struct Cyc_List_List*,struct _dynforward_ptr*);struct Cyc_Absyn_Aggrfield*
  Cyc_Absyn_lookup_decl_field(struct Cyc_Absyn_Aggrdecl*,struct _dynforward_ptr*);
  struct Cyc_Absyn_Aggrdecl*Cyc_Absyn_get_known_aggrdecl(void*info);int Cyc_strcmp(
! struct _dynforward_ptr s1,struct _dynforward_ptr s2);struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct
  Cyc_UShortPtr_sa_struct{int tag;unsigned short*f1;};struct Cyc_IntPtr_sa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/tcgenrep.c powerpc-apple-rhapsody/src/tcgenrep.c
*** i686-unknown-linux/src/tcgenrep.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/tcgenrep.c	Thu Jun 27 17:35:20 2002
***************
*** 675,684 ****
  struct Cyc_List_List*x);struct Cyc_List_List*Cyc_List_tabulate(int n,void*(*f)(int));
  struct Cyc_List_List*Cyc_List_filter(int(*f)(void*),struct Cyc_List_List*x);struct
  Cyc_Iter_Iter{void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct
! Cyc_Iter_Iter,void*);typedef struct{int __count;union{unsigned int __wch;char __wchb[
! 4];}__value;}Cyc___mbstate_t;typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;
! typedef Cyc__G_fpos_t Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
--- 675,682 ----
  struct Cyc_List_List*x);struct Cyc_List_List*Cyc_List_tabulate(int n,void*(*f)(int));
  struct Cyc_List_List*Cyc_List_filter(int(*f)(void*),struct Cyc_List_List*x);struct
  Cyc_Iter_Iter{void*env;int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct
! Cyc_Iter_Iter,void*);struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct
! Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
  int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
***************
*** 697,703 ****
  d);struct _tuple1{void*f1;void*f2;};struct _tuple1*Cyc_Dict_rchoose(struct
  _RegionHandle*r,struct Cyc_Dict_Dict*d);struct _tuple1*Cyc_Dict_rchoose(struct
  _RegionHandle*,struct Cyc_Dict_Dict*d);struct Cyc_Dict_Dict*Cyc_Dict_delete(struct
! Cyc_Dict_Dict*,void*);unsigned int Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(
  struct _dynforward_ptr s1,struct _dynforward_ptr s2);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_strdup(
  struct _dynforward_ptr src);struct Cyc_Hashtable_Table;struct Cyc_Hashtable_Table*
--- 695,701 ----
  d);struct _tuple1{void*f1;void*f2;};struct _tuple1*Cyc_Dict_rchoose(struct
  _RegionHandle*r,struct Cyc_Dict_Dict*d);struct _tuple1*Cyc_Dict_rchoose(struct
  _RegionHandle*,struct Cyc_Dict_Dict*d);struct Cyc_Dict_Dict*Cyc_Dict_delete(struct
! Cyc_Dict_Dict*,void*);unsigned long Cyc_strlen(struct _dynforward_ptr s);int Cyc_strcmp(
  struct _dynforward_ptr s1,struct _dynforward_ptr s2);struct _dynforward_ptr Cyc_strconcat(
  struct _dynforward_ptr,struct _dynforward_ptr);struct _dynforward_ptr Cyc_strdup(
  struct _dynforward_ptr src);struct Cyc_Hashtable_Table;struct Cyc_Hashtable_Table*
***************
*** 721,734 ****
  int tag;struct _dynforward_ptr f1;struct _dynforward_ptr f2;};struct Cyc_Typerep_Union_struct{
  int tag;struct _dynforward_ptr*f1;int f2;struct _dynforward_ptr f3;};struct Cyc_Typerep_Enum_struct{
  int tag;struct _dynforward_ptr*f1;int f2;struct _dynforward_ptr f3;};unsigned int Cyc_Typerep_size_type(
! void*rep);struct Cyc_timespec{long tv_sec;long tv_nsec;};struct Cyc_tm{int tm_sec;int
  tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int
! tm_isdst;long tm_gmtoff;const char*tm_zone;};struct Cyc_itimerspec{struct Cyc_timespec
! it_interval;struct Cyc_timespec it_value;};struct Cyc_Absyn_Rel_n_struct{int tag;
! struct Cyc_List_List*f1;};struct Cyc_Absyn_Abs_n_struct{int tag;struct Cyc_List_List*
! f1;};struct _tuple6{void*f1;struct _dynforward_ptr*f2;};struct Cyc_Absyn_Conref;
! struct Cyc_Absyn_Tqual{int print_const;int q_volatile;int q_restrict;int real_const;
! struct Cyc_Position_Segment*loc;};struct Cyc_Absyn_Conref{void*v;};struct Cyc_Absyn_Eq_constr_struct{
  int tag;void*f1;};struct Cyc_Absyn_Forward_constr_struct{int tag;struct Cyc_Absyn_Conref*
  f1;};struct Cyc_Absyn_Eq_kb_struct{int tag;void*f1;};struct Cyc_Absyn_Unknown_kb_struct{
  int tag;struct Cyc_Core_Opt*f1;};struct Cyc_Absyn_Less_kb_struct{int tag;struct Cyc_Core_Opt*
--- 719,731 ----
  int tag;struct _dynforward_ptr f1;struct _dynforward_ptr f2;};struct Cyc_Typerep_Union_struct{
  int tag;struct _dynforward_ptr*f1;int f2;struct _dynforward_ptr f3;};struct Cyc_Typerep_Enum_struct{
  int tag;struct _dynforward_ptr*f1;int f2;struct _dynforward_ptr f3;};unsigned int Cyc_Typerep_size_type(
! void*rep);struct Cyc_timespec{long tv_sec;int tv_nsec;};struct Cyc_tm{int tm_sec;int
  tm_min;int tm_hour;int tm_mday;int tm_mon;int tm_year;int tm_wday;int tm_yday;int
! tm_isdst;long tm_gmtoff;char*tm_zone;};struct Cyc_Absyn_Rel_n_struct{int tag;struct
! Cyc_List_List*f1;};struct Cyc_Absyn_Abs_n_struct{int tag;struct Cyc_List_List*f1;};
! struct _tuple6{void*f1;struct _dynforward_ptr*f2;};struct Cyc_Absyn_Conref;struct
! Cyc_Absyn_Tqual{int print_const;int q_volatile;int q_restrict;int real_const;struct
! Cyc_Position_Segment*loc;};struct Cyc_Absyn_Conref{void*v;};struct Cyc_Absyn_Eq_constr_struct{
  int tag;void*f1;};struct Cyc_Absyn_Forward_constr_struct{int tag;struct Cyc_Absyn_Conref*
  f1;};struct Cyc_Absyn_Eq_kb_struct{int tag;void*f1;};struct Cyc_Absyn_Unknown_kb_struct{
  int tag;struct Cyc_Core_Opt*f1;};struct Cyc_Absyn_Less_kb_struct{int tag;struct Cyc_Core_Opt*
diff -rbBcN --exclude=CVS i686-unknown-linux/src/tcpat.c powerpc-apple-rhapsody/src/tcpat.c
*** i686-unknown-linux/src/tcpat.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/tcpat.c	Thu Jun 27 17:35:20 2002
***************
*** 675,683 ****
  x,struct Cyc_List_List*y);struct Cyc_List_List*Cyc_List_rtabulate_c(struct
  _RegionHandle*r,int n,void*(*f)(void*,int),void*env);struct Cyc_Iter_Iter{void*env;
  int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,void*);
! typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
--- 675,681 ----
  x,struct Cyc_List_List*y);struct Cyc_List_List*Cyc_List_rtabulate_c(struct
  _RegionHandle*r,int n,void*(*f)(void*,int),void*env);struct Cyc_Iter_Iter{void*env;
  int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,void*);
! struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/tcstmt.c powerpc-apple-rhapsody/src/tcstmt.c
*** i686-unknown-linux/src/tcstmt.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/tcstmt.c	Thu Jun 27 17:35:20 2002
***************
*** 859,870 ****
  ztloc);struct Cyc_Absyn_Exp*Cyc_Absyn_uint_exp(unsigned int,struct Cyc_Position_Segment*);
  struct Cyc_Absyn_Stmt*Cyc_Absyn_new_stmt(void*s,struct Cyc_Position_Segment*loc);
  struct Cyc_Absyn_Stmt*Cyc_Absyn_skip_stmt(struct Cyc_Position_Segment*loc);struct
! _dynforward_ptr Cyc_Absyn_attribute2string(void*);typedef struct{int __count;union{
! unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;typedef struct{long
! __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t Cyc_fpos_t;
! struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{
--- 859,867 ----
  ztloc);struct Cyc_Absyn_Exp*Cyc_Absyn_uint_exp(unsigned int,struct Cyc_Position_Segment*);
  struct Cyc_Absyn_Stmt*Cyc_Absyn_new_stmt(void*s,struct Cyc_Position_Segment*loc);
  struct Cyc_Absyn_Stmt*Cyc_Absyn_skip_stmt(struct Cyc_Position_Segment*loc);struct
! _dynforward_ptr Cyc_Absyn_attribute2string(void*);struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);struct Cyc_ShortPtr_sa_struct{int tag;short*f1;};struct Cyc_UShortPtr_sa_struct{
diff -rbBcN --exclude=CVS i686-unknown-linux/src/tcutil.c powerpc-apple-rhapsody/src/tcutil.c
*** i686-unknown-linux/src/tcutil.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/tcutil.c	Thu Jun 27 17:35:20 2002
***************
*** 659,670 ****
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;typedef struct{
! int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fflush(struct Cyc___cycFILE*);int Cyc_fprintf(struct
--- 659,668 ----
  _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;struct Cyc___cycFILE;
! extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fflush(struct Cyc___cycFILE*);int Cyc_fprintf(struct
***************
*** 957,963 ****
  struct Cyc_Position_Segment*,struct _tuple1*);struct Cyc_Absyn_Typedefdecl*Cyc_Tcenv_lookup_typedefdecl(
  struct Cyc_Tcenv_Tenv*,struct Cyc_Position_Segment*,struct _tuple1*);struct Cyc_List_List*
  Cyc_Tcenv_lookup_type_vars(struct Cyc_Tcenv_Tenv*);int Cyc_Tcenv_region_outlives(
! struct Cyc_Tcenv_Tenv*,void*r1,void*r2);unsigned int Cyc_strlen(struct
  _dynforward_ptr s);int Cyc_strcmp(struct _dynforward_ptr s1,struct _dynforward_ptr s2);
  int Cyc_strptrcmp(struct _dynforward_ptr*s1,struct _dynforward_ptr*s2);struct
  _dynforward_ptr Cyc_strconcat(struct _dynforward_ptr,struct _dynforward_ptr);struct
--- 955,961 ----
  struct Cyc_Position_Segment*,struct _tuple1*);struct Cyc_Absyn_Typedefdecl*Cyc_Tcenv_lookup_typedefdecl(
  struct Cyc_Tcenv_Tenv*,struct Cyc_Position_Segment*,struct _tuple1*);struct Cyc_List_List*
  Cyc_Tcenv_lookup_type_vars(struct Cyc_Tcenv_Tenv*);int Cyc_Tcenv_region_outlives(
! struct Cyc_Tcenv_Tenv*,void*r1,void*r2);unsigned long Cyc_strlen(struct
  _dynforward_ptr s);int Cyc_strcmp(struct _dynforward_ptr s1,struct _dynforward_ptr s2);
  int Cyc_strptrcmp(struct _dynforward_ptr*s1,struct _dynforward_ptr*s2);struct
  _dynforward_ptr Cyc_strconcat(struct _dynforward_ptr,struct _dynforward_ptr);struct
diff -rbBcN --exclude=CVS i686-unknown-linux/src/toc.c powerpc-apple-rhapsody/src/toc.c
*** i686-unknown-linux/src/toc.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/toc.c	Thu Jun 27 17:35:20 2002
***************
*** 658,669 ****
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;typedef struct{
! int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;
! struct Cyc_String_pa_struct{int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{
! int tag;unsigned long f1;};struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fflush(struct Cyc___cycFILE*);int Cyc_fprintf(struct
--- 658,667 ----
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Impossible[15];struct Cyc_Core_Impossible_struct{
  char*tag;struct _dynforward_ptr f1;};extern char Cyc_Core_Not_found[14];extern char
  Cyc_Core_Unreachable[16];struct Cyc_Core_Unreachable_struct{char*tag;struct
! _dynforward_ptr f1;};extern struct _RegionHandle*Cyc_Core_heap_region;struct Cyc___cycFILE;
! extern struct Cyc___cycFILE*Cyc_stderr;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
! int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
! };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
  int tag;unsigned long*f1;};struct _dynforward_ptr Cyc_aprintf(struct _dynforward_ptr,
  struct _dynforward_ptr);int Cyc_fflush(struct Cyc___cycFILE*);int Cyc_fprintf(struct
diff -rbBcN --exclude=CVS i686-unknown-linux/src/tovc.c powerpc-apple-rhapsody/src/tovc.c
*** i686-unknown-linux/src/tovc.c	Thu Jun 27 17:34:22 2002
--- powerpc-apple-rhapsody/src/tovc.c	Thu Jun 27 17:35:22 2002
***************
*** 666,674 ****
  struct Cyc_List_List*x);struct Cyc_List_List*Cyc_List_append(struct Cyc_List_List*x,
  struct Cyc_List_List*y);extern char Cyc_List_Nth[8];struct Cyc_Iter_Iter{void*env;
  int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,void*);
! typedef struct{int __count;union{unsigned int __wch;char __wchb[4];}__value;}Cyc___mbstate_t;
! typedef struct{long __pos;Cyc___mbstate_t __state;}Cyc__G_fpos_t;typedef Cyc__G_fpos_t
! Cyc_fpos_t;struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
--- 666,672 ----
  struct Cyc_List_List*x);struct Cyc_List_List*Cyc_List_append(struct Cyc_List_List*x,
  struct Cyc_List_List*y);extern char Cyc_List_Nth[8];struct Cyc_Iter_Iter{void*env;
  int(*next)(void*env,void*dest);};int Cyc_Iter_next(struct Cyc_Iter_Iter,void*);
! struct Cyc___cycFILE;struct Cyc_Cstdio___abstractFILE;struct Cyc_String_pa_struct{
  int tag;struct _dynforward_ptr f1;};struct Cyc_Int_pa_struct{int tag;unsigned long f1;
  };struct Cyc_Double_pa_struct{int tag;double f1;};struct Cyc_LongDouble_pa_struct{
  int tag;long double f1;};struct Cyc_ShortPtr_pa_struct{int tag;short*f1;};struct Cyc_IntPtr_pa_struct{
