diff -rbBcN --exclude=CVS i686-unknown-linux/lib/execinfo.c i386-unknown-openbsd2.8/lib/execinfo.c
*** i686-unknown-linux/lib/execinfo.c	Fri Aug 31 16:57:09 2001
--- i386-unknown-openbsd2.8/lib/execinfo.c	Wed Sep  5 15:53:16 2001
***************
*** 11,105 ****
  extern struct _tagged_arr wrap_Cstring_as_string( unsigned char*, unsigned int);
  extern struct _tagged_arr ntCsl_to_ntsl( unsigned char**); int Cyc_Execinfo_backtrace(
  struct _tagged_arr, int); int Cyc_Execinfo_bt(); struct Cyc_Std___sFILE; extern
! struct Cyc_Std___sFILE* Cyc_Std_stdout; extern int Cyc_Std_fclose( struct Cyc_Std___sFILE*);
! extern int Cyc_Std_fflush( struct Cyc_Std___sFILE*); extern int Cyc_Std_getc(
! struct Cyc_Std___sFILE* __stream); extern int Cyc_Std_putc( int __c, struct Cyc_Std___sFILE*
! __stream); extern struct Cyc_Std___sFILE* Cyc_Std_fdopen( int __fd, struct
! _tagged_arr __modes); extern unsigned char Cyc_Std_FileCloseError[ 19u]; extern
! unsigned char Cyc_Std_FileOpenError[ 18u]; struct Cyc_Std_FileOpenError_struct{
! unsigned char* tag; struct _tagged_arr f1; } ; static const int Cyc_Std_String_pa=
! 0; struct Cyc_Std_String_pa_struct{ int tag; struct _tagged_arr f1; } ; static
! const int Cyc_Std_Int_pa= 1; struct Cyc_Std_Int_pa_struct{ int tag; unsigned int
! f1; } ; static const int Cyc_Std_Double_pa= 2; struct Cyc_Std_Double_pa_struct{
! int tag; double f1; } ; static const int Cyc_Std_ShortPtr_pa= 3; struct Cyc_Std_ShortPtr_pa_struct{
! int tag; short* f1; } ; static const int Cyc_Std_IntPtr_pa= 4; struct Cyc_Std_IntPtr_pa_struct{
! int tag; unsigned int* f1; } ; extern int Cyc_Std_fprintf( struct Cyc_Std___sFILE*,
! struct _tagged_arr fmt, struct _tagged_arr); extern int Cyc_Std_printf( struct
! _tagged_arr fmt, struct _tagged_arr); extern struct _tagged_arr Cyc_Std_aprintf(
! struct _tagged_arr fmt, struct _tagged_arr); static const int Cyc_Std_ShortPtr_sa=
! 0; struct Cyc_Std_ShortPtr_sa_struct{ int tag; short* f1; } ; static const int
! Cyc_Std_UShortPtr_sa= 1; struct Cyc_Std_UShortPtr_sa_struct{ int tag;
! unsigned short* f1; } ; static const int Cyc_Std_IntPtr_sa= 2; struct Cyc_Std_IntPtr_sa_struct{
! int tag; int* f1; } ; static const int Cyc_Std_UIntPtr_sa= 3; struct Cyc_Std_UIntPtr_sa_struct{
! int tag; unsigned int* f1; } ; static const int Cyc_Std_StringPtr_sa= 4; struct
! Cyc_Std_StringPtr_sa_struct{ int tag; struct _tagged_arr f1; } ; static const
! int Cyc_Std_DoublePtr_sa= 5; struct Cyc_Std_DoublePtr_sa_struct{ int tag; double*
! f1; } ; static const int Cyc_Std_FloatPtr_sa= 6; struct Cyc_Std_FloatPtr_sa_struct{
  int tag; float* f1; } ; extern int wait( int* status); extern int waitpid( int
  pid, int* status, int options); void(* Cyc_Std_signal( int sig, void(* func)(
! int)))( int); extern int raise( int sig); extern int kill( int, int); struct Cyc_Std_timeval{
! int tv_sec; int tv_usec; } ; struct Cyc_Std_option{ struct _tagged_arr name; int
! has_arg; int* flag; int val; } ; extern unsigned int alarm( unsigned int seconds);
! extern int close( int); extern int getpid(); extern int getppid(); extern int
! fork(); extern int fchdir( int); extern int dup( int); extern int dup2( int, int);
! extern unsigned int getuid(); extern int setuid( unsigned int uid); extern
! unsigned int geteuid(); extern int seteuid( unsigned int euid); extern
! unsigned int getgid(); extern int setgid( unsigned int gid); extern unsigned int
! getegid(); extern int setegid( unsigned int egid); extern int pipe( int* filedes);
! extern int lseek( int filedes, int offset, int whence); int Cyc_Std_chdir(
! struct _tagged_arr); struct _tagged_arr Cyc_Std_getcwd( struct _tagged_arr buf,
! unsigned int size); int Cyc_Std_execl( struct _tagged_arr path, struct
! _tagged_arr arg0, struct _tagged_arr argv); int Cyc_Std_execlp( struct
! _tagged_arr file, struct _tagged_arr arg0, struct _tagged_arr argv); int Cyc_Std_execve(
! struct _tagged_arr filename, struct _tagged_arr argv, struct _tagged_arr envp);
! int Cyc_Std_read( int fd, struct _tagged_arr buf, unsigned int count); int Cyc_Std_write(
! int fd, struct _tagged_arr buf, unsigned int count); int Cyc_Std_unlink( struct
! _tagged_arr pathname); extern int backtrace( int*, int); int Cyc_Execinfo_backtrace(
! struct _tagged_arr array, int size){ if( size >  _get_arr_size( array, sizeof(
! int))){( int) _throw(( void*)({ struct Cyc_Core_Failure_struct* _temp0=( struct
! Cyc_Core_Failure_struct*) _cycalloc( sizeof( struct Cyc_Core_Failure_struct));
  _temp0[ 0]=({ struct Cyc_Core_Failure_struct _temp1; _temp1.tag= Cyc_Core_Failure;
! _temp1.f1= _tag_arr("backtrace: size > array.size", sizeof( unsigned char), 29u);
! _temp1;}); _temp0;}));} return backtrace(( int*) _check_null( _untag_arr( array,
! sizeof( int), 1u)), size);} int Cyc_Execinfo_bt(){ int bt[ 20u];{ unsigned int
! _temp10= 20u; unsigned int i; for( i= 0; i <  _temp10; i ++){ bt[ i]= 0;}}{ int
! tochild[ 2u]={ 0, 0}; int fromchild[ 2u]={ 0, 0}; int pid; int self_pid; if(
! pipe( tochild)? 1: pipe( fromchild)){ return 1;} self_pid= getpid(); if(( pid=
! fork()) ==  0){ if( dup2( tochild[ _check_known_subscript_notnull( 2u, 0)], 0)
! ==  - 1? 1: dup2( fromchild[ _check_known_subscript_notnull( 2u, 1)], 1) ==  - 1){
! return 1;}({ struct _tagged_arr _temp2[ 4u]; _temp2[ 3u]=( struct _tagged_arr)
! _tag_arr( 0u, 0u, 0u); _temp2[ 2u]=( struct _tagged_arr)({ struct Cyc_Std_Int_pa_struct
! _temp4; _temp4.tag= Cyc_Std_Int_pa; _temp4.f1=( int)(( unsigned int) self_pid);{
! void* _temp3[ 1u]={& _temp4}; Cyc_Std_aprintf( _tag_arr("/proc/%d/exe", sizeof(
! unsigned char), 13u), _tag_arr( _temp3, sizeof( void*), 1u));}}); _temp2[ 1u]=
! _tag_arr("-e", sizeof( unsigned char), 3u); _temp2[ 0u]= _tag_arr("--functions",
! sizeof( unsigned char), 12u); Cyc_Std_execlp( _tag_arr("addr2line", sizeof(
! unsigned char), 10u), _tag_arr("addr2line", sizeof( unsigned char), 10u),
! _tag_arr( _temp2, sizeof( struct _tagged_arr), 4u));}); return 1;} else{ if( pid
! <  0){ close( tochild[ _check_known_subscript_notnull( 2u, 0)]); close( tochild[
! _check_known_subscript_notnull( 2u, 1)]); close( fromchild[
! _check_known_subscript_notnull( 2u, 0)]); close( fromchild[
! _check_known_subscript_notnull( 2u, 1)]); return 1;}}{ struct Cyc_Std___sFILE* w=({
! struct Cyc_Std___sFILE* f= Cyc_Std_fdopen( tochild[
! _check_known_subscript_notnull( 2u, 1)], _tag_arr("w", sizeof( unsigned char), 2u));
! if( !(( unsigned int) f)){ return 1;}( struct Cyc_Std___sFILE*) _check_null( f);});
! struct Cyc_Std___sFILE* r=({ struct Cyc_Std___sFILE* f= Cyc_Std_fdopen(
! fromchild[ _check_known_subscript_notnull( 2u, 0)], _tag_arr("r", sizeof(
! unsigned char), 2u)); if( !(( unsigned int) f)){ Cyc_Std_fclose( w); return 1;}(
! struct Cyc_Std___sFILE*) _check_null( f);}); int n= Cyc_Execinfo_backtrace(
! _tag_arr( bt, sizeof( int), 20u),( int) 20u);{ int c= 0; for( 0; c <  n; c ++){({
! struct Cyc_Std_Int_pa_struct _temp6; _temp6.tag= Cyc_Std_Int_pa; _temp6.f1=(
! unsigned int) bt[ _check_known_subscript_notnull( 20u, c)];{ void* _temp5[ 1u]={&
! _temp6}; Cyc_Std_fprintf( w, _tag_arr("%#x\n", sizeof( unsigned char), 5u),
! _tag_arr( _temp5, sizeof( void*), 1u));}});}} Cyc_Std_fflush(( struct Cyc_Std___sFILE*)
! w);({ void* _temp7[ 0u]={}; Cyc_Std_printf( _tag_arr("Backtrace:\n  Function          Location\n  ----------------  --------------------------------\n",
! sizeof( unsigned char), 94u), _tag_arr( _temp7, sizeof( void*), 0u));});{ int c=
! 0; for( 0; c <  n; c ++){ int d; int pos= 0;({ void* _temp8[ 0u]={}; Cyc_Std_printf(
! _tag_arr("  ", sizeof( unsigned char), 3u), _tag_arr( _temp8, sizeof( void*), 0u));});
! while(( d= Cyc_Std_getc( r)) != '\n') {( Cyc_Std_putc( d, Cyc_Std_stdout), pos
! ++);} while( pos ++ <  16) { Cyc_Std_putc(( int)' ', Cyc_Std_stdout);}({ void*
! _temp9[ 0u]={}; Cyc_Std_printf( _tag_arr("  ", sizeof( unsigned char), 3u),
! _tag_arr( _temp9, sizeof( void*), 0u));}); while(( d= Cyc_Std_getc( r)) != '\n') {
! Cyc_Std_putc( d, Cyc_Std_stdout);} Cyc_Std_putc(( int)'\n', Cyc_Std_stdout);}}
! Cyc_Std_fclose( r); Cyc_Std_fclose( w); kill( pid, 15); waitpid( pid, 0, 0);
! return 0;}}}
--- 11,38 ----
  extern struct _tagged_arr wrap_Cstring_as_string( unsigned char*, unsigned int);
  extern struct _tagged_arr ntCsl_to_ntsl( unsigned char**); int Cyc_Execinfo_backtrace(
  struct _tagged_arr, int); int Cyc_Execinfo_bt(); struct Cyc_Std___sFILE; extern
! unsigned char Cyc_Std_FileCloseError[ 19u]; extern unsigned char Cyc_Std_FileOpenError[
! 18u]; struct Cyc_Std_FileOpenError_struct{ unsigned char* tag; struct
! _tagged_arr f1; } ; static const int Cyc_Std_String_pa= 0; struct Cyc_Std_String_pa_struct{
! int tag; struct _tagged_arr f1; } ; static const int Cyc_Std_Int_pa= 1; struct
! Cyc_Std_Int_pa_struct{ int tag; unsigned int f1; } ; static const int Cyc_Std_Double_pa=
! 2; struct Cyc_Std_Double_pa_struct{ int tag; double f1; } ; static const int Cyc_Std_ShortPtr_pa=
! 3; struct Cyc_Std_ShortPtr_pa_struct{ int tag; short* f1; } ; static const int
! Cyc_Std_IntPtr_pa= 4; struct Cyc_Std_IntPtr_pa_struct{ int tag; unsigned int* f1;
! } ; static const int Cyc_Std_ShortPtr_sa= 0; struct Cyc_Std_ShortPtr_sa_struct{
! int tag; short* f1; } ; static const int Cyc_Std_UShortPtr_sa= 1; struct Cyc_Std_UShortPtr_sa_struct{
! int tag; unsigned short* f1; } ; static const int Cyc_Std_IntPtr_sa= 2; struct
! Cyc_Std_IntPtr_sa_struct{ int tag; int* f1; } ; static const int Cyc_Std_UIntPtr_sa=
! 3; struct Cyc_Std_UIntPtr_sa_struct{ int tag; unsigned int* f1; } ; static const
! int Cyc_Std_StringPtr_sa= 4; struct Cyc_Std_StringPtr_sa_struct{ int tag; struct
! _tagged_arr f1; } ; static const int Cyc_Std_DoublePtr_sa= 5; struct Cyc_Std_DoublePtr_sa_struct{
! int tag; double* f1; } ; static const int Cyc_Std_FloatPtr_sa= 6; struct Cyc_Std_FloatPtr_sa_struct{
  int tag; float* f1; } ; extern int wait( int* status); extern int waitpid( int
  pid, int* status, int options); void(* Cyc_Std_signal( int sig, void(* func)(
! int)))( int); extern int raise( int sig); extern int kill( int, int); int Cyc_Execinfo_backtrace(
! struct _tagged_arr array, int size){( int) _throw(( void*)({ struct Cyc_Core_Failure_struct*
! _temp0=( struct Cyc_Core_Failure_struct*) _cycalloc( sizeof( struct Cyc_Core_Failure_struct));
  _temp0[ 0]=({ struct Cyc_Core_Failure_struct _temp1; _temp1.tag= Cyc_Core_Failure;
! _temp1.f1= _tag_arr("backtrace: unsupported except under Linux", sizeof(
! unsigned char), 42u); _temp1;}); _temp0;})); return 0;} int Cyc_Execinfo_bt(){
! return 1;}
diff -rbBcN --exclude=CVS i686-unknown-linux/lib/set.c i386-unknown-openbsd2.8/lib/set.c
*** i686-unknown-linux/lib/set.c	Wed Sep  5 15:53:18 2001
--- i386-unknown-openbsd2.8/lib/set.c	Wed Sep  5 15:53:16 2001
***************
*** 19,30 ****
  x); extern struct Cyc_List_List* Cyc_List_merge_sort( int(* less_eq)( void*,
  void*), struct Cyc_List_List* x); extern unsigned char Cyc_List_Nth[ 8u]; struct
  Cyc_Set_Set; extern struct Cyc_Set_Set* Cyc_Set_empty( int(* comp)( void*, void*));
! extern struct Cyc_Set_Set* Cyc_Set_rempty( struct _RegionHandle* r, int(* comp)(
  void*, void*)); extern struct Cyc_Set_Set* Cyc_Set_singleton( int(* comp)( void*,
  void*), void* x); extern struct Cyc_Set_Set* Cyc_Set_from_list( int(* comp)(
! void*, void*), struct Cyc_List_List* l); extern struct Cyc_Set_Set* Cyc_Set_insert(
  struct Cyc_Set_Set* s, void* elt); extern struct Cyc_Set_Set* Cyc_Set_rinsert(
! struct _RegionHandle* r, struct Cyc_Set_Set* s, void* elt); extern struct Cyc_Set_Set*
  Cyc_Set_union_two( struct Cyc_Set_Set* s1, struct Cyc_Set_Set* s2); extern
  struct Cyc_Set_Set* Cyc_Set_intersect( struct Cyc_Set_Set* s1, struct Cyc_Set_Set*
  s2); extern struct Cyc_Set_Set* Cyc_Set_diff( struct Cyc_Set_Set* s1, struct Cyc_Set_Set*
--- 19,30 ----
  x); extern struct Cyc_List_List* Cyc_List_merge_sort( int(* less_eq)( void*,
  void*), struct Cyc_List_List* x); extern unsigned char Cyc_List_Nth[ 8u]; struct
  Cyc_Set_Set; extern struct Cyc_Set_Set* Cyc_Set_empty( int(* comp)( void*, void*));
! extern struct Cyc_Set_Set* Cyc_Set_rempty( struct _RegionHandle* rgn, int(* comp)(
  void*, void*)); extern struct Cyc_Set_Set* Cyc_Set_singleton( int(* comp)( void*,
  void*), void* x); extern struct Cyc_Set_Set* Cyc_Set_from_list( int(* comp)(
! void*, void*), struct Cyc_List_List* x); extern struct Cyc_Set_Set* Cyc_Set_insert(
  struct Cyc_Set_Set* s, void* elt); extern struct Cyc_Set_Set* Cyc_Set_rinsert(
! struct _RegionHandle* rgn, struct Cyc_Set_Set* s, void* elt); extern struct Cyc_Set_Set*
  Cyc_Set_union_two( struct Cyc_Set_Set* s1, struct Cyc_Set_Set* s2); extern
  struct Cyc_Set_Set* Cyc_Set_intersect( struct Cyc_Set_Set* s1, struct Cyc_Set_Set*
  s2); extern struct Cyc_Set_Set* Cyc_Set_diff( struct Cyc_Set_Set* s1, struct Cyc_Set_Set*
diff -rbBcN --exclude=CVS i686-unknown-linux/src/install_path.c i386-unknown-openbsd2.8/src/install_path.c
*** i686-unknown-linux/src/install_path.c	Tue Sep  4 16:33:44 2001
--- i386-unknown-openbsd2.8/src/install_path.c	Wed Dec 31 19:00:00 1969
***************
*** 1,3 ****
- char *Cdef_inc_path = "/usr/include/cyclone";
- char *Carch = "i686-unknown-linux";
- char *Cdef_lib_path = "/usr/local/lib/cyclone";
--- 0 ----
diff -rbBcN --exclude=CVS i686-unknown-linux/src/tovc.c i386-unknown-openbsd2.8/src/tovc.c
*** i686-unknown-linux/src/tovc.c	Wed Sep  5 15:53:17 2001
--- i386-unknown-openbsd2.8/src/tovc.c	Wed Sep  5 15:53:16 2001
***************
*** 375,407 ****
  struct _tuple0*, void*, struct Cyc_Absyn_Exp* init, struct Cyc_Absyn_Stmt*,
  struct Cyc_Position_Segment* loc); extern struct Cyc_Absyn_Decl* Cyc_Absyn_new_decl(
  void* r, struct Cyc_Position_Segment* loc); struct Cyc_Set_Set; extern struct
! Cyc_Set_Set* Cyc_Set_rempty( struct _RegionHandle* r, int(* comp)( void*, void*));
! extern struct Cyc_Set_Set* Cyc_Set_rinsert( struct _RegionHandle* r, struct Cyc_Set_Set*
! s, void* elt); extern struct Cyc_List_List* Cyc_Set_elements( struct Cyc_Set_Set*
! s); extern unsigned char Cyc_Set_Absent[ 11u]; static const int Cyc_Tcenv_VarRes=
! 0; struct Cyc_Tcenv_VarRes_struct{ int tag; void* f1; } ; static const int Cyc_Tcenv_StructRes=
! 1; struct Cyc_Tcenv_StructRes_struct{ int tag; struct Cyc_Absyn_Structdecl* f1;
! } ; static const int Cyc_Tcenv_TunionRes= 2; struct Cyc_Tcenv_TunionRes_struct{
! int tag; struct Cyc_Absyn_Tuniondecl* f1; struct Cyc_Absyn_Tunionfield* f2; } ;
! static const int Cyc_Tcenv_EnumRes= 3; struct Cyc_Tcenv_EnumRes_struct{ int tag;
! struct Cyc_Absyn_Enumdecl* f1; struct Cyc_Absyn_Enumfield* f2; } ; struct Cyc_Tcenv_Genv{
! struct Cyc_Set_Set* namespaces; struct Cyc_Dict_Dict* structdecls; struct Cyc_Dict_Dict*
! uniondecls; struct Cyc_Dict_Dict* tuniondecls; struct Cyc_Dict_Dict* enumdecls;
! struct Cyc_Dict_Dict* typedefs; struct Cyc_Dict_Dict* ordinaries; struct Cyc_List_List*
! availables; } ; struct Cyc_Tcenv_Fenv; static const int Cyc_Tcenv_NotLoop_j= 0;
! static const int Cyc_Tcenv_CaseEnd_j= 1; static const int Cyc_Tcenv_FnEnd_j= 2;
! static const int Cyc_Tcenv_Stmt_j= 0; struct Cyc_Tcenv_Stmt_j_struct{ int tag;
! struct Cyc_Absyn_Stmt* f1; } ; static const int Cyc_Tcenv_Outermost= 0; struct
! Cyc_Tcenv_Outermost_struct{ int tag; void* f1; } ; static const int Cyc_Tcenv_Frame=
! 1; struct Cyc_Tcenv_Frame_struct{ int tag; void* f1; void* f2; } ; static const
! int Cyc_Tcenv_Hidden= 2; struct Cyc_Tcenv_Hidden_struct{ int tag; void* f1; void*
! f2; } ; struct Cyc_Tcenv_Tenv{ struct Cyc_List_List* ns; struct Cyc_Dict_Dict*
! ae; struct Cyc_Core_Opt* le; } ; extern unsigned char Cyc_Tcutil_TypeErr[ 12u];
! extern void* Cyc_Tcutil_compress( void* t); extern struct _tuple0* Cyc_Toc_temp_var();
! extern struct Cyc_List_List* Cyc_Tovc_tovc( struct Cyc_List_List* decls); struct
! Cyc_Tovc_BoxingEnv{ struct _RegionHandle* rgn; struct Cyc_List_List* all_locals;
! struct Cyc_Dict_Dict* varmap; struct Cyc_List_List* boundvars; struct Cyc_Set_Set**
! freevars; } ; struct Cyc_Tovc_ToExpEnv{ struct _RegionHandle* rgn; struct Cyc_List_List*
  all_locals; struct Cyc_Dict_Dict* varmap; struct Cyc_Absyn_Stmt* encloser;
  struct Cyc_List_List** gen_ds; } ; struct _tuple3{ struct Cyc_List_List* f1;
  struct Cyc_Absyn_Exp* f2; } ; static void Cyc_Tovc_box_free_vars_exp( struct Cyc_Tovc_BoxingEnv
--- 375,408 ----
  struct _tuple0*, void*, struct Cyc_Absyn_Exp* init, struct Cyc_Absyn_Stmt*,
  struct Cyc_Position_Segment* loc); extern struct Cyc_Absyn_Decl* Cyc_Absyn_new_decl(
  void* r, struct Cyc_Position_Segment* loc); struct Cyc_Set_Set; extern struct
! Cyc_Set_Set* Cyc_Set_rempty( struct _RegionHandle* rgn, int(* comp)( void*, void*));
! extern struct Cyc_Set_Set* Cyc_Set_rinsert( struct _RegionHandle* rgn, struct
! Cyc_Set_Set* s, void* elt); extern struct Cyc_List_List* Cyc_Set_elements(
! struct Cyc_Set_Set* s); extern unsigned char Cyc_Set_Absent[ 11u]; static const
! int Cyc_Tcenv_VarRes= 0; struct Cyc_Tcenv_VarRes_struct{ int tag; void* f1; } ;
! static const int Cyc_Tcenv_StructRes= 1; struct Cyc_Tcenv_StructRes_struct{ int
! tag; struct Cyc_Absyn_Structdecl* f1; } ; static const int Cyc_Tcenv_TunionRes=
! 2; struct Cyc_Tcenv_TunionRes_struct{ int tag; struct Cyc_Absyn_Tuniondecl* f1;
! struct Cyc_Absyn_Tunionfield* f2; } ; static const int Cyc_Tcenv_EnumRes= 3;
! struct Cyc_Tcenv_EnumRes_struct{ int tag; struct Cyc_Absyn_Enumdecl* f1; struct
! Cyc_Absyn_Enumfield* f2; } ; struct Cyc_Tcenv_Genv{ struct Cyc_Set_Set*
! namespaces; struct Cyc_Dict_Dict* structdecls; struct Cyc_Dict_Dict* uniondecls;
! struct Cyc_Dict_Dict* tuniondecls; struct Cyc_Dict_Dict* enumdecls; struct Cyc_Dict_Dict*
! typedefs; struct Cyc_Dict_Dict* ordinaries; struct Cyc_List_List* availables; }
! ; struct Cyc_Tcenv_Fenv; static const int Cyc_Tcenv_NotLoop_j= 0; static const
! int Cyc_Tcenv_CaseEnd_j= 1; static const int Cyc_Tcenv_FnEnd_j= 2; static const
! int Cyc_Tcenv_Stmt_j= 0; struct Cyc_Tcenv_Stmt_j_struct{ int tag; struct Cyc_Absyn_Stmt*
! f1; } ; static const int Cyc_Tcenv_Outermost= 0; struct Cyc_Tcenv_Outermost_struct{
! int tag; void* f1; } ; static const int Cyc_Tcenv_Frame= 1; struct Cyc_Tcenv_Frame_struct{
! int tag; void* f1; void* f2; } ; static const int Cyc_Tcenv_Hidden= 2; struct
! Cyc_Tcenv_Hidden_struct{ int tag; void* f1; void* f2; } ; struct Cyc_Tcenv_Tenv{
! struct Cyc_List_List* ns; struct Cyc_Dict_Dict* ae; struct Cyc_Core_Opt* le; } ;
! extern unsigned char Cyc_Tcutil_TypeErr[ 12u]; extern void* Cyc_Tcutil_compress(
! void* t); extern struct _tuple0* Cyc_Toc_temp_var(); extern struct Cyc_List_List*
! Cyc_Tovc_tovc( struct Cyc_List_List* decls); struct Cyc_Tovc_BoxingEnv{ struct
! _RegionHandle* rgn; struct Cyc_List_List* all_locals; struct Cyc_Dict_Dict*
! varmap; struct Cyc_List_List* boundvars; struct Cyc_Set_Set** freevars; } ;
! struct Cyc_Tovc_ToExpEnv{ struct _RegionHandle* rgn; struct Cyc_List_List*
  all_locals; struct Cyc_Dict_Dict* varmap; struct Cyc_Absyn_Stmt* encloser;
  struct Cyc_List_List** gen_ds; } ; struct _tuple3{ struct Cyc_List_List* f1;
  struct Cyc_Absyn_Exp* f2; } ; static void Cyc_Tovc_box_free_vars_exp( struct Cyc_Tovc_BoxingEnv
***************
*** 477,483 ****
  else{ goto _LL104;} _LL104: goto _LL105; _LL103: goto _LL101; _LL105:( void*)( e->r=(
  void*)(( void*)( Cyc_Absyn_deref_exp( Cyc_Absyn_var_exp( _temp99->name, 0), 0))->r));
  goto _LL101; _LL101:;}* env.freevars=(( struct Cyc_Set_Set*(*)( struct
! _RegionHandle* r, struct Cyc_Set_Set* s, struct Cyc_Absyn_Vardecl* elt)) Cyc_Set_rinsert)(
  env.rgn,* env.freevars, _temp99); return;}}( int) _throw(( void*)({ struct Cyc_Core_Impossible_struct*
  _temp106=( struct Cyc_Core_Impossible_struct*) _cycalloc( sizeof( struct Cyc_Core_Impossible_struct));
  _temp106[ 0]=({ struct Cyc_Core_Impossible_struct _temp107; _temp107.tag= Cyc_Core_Impossible;
--- 478,484 ----
  else{ goto _LL104;} _LL104: goto _LL105; _LL103: goto _LL101; _LL105:( void*)( e->r=(
  void*)(( void*)( Cyc_Absyn_deref_exp( Cyc_Absyn_var_exp( _temp99->name, 0), 0))->r));
  goto _LL101; _LL101:;}* env.freevars=(( struct Cyc_Set_Set*(*)( struct
! _RegionHandle* rgn, struct Cyc_Set_Set* s, struct Cyc_Absyn_Vardecl* elt)) Cyc_Set_rinsert)(
  env.rgn,* env.freevars, _temp99); return;}}( int) _throw(( void*)({ struct Cyc_Core_Impossible_struct*
  _temp106=( struct Cyc_Core_Impossible_struct*) _cycalloc( sizeof( struct Cyc_Core_Impossible_struct));
  _temp106[ 0]=({ struct Cyc_Core_Impossible_struct _temp107; _temp107.tag= Cyc_Core_Impossible;
***************
*** 587,593 ****
  _temp201;})); _LL113:;}} struct _tuple4{ struct _tagged_arr* f1; struct Cyc_Absyn_Tqual
  f2; void* f3; } ; static struct Cyc_Absyn_Exp* Cyc_Tovc_stmt_to_fun( struct Cyc_Tovc_ToExpEnv
  env, struct Cyc_Absyn_Stmt* s, void* rettype){ struct Cyc_Set_Set* freevars=((
! struct Cyc_Set_Set*(*)( struct _RegionHandle* r, int(* comp)( struct Cyc_Absyn_Vardecl*,
  struct Cyc_Absyn_Vardecl*))) Cyc_Set_rempty)( env.rgn,( int(*)( struct Cyc_Absyn_Vardecl*,
  struct Cyc_Absyn_Vardecl*)) Cyc_Core_ptrcmp); struct Cyc_Tovc_BoxingEnv _temp203=({
  struct Cyc_Tovc_BoxingEnv _temp222; _temp222.rgn= env.rgn; _temp222.all_locals=
--- 588,594 ----
  _temp201;})); _LL113:;}} struct _tuple4{ struct _tagged_arr* f1; struct Cyc_Absyn_Tqual
  f2; void* f3; } ; static struct Cyc_Absyn_Exp* Cyc_Tovc_stmt_to_fun( struct Cyc_Tovc_ToExpEnv
  env, struct Cyc_Absyn_Stmt* s, void* rettype){ struct Cyc_Set_Set* freevars=((
! struct Cyc_Set_Set*(*)( struct _RegionHandle* rgn, int(* comp)( struct Cyc_Absyn_Vardecl*,
  struct Cyc_Absyn_Vardecl*))) Cyc_Set_rempty)( env.rgn,( int(*)( struct Cyc_Absyn_Vardecl*,
  struct Cyc_Absyn_Vardecl*)) Cyc_Core_ptrcmp); struct Cyc_Tovc_BoxingEnv _temp203=({
  struct Cyc_Tovc_BoxingEnv _temp222; _temp222.rgn= env.rgn; _temp222.all_locals=
