/* Allocation profiler
   Copyright (C) 2001 Greg Morrisett, AT&T
   This file is part of the Cyclone compiler.

   The Cyclone compiler is free software; you can redistribute it
   and/or modify it under the terms of the GNU General Public License
   as published by the Free Software Foundation; either version 2 of
   the License, or (at your option) any later version.

   The Cyclone compiler is distributed in the hope that it will be
   useful, but WITHOUT ANY WARRANTY; without even the implied warranty
   of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with the Cyclone compiler; see the file COPYING. If not,
   write to the Free Software Foundation, Inc., 59 Temple Place -
   Suite 330, Boston, MA 02111-1307, USA. */

#include <core.h>
#include <string.h>
#include "aprof_event.h"

namespace Aprof {
  bool verbose = false;
}

using Aprof;

static void usage(string_t<`H> argv0) __attribute__((noreturn)) {
  fprintf(stderr,"usage: %s [-g] [-d] [-v] [profile]\n  by default, generates an allocation summary for file amon.out\n  -g   generate graph of dynamic memory usage over time\n  -v   verbose (debugging) output\n  -h   show only heap/unique/refcnt regions (graph output only)\n",argv0);
  exit(1);
}

int main(int argc, string_t<`H> ?`H argv) {
  bool do_graph = false;
  bool no_dynamic = false;
  string_t<`H> file;

  int argn = 1;
  while ( argn < argc && argv[argn][0] == '-' )  {
    if ( strcmp( argv[argn], "-?" ) == 0 )
      usage(argv[0]);
    else if ( strcmp( argv[argn], "-g" ) == 0 ) {
      do_graph = true;
    }
    else if ( strcmp( argv[argn], "-h" ) == 0 ) {
      no_dynamic = true;
    }
    else if ( strcmp( argv[argn], "-v" ) == 0 ) {
      verbose = true;
    }
    else
      usage(argv[0]);
    ++argn;
  }
  if ( argn != argc )
    if ( argn == (argc-1) )
      file = argv[argn];
    else
      usage(argv[0]);
  else
    file = "amon.out";

  int ret;
  if (do_graph)
    ret = generate_graph(file,no_dynamic);
  else
    ret = generate_summary(file);
  return ret;
}
