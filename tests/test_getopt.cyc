#include "getopt.h"
#include "core.h"
#include "stdio.h"
using Core;
using Stdio;
using Getopt;

static struct option long_options[]=
{
  {"add", 1, null, 0},
  {"append", 0, null, 0},
  {"delete", 1, null, 0},
  {"verbose", 0, null, 0},
  {"create", 0, null, 0},
  {"file", 1, null, 0},
  {null, 0, null, 0}
};

int
main (int argc, char ??argv)
{
  int c;
  int digit_optind = 0;

  while (1)
    {
      int this_option_optind = optind ? optind : 1;
      int option_index = 0;
      /*
      static struct option long_options[] =
      {
	{"add", 1, null, 0},
	{"append", 0, null, 0},
	{"delete", 1, null, 0},
	{"verbose", 0, null, 0},
	{"create", 0, null, 0},
	{"file", 1, null, 0},
	{null, 0, null, 0}
      };
      */
 
      c = getopt_long (argc, argv, "abc:d:0123456789",
		       long_options, &option_index);
      if (c == EOF)
	break;

      switch (c)
	{
	case 0:
	  printf ("option %s", long_options[option_index].name);
	  if (optarg)
	    printf (" with arg %s", optarg);
	  printf ("\n");
	  break;

	case '0':fallthru;
	case '1':fallthru;
	case '2':fallthru;
	case '3':fallthru;
	case '4':fallthru;
	case '5':fallthru;
	case '6':fallthru;
	case '7':fallthru;
	case '8':fallthru;
	case '9':
	  if (digit_optind != 0 && digit_optind != this_option_optind)
	    printf ("digits occur in two different argv-elements.\n");
	  digit_optind = this_option_optind;
	  printf ("option %c\n", c);
	  break;

	case 'a':
	  printf ("option a\n");
	  break;

	case 'b':
	  printf ("option b\n");
	  break;

	case 'c':
	  printf ("option c with value `%s'\n", optarg);
	  break;

	case 'd':
	  printf ("option d with value `%s'\n", optarg);
	  break;

	case '?':
	  break;

	default:
	  printf ("?? getopt returned character code 0%o ??\n", c);
          break;
	}
    }

  if (optind < argc)
    {
      printf ("non-option ARGV-elements: ");
      while (optind < argc)
	printf ("%s ", argv[optind++]);
      printf ("\n");
    }

  return 0;
}


