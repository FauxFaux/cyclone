/*
 * http://www.bagley.org/~doug/shootout/
 */

#include <stdio.h>
#include <ctype.h>
#include <stdlib.h>
#include <string.h>
#include "simple_hash_cyc.h"
#include "timer.h"

int cmp_hash(struct ht_node @`H const @`H a, struct ht_node @`H const @`H b) {
    int val = (*b)->val - (*a)->val;
    return((val == 0) ? strcmp((*b)->key, (*a)->key) : val);
}

int main() {
    int bufsize = 80;
    char ?buf;
    char c;
    int i = 0;
    struct ht_ht @ht;
    struct ht_node @?sort_array, @?sort_tmp, *node;
    START_TIME
    buf = new { for i < (bufsize + 1) : '\0' };
    ht = ht_create(75000);

    while ((c = getchar()) > 0) {
        if (isalpha(c)) {
            buf[i++] = tolower(c);
	    if (i == bufsize) {
                bufsize *= 2;
                buf = realloc(buf, bufsize + 1);
	    } 
        } else {
	    if (i > 0) {
		buf[i] = '\0';
		++(ht_find_new(ht, buf)->val);
		i = 0;
	    }
        }
    }
    free(buf);

    sort_array = sort_tmp =
      new { for i < ht_count(ht) : new ht_node(NULL,0,NULL) };

    for (node=ht_first(ht); (*sort_tmp++ = node) != 0; node=ht_next(ht)) ;

    qsort(sort_array, ht_count(ht), sizeof(struct ht_node @),
	  cmp_hash);

    for (i=0; i<ht_count(ht); i++)
	printf("%7d\t%s\n", ht_val(sort_array[i]), ht_key(sort_array[i])); 

    ht_destroy(ht);
    END_TIME
    return(0);
}
