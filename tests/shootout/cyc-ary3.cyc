/*
 * http://www.bagley.org/~doug/shootout/
 *
 * this program is modified from:
 *   http://cm.bell-labs.com/cm/cs/who/bwk/interps/pap.html
 * Timing Trials, or, the Trials of Timing: Experiments with Scripting
 * and User-Interface Languages</a> by Brian W. Kernighan and
 * Christopher J. Van Wyk.
 *
 * I added free() to deallocate memory.
 */

#include <core.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "timer.h"

int
main(int argc, char ??argv) {
    unsigned int nval = ((argc == 2) ? atoi(argv[1]) : 1);
    unsigned int i, k;
    let n<`n> = nval;
    START_TIME
    region r; {
      int @{valueof(`n)}`r x, @{valueof(`n)}`r y;
      int ?`r faty;

      x = rcalloc(r,n,sizeof(int));
      y = rcalloc(r,n,sizeof(int));
      faty = Core::mkfat(y,sizeof(int),n);

      for (i=0; i < n; i++) {
        x[i] = i + 1;
      }
      
      for (k=0; k<1000; k++) {
	for (i = 0; i < n; i++) {
          y[i] += x[i];
	}
      }

      fprintf(stdout, "%d %d\n", faty[0], faty[n-1]);
    }
    END_TIME
    return(0);
}
