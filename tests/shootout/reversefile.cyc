/*
 * http://www.bagley.org/~doug/shootout/
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include "timer.h"

#define MAXREAD 16

char ?strrealloc(char ?buf, unsigned sz) {
  char ?res = calloc(sz,sizeof(char));
  unsigned i = numelts(buf);
  for (unsigned j = 0; j < i; j++)
    res[j] = buf[j];
  return res;
}

int main(int argc, char ??argv) {
    int nread, len = 0, size = (4 * MAXREAD);
    char ? cp, ?offset, ?buf;
    START_TIME
    buf = calloc(size+1,sizeof(char));

    while (1) {
	if ((nread = read(0, (buf + len), MAXREAD)) > 0) {
	    len += nread;
	    if (MAXREAD > (size - len)) {
              size <<= 1;
              if (0 == (buf = strrealloc(buf, size + 2))) {
                  fprintf(stderr, "realloc failed\n");
                  exit(1);
              }
            }
	} else {
	    if ( 0 == nread) break;
	    if (-1 == nread) {
		perror("read");
		exit(1);
	    }
	}    
    }
    offset = buf + len;
    *offset = 0;
    for (cp = offset; cp > buf; --cp) {
	if ('\n' == *cp) {
	    *offset = 0;
	    if (cp < offset)
		fputs(offset = cp+1, stdout);
	}
    }
    if (cp < offset) {
	*offset = 0;
	fputs(cp, stdout);
    }
    free(buf);
    END_TIME
    return(0);
}
