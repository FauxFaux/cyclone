#include <core.h>
#include <pwd.h>
using Core;

namespace Cpwd {
  static struct Cpasswd {
    Cstring pw_name;
    Cstring pw_passwd;
    uid_t pw_uid;
    gid_t pw_gid;
    Cstring pw_gecos;
    Cstring pw_dir;
    Cstring pw_shell;
  };
  extern "C" {
    struct Cpasswd *getpwnam(const Cstring name);
    struct Cpasswd *getpwuid(uid_t uid);
  }
#define s2c(x) (string_to_Cstring(x))
#define c2s(x) (Cstring_to_string(x))
}

namespace Pwd;

struct passwd *getpwnam(string_t name) {
  struct Cpwd::Cpasswd *src = Cpwd::getpwnam(s2c(name));
  return src ? new passwd{.pw_name = c2s(src->pw_name),
                             .pw_passwd = c2s(src->pw_passwd),
                             .pw_uid = src->pw_uid,
                             .pw_gid = src->pw_gid,
                             .pw_gecos = c2s(src->pw_gecos),
                             .pw_dir = c2s(src->pw_dir),
                             .pw_shell = c2s(src->pw_shell)}
    : NULL;
}

struct passwd *getpwuid(uid_t uid) {
  struct Cpwd::Cpasswd *src = Cpwd::getpwuid(uid);
  return src ? new passwd{.pw_name = c2s(src->pw_name),
                             .pw_passwd = c2s(src->pw_passwd),
                             .pw_uid = src->pw_uid,
                             .pw_gid = src->pw_gid,
                             .pw_gecos = c2s(src->pw_gecos),
                             .pw_dir = c2s(src->pw_dir),
                             .pw_shell = c2s(src->pw_shell)}
    : NULL;
}
