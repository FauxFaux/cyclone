/* This file is part of the Cyclone Library.
   Copyright (C) 2001 Greg Morrisett

   This library is free software; you can redistribute it and/or it
   under the terms of the GNU Lesser General Public License as
   published by the Free Software Foundation; either version 2.1 of
   the License, or (at your option) any later version.

   This library is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with this library; see the file COPYING.LIB.  If not,
   write to the Free Software Foundation, Inc., 59 Temple Place, Suite
   330, Boston, MA 02111-1307 USA. */


#include <cfcntl.h>
#include <core.h>
using Core;

namespace Cfcntl {
  extern "C" int fcntl(int fd, int cmd);
  extern "C" int fcntl_with_arg(int fd, int cmd, long arg);
  extern "C" int fcntl_with_lock(int fd, int cmd, struct Std::flock *lock);
}

namespace Std;

int fcntl(int fd, int cmd, ...`r tunion FcntlArg argv) {
  if (argv.size == 0) return Cfcntl::fcntl(fd, cmd);
  else if (argv.size != 1) throw new Failure("fcntl: too many args");
  else switch (argv[0]) {
  case &Long(arg): return Cfcntl::fcntl_with_arg(fd, cmd, arg);
  case &Flock(lock): return Cfcntl::fcntl_with_lock(fd, cmd, lock);
  }
}
