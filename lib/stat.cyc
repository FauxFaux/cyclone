/* This file is part of the Cyclone Library.
   Copyright (C) 2000-2001 Greg Morrisett

   This library is free software; you can redistribute it and/or it
   under the terms of the GNU Lesser General Public License as
   published by the Free Software Foundation; either version 2.1 of
   the License, or (at your option) any later version.

   This library is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public
   License along with this library; see the file COPYING.LIB.  If not,
   write to the Free Software Foundation, Inc., 59 Temple Place, Suite
   330, Boston, MA 02111-1307 USA. */

#include <core.h>
#include <sys/stat.h>
using Core;

namespace Cstat {
  extern "C" {
    int open(Cstring pathname, int flags, mode_t mode);
    int stat(Cstring filename, struct stat_t @`r buf);
    int fstat(int fd, struct stat_t @`r buf);
    int lstat(Cstring filename, struct stat_t @`r buf);
  }
#define s2c(x) (string_to_Cstring(x))
}

namespace Std;

int open(string_t pathname, int flags, ...`r mode_t mode) {
  mode_t my_mode;
  if (mode.size == 0) my_mode = -1;
  else if (mode.size == 1) my_mode = mode[0];
  else throw new Failure("open: too many args");
  return Cstat::open(s2c(pathname), flags, my_mode);
}

int stat(string_t filename, struct stat_t @`r buf) {
  return Cstat::stat(s2c(filename), buf);
}

int lstat(string_t filename, struct stat_t @`r buf) {
  return Cstat::lstat(s2c(filename), buf);
}
