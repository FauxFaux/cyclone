#include "core.h"
#include "stdlib.h"

namespace Cstdlib {
  extern "C" {
    double _EXFUN(atof,(const Cstring _nptr));
#ifndef __STRICT_ANSI__
/*
    float _EXFUN(atoff,(const Cstring _nptr));
*/
#endif __STRICT_ANSI__
    int   _EXFUN(atoi,(const Cstring _nptr));
    long  _EXFUN(atol,(const Cstring _nptr));
    Cstring _EXFUN(getenv,(const Cstring __string));
    Cstring _EXFUN(_getenv_r,(struct _reent @, const Cstring __string));
    Cstring _EXFUN(_findenv,(_CONST Cstring, int *));
    Cstring _EXFUN(_findenv_r,(struct _reent *, _CONST Cstring, int *));
    int _EXFUN(putenv,(const Cstring __string));
    int	_EXFUN(_putenv_r,(struct _reent @, const Cstring __string));
    int	_EXFUN(setenv,(const Cstring __string, const Cstring __value, int __overwrite));
    int	_EXFUN(_setenv_r,(struct _reent @, const Cstring __string, const Cstring __value, int __overwrite));
#ifdef __CYGWIN__
    void _EXFUN(unsetenv,(const Cstring __string));
    void _EXFUN(_unsetenv_r,(struct _reent @, const Cstring __string));
#endif

#define s2c(x) (string_to_Cstring(x))
  }
}

using Core;
namespace Stdlib {
  double atof(string _nptr) {
    return Cstdlib::atof(s2c(_nptr));
  }
#ifndef __STRICT_ANSI__
/*
  float atoff(string _nptr) {
    return Cstdlib::atoff(s2c(_nptr));
  }
*/
#endif __STRICT_ANSI__
  int atoi(string _nptr) {
    return Cstdlib::atoi(s2c(_nptr));
  }
  long atol(string _nptr) {
    return Cstdlib::atol(s2c(_nptr));
  }
  string getenv(string name) {
    return Cstring_to_string(Cstdlib::getenv(s2c(name)));
  }
  /*
  string _getenv_r(struct _reent @r, string name) {
    return Cstring_to_string(Cstdlib::_getenv_r(r,s2c(name)));
  }
  string _findenv(string n, int *i) {
    return Cstring_to_string(Cstdlib::_findenv(s2c(n),i));
  }
  string _findenv_r(struct _reent @r, string n, int *i) {
    return Cstring_to_string(Cstdlib::_findenv_r(r,s2c(n),i));
  }
  */
  int putenv(string s) {
    return Cstdlib::putenv(s2c(s));
  }
  /*
  int _putenv_r(struct _reent @r, string s) {
    return Cstdlib::_putenv_r(r,s2c(s));
  }
   */
  int setenv(string s, string v, int overwrite) {
    return Cstdlib::setenv(s2c(s),s2c(v),overwrite);
  }
  /*
  int _setenv_r(struct _reent @r, string s, string v, int overwrite) {
    return Cstdlib::_setenv_r(r,s2c(s),s2c(v),overwrite);
  }
  */
#ifdef __CYGWIN__
  void unsetenv(string s) {
    Cstdlib::unsetenv(s2c(s));
  }
  /*
  void _unsetenv_r(struct _reent @r, string s) {
    Cstdlib::_unsetenv_r(r,s2c(s));
  }
  */
#endif
}
